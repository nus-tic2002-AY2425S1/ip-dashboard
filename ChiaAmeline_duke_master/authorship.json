[{"path":"src/main/java/jibberJabber/commands/ExceptionHandling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.commands;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.TaskList;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.taskType.Event;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.Task;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.taskType.ToDo;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.taskType.Deadline;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"import java.io.File;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"import java.io.IOException;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":" * The Exception handling class provides methods for handling exceptions","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"public class ExceptionHandling {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"     * Validates whether the input index for marking or unmarking a task is a valid integer","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"     * @param input the input string to validate.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the input is a valid integer, false if it\u0027s not.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"    //Solution below adapted from https://www.quora.com/What-is-the-function-of-a-isInteger-in-Java","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"    public static boolean isInteger(String input) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"        try {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"            Integer.parseInt( input );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"            return true;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"        catch (NumberFormatException e) { return false;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChiaAmeline"},"content":"     * Remove unnecessary whitespace between words and start / end of the string","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChiaAmeline"},"content":"     * @param input the input string.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChiaAmeline"},"content":"     * @return the string to check for extra spaces to be removed.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChiaAmeline"},"content":"    public static String removeSpaces(String input){","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChiaAmeline"},"content":"        return input.trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChiaAmeline"},"content":"     * Convert localDate date into formatted string","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChiaAmeline"},"content":"     * @param date the input date in local date data type.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChiaAmeline"},"content":"     * @return the string of the formatted date","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChiaAmeline"},"content":"    public static String formatDateInputsAsString(LocalDate date){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChiaAmeline"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChiaAmeline"},"content":"        return removeSpaces(date.format(inputFormatter));","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChiaAmeline"},"content":"     * Validates if the input contains only specified keywords or if no name has been provided for the task","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChiaAmeline"},"content":"     * @param input the input string to validate.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the input is empty or invalid, false if it is valid.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChiaAmeline"},"content":"    public static boolean isEmptyInput(String input) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChiaAmeline"},"content":"        input \u003d removeSpaces(input);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChiaAmeline"},"content":"        boolean isEmptyTask \u003d false;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChiaAmeline"},"content":"        if (input.equalsIgnoreCase(\"todo\") ||","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChiaAmeline"},"content":"                input.equalsIgnoreCase(\"deadline\") ||","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChiaAmeline"},"content":"                input.equalsIgnoreCase(\"event\") ||","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChiaAmeline"},"content":"                input.isEmpty()) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChiaAmeline"},"content":"            isEmptyTask \u003d true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChiaAmeline"},"content":"        } else {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChiaAmeline"},"content":"            String[] splitWord \u003d input.split(\" \");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChiaAmeline"},"content":"            String keyword \u003d splitWord[0];","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChiaAmeline"},"content":"            switch (keyword) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChiaAmeline"},"content":"                case \"todo\" -\u003e {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChiaAmeline"},"content":"                    if (removeSpaces(splitWord[1]).isEmpty()) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChiaAmeline"},"content":"                        isEmptyTask \u003d true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChiaAmeline"},"content":"                    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChiaAmeline"},"content":"                case \"deadline\" -\u003e {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChiaAmeline"},"content":"                    input \u003d removeSpaces(input.replace(\"deadline\", \"\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChiaAmeline"},"content":"                    if (input.contains(\"/by\")) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChiaAmeline"},"content":"                        String[] deadlineDetails \u003d input.split(\"/by\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChiaAmeline"},"content":"                        // Check if the task is empty","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChiaAmeline"},"content":"                        if (deadlineDetails.length \u003d\u003d 0 || removeSpaces(deadlineDetails[0]).isEmpty()) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChiaAmeline"},"content":"                            isEmptyTask \u003d true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChiaAmeline"},"content":"                        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChiaAmeline"},"content":"                    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChiaAmeline"},"content":"                case \"event\" -\u003e {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChiaAmeline"},"content":"                    input \u003d removeSpaces(input.replace(\"event\", \"\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChiaAmeline"},"content":"                    if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChiaAmeline"},"content":"                        return false;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChiaAmeline"},"content":"                    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChiaAmeline"},"content":"                    String[] eventDetails \u003d input.split(\"/from\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChiaAmeline"},"content":"                    if (eventDetails.length \u003d\u003d 0 || removeSpaces(eventDetails[0]).isEmpty()) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChiaAmeline"},"content":"                        isEmptyTask \u003d true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChiaAmeline"},"content":"                    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChiaAmeline"},"content":"            }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChiaAmeline"},"content":"        return isEmptyTask;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChiaAmeline"},"content":"     * Validates if there are duplicate tasks, including task type, already added to the list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList the list of tasks to check against.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChiaAmeline"},"content":"     * @param newTask      the new task to validate.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the task is duplicated, false if not.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChiaAmeline"},"content":"    public static boolean isTaskDuplicated(ArrayList\u003cTask\u003e todoTaskList, String newTask) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChiaAmeline"},"content":"        for (Task task : todoTaskList) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChiaAmeline"},"content":"            if(task instanceof ToDo){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChiaAmeline"},"content":"                newTask \u003d removeSpaces(newTask.replace(\"todo\", \"\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChiaAmeline"},"content":"                if (task.getTaskName().equalsIgnoreCase(newTask)){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChiaAmeline"},"content":"                    return true;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChiaAmeline"},"content":"            } else if (task instanceof Deadline){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChiaAmeline"},"content":"                newTask \u003d removeSpaces(newTask.replace(\"deadline\", \"\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChiaAmeline"},"content":"                if (newTask.contains(\"/by\")){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChiaAmeline"},"content":"                    String[] deadlineDetails \u003d newTask.split(\"/by\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChiaAmeline"},"content":"                    if (deadlineDetails.length \u003d\u003d 2 ){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChiaAmeline"},"content":"                        String newDeadlineTask \u003d removeSpaces(deadlineDetails[0]);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChiaAmeline"},"content":"                        String deadlineOfTask \u003d removeSpaces(deadlineDetails[1]);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChiaAmeline"},"content":"                        String formattedBy \u003d formatDateInputsAsString(((Deadline) task).by);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChiaAmeline"},"content":"                        if (formattedBy.equalsIgnoreCase(deadlineOfTask) \u0026\u0026","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChiaAmeline"},"content":"                            task.getTaskName().equalsIgnoreCase(newDeadlineTask)) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChiaAmeline"},"content":"                                return true;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChiaAmeline"},"content":"                        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChiaAmeline"},"content":"                    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChiaAmeline"},"content":"            } else if (task instanceof Event){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChiaAmeline"},"content":"                newTask \u003d removeSpaces(newTask.replace(\"event\", \"\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChiaAmeline"},"content":"                if (newTask.contains(\"/from\") \u0026\u0026 newTask.contains(\"/to\")){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChiaAmeline"},"content":"                    String[] eventDetails \u003d newTask.split(\"/from\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChiaAmeline"},"content":"                    if (eventDetails.length \u003d\u003d 2){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChiaAmeline"},"content":"                        String newEventTask \u003d removeSpaces(eventDetails[0]);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChiaAmeline"},"content":"                        String[] taskDurationDetails \u003d eventDetails[1].split(\"/to\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChiaAmeline"},"content":"                        if (taskDurationDetails.length \u003d\u003d 2){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChiaAmeline"},"content":"                            String from \u003d removeSpaces(taskDurationDetails[0]);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChiaAmeline"},"content":"                            String to \u003d removeSpaces(taskDurationDetails[1]);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChiaAmeline"},"content":"                            String fromDateInput \u003d formatDateInputsAsString(((Event) task).from);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChiaAmeline"},"content":"                            String toDateInput \u003d formatDateInputsAsString(((Event) task).to);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChiaAmeline"},"content":"                            if (task.getTaskName().equalsIgnoreCase(newEventTask) \u0026\u0026","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChiaAmeline"},"content":"                                fromDateInput.equalsIgnoreCase(from) \u0026\u0026","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChiaAmeline"},"content":"                                toDateInput.equalsIgnoreCase(to)) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChiaAmeline"},"content":"                                    return true;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChiaAmeline"},"content":"                            }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChiaAmeline"},"content":"                        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChiaAmeline"},"content":"                    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChiaAmeline"},"content":"            }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChiaAmeline"},"content":"        return false;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChiaAmeline"},"content":"     * Validates if the task has already been marked or unmarked in the list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList the TaskList containing all tasks objects","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChiaAmeline"},"content":"     * @param index        the index of the task to validate.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isDone       the status of the task","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the task is already marked/unmarked as per the input, false if not.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChiaAmeline"},"content":"    public static boolean isTaskMarked(TaskList todoTaskList, int index, boolean isDone){","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChiaAmeline"},"content":"        try{","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChiaAmeline"},"content":"            return todoTaskList.getTaskById(index - 1).isDone \u003d\u003d isDone;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChiaAmeline"},"content":"        } catch (Exception e){ return false;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChiaAmeline"},"content":"     * Validates if the provided deadline for the task is missing","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChiaAmeline"},"content":"     * @param deadlineDetails an array of deadline details split by \"/by\".","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the deadline details format are valid, false if not.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChiaAmeline"},"content":"    public static boolean isValidDeadlineInput(String[] deadlineDetails) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChiaAmeline"},"content":"        return deadlineDetails.length \u003e\u003d 2 \u0026\u0026 !removeSpaces(deadlineDetails[1]).isEmpty();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ChiaAmeline"},"content":"     * Validates if the event period provided for the task is missing","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ChiaAmeline"},"content":"     * @param eventDetails an array of event details split by \"/from\" and by \"/to\"","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the event details format are valid, false if not.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ChiaAmeline"},"content":"    public static boolean isValidEventInput(String[] eventDetails) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ChiaAmeline"},"content":"        if (eventDetails.length \u003c 2) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ChiaAmeline"},"content":"            return false;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ChiaAmeline"},"content":"        String[] eventOfTask \u003d eventDetails[1].split(\"/to\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ChiaAmeline"},"content":"        return eventOfTask.length \u003e\u003d 2 \u0026\u0026 !removeSpaces(eventOfTask[0]).isEmpty() \u0026\u0026 !removeSpaces(eventOfTask[1]).isEmpty();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ChiaAmeline"},"content":"     * Validates if the file is created","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ChiaAmeline"},"content":"     * @param file the file to check.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the file was created successfully, false if not.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ChiaAmeline"},"content":"    public static boolean isFileCreated (File file) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ChiaAmeline"},"content":"        try {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ChiaAmeline"},"content":"            return file.createNewFile();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ChiaAmeline"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ChiaAmeline"},"content":"            return false;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ChiaAmeline"},"content":"     * Validates if the given date string matches the expected format.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ChiaAmeline"},"content":"     * @param date the date string to check against.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the date format is invalid, false if not.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ChiaAmeline"},"content":"    public static boolean isInvalidDate(String date){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ChiaAmeline"},"content":"        Pattern pattern \u003d Pattern.compile(\"^\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}$\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ChiaAmeline"},"content":"        Matcher matcher \u003d pattern.matcher(date);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ChiaAmeline"},"content":"        return !matcher.matches();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ChiaAmeline"},"content":"     * Validates if the given keyword string matches the enum keywords","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the date format is invalid, false if not.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ChiaAmeline"},"content":"    public static boolean isInvalidKeywordCommand(String keyword){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ChiaAmeline"},"content":"        try{","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ChiaAmeline"},"content":"            Keywords.valueOf(keyword.toUpperCase());","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ChiaAmeline"},"content":"            return false;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ChiaAmeline"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ChiaAmeline"},"content":"            return true;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":227}},{"path":"src/main/java/jibberJabber/commands/KeywordHandling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.commands;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.TaskList;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.taskType.Event;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.Task;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.taskType.ToDo;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.taskType.Deadline;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.ui.Message;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"import java.util.Map;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"import static java.time.LocalDate.parse;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":" * The keyword class handles keyword-specific operations for task management, such as adding, marking, removing, and listing tasks.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"public class KeywordHandling {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"    // Exception checks for processMarkKeyword / processRemoveKeyword methods:","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"    // 1. Check if the second input value is a numerical string","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"    // 2. Check if the input string is out of bound from the task list or index is 0 (invalid index)","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"    private boolean isInvalidIndex(TaskList todoTaskList, String index) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"        int totalNumberOfTaskObj \u003d todoTaskList.getTotalTaskCount();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"        if (totalNumberOfTaskObj \u003d\u003d 0) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printEmptyMessage(true);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"            return true;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"        if (!ExceptionHandling.isInteger(index)) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printInvalidIntegerMessage();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"            return true;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"        int convertedIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChiaAmeline"},"content":"        if (convertedIndex \u003e\u003d totalNumberOfTaskObj || convertedIndex \u003c 0) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printOutOfBoundsMessage();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChiaAmeline"},"content":"            return true;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChiaAmeline"},"content":"        return false;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChiaAmeline"},"content":"     * Convert string date into formatted local date","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChiaAmeline"},"content":"     * @param date the input date in local date data type.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChiaAmeline"},"content":"     * @param pattern the pattern to format the date","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChiaAmeline"},"content":"     * @return the local date of the formatted date","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChiaAmeline"},"content":"    public static LocalDate formatDateInputsAsLocalDate(String date, String pattern){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChiaAmeline"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChiaAmeline"},"content":"        return parse(date, inputFormatter);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChiaAmeline"},"content":"     * Creates a map object to track the start and end date after word split","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTask     the task description.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChiaAmeline"},"content":"     * @param splitRegex the word to split the string","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChiaAmeline"},"content":"     * @return a map object containing the start and end date after split","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChiaAmeline"},"content":"    // Since multiple codes require the same codes, have created this method to capture and reuse across","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChiaAmeline"},"content":"    public Map\u003cString, LocalDate\u003e parseStartAndEndDates(String todoTask, String splitRegex){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChiaAmeline"},"content":"        Map\u003cString, LocalDate\u003e dateRangeMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChiaAmeline"},"content":"        String[] splitWord \u003d todoTask.split(splitRegex);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChiaAmeline"},"content":"        if (splitWord.length !\u003d 2) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printInvalidDateFormatMessage();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChiaAmeline"},"content":"            return dateRangeMap;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChiaAmeline"},"content":"        String startDate \u003d ExceptionHandling.removeSpaces(splitWord[0]);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChiaAmeline"},"content":"        String endDate \u003d ExceptionHandling.removeSpaces(splitWord[1]);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChiaAmeline"},"content":"        try {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChiaAmeline"},"content":"            LocalDate convertedStartDateTime \u003d formatDateInputsAsLocalDate(startDate, \"d/M/yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChiaAmeline"},"content":"            LocalDate convertedEndDateTime \u003d formatDateInputsAsLocalDate(endDate, \"d/M/yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChiaAmeline"},"content":"            dateRangeMap.put(\"startDate\", convertedStartDateTime);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChiaAmeline"},"content":"            dateRangeMap.put(\"endDate\", convertedEndDateTime);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChiaAmeline"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printInvalidDateFormatMessage();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChiaAmeline"},"content":"        return dateRangeMap;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChiaAmeline"},"content":"     * Lists all tasks in the TaskList. If the list is empty, a message is printed.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList the TaskList to display.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChiaAmeline"},"content":"    public void processListKeyword(TaskList todoTaskList) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChiaAmeline"},"content":"        if (todoTaskList.getTotalTaskCount() \u003d\u003d 0){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printEmptyMessage(true);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChiaAmeline"},"content":"        } else todoTaskList.printTaskList();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChiaAmeline"},"content":"     * Check if the task have been marked / unmarked before","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList the TaskList containing tasks.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChiaAmeline"},"content":"     * @param index        the index of the task to mark/unmark.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isMark       true to mark the task as done, false to unmark it.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isFromFile   indicates whether the task was read from a file: true if read from file (not to display default message), false if its from user input (display default message)","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChiaAmeline"},"content":"    public void processMarkKeyword(TaskList todoTaskList, String index, boolean isMark, boolean isFromFile){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChiaAmeline"},"content":"        if (isInvalidIndex(todoTaskList, index)){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChiaAmeline"},"content":"            return;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChiaAmeline"},"content":"        int convertedIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChiaAmeline"},"content":"        if (ExceptionHandling.isTaskMarked(todoTaskList, convertedIndex + 1, isMark)){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printMarkedTaskMessage();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChiaAmeline"},"content":"            return;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChiaAmeline"},"content":"        Task markTask \u003d todoTaskList.getTaskById(convertedIndex);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChiaAmeline"},"content":"        markTask.setTaskMarkStatus(todoTaskList, convertedIndex, isMark, isFromFile);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChiaAmeline"},"content":"     * Removes a task from the TaskList.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList the TaskList containing tasks.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChiaAmeline"},"content":"     * @param index        the index of the task to remove.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChiaAmeline"},"content":"    public void processRemoveKeyword(TaskList todoTaskList, String index){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChiaAmeline"},"content":"        if (isInvalidIndex(todoTaskList, index)){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChiaAmeline"},"content":"            return;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChiaAmeline"},"content":"        int convertedIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChiaAmeline"},"content":"        Task deleteTask \u003d todoTaskList.removeTask(convertedIndex);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChiaAmeline"},"content":"        int totalNumberOfTodoTask \u003d Task.decreaseTotalNumberOfTodoTask();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChiaAmeline"},"content":"        Message.printDeleteTaskMessage(totalNumberOfTodoTask, deleteTask.printAddedTask());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChiaAmeline"},"content":"     * Processes task keyword -  todo / deadlines / events","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTask     the task description.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList the TaskList to add the task to.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isFromFile   indicates whether the task was read from a file: true if read from file (not to display default message), false if its from","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChiaAmeline"},"content":"    public void processTodoTask(String todoTask, TaskList todoTaskList, boolean isFromFile) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChiaAmeline"},"content":"        String newTodoTask \u003d ExceptionHandling.removeSpaces( todoTask.replaceAll(\"(?i)todo\", \"\"));","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChiaAmeline"},"content":"        ToDo inputTodoTask \u003d  new ToDo(newTodoTask);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChiaAmeline"},"content":"        todoTaskList.addTask(inputTodoTask);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChiaAmeline"},"content":"        if (!isFromFile) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printAddedTaskMessage(todoTaskList.getTotalTaskCount(), inputTodoTask.printAddedTask());","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChiaAmeline"},"content":"     * Processes a \"deadline\" task and adds it to the TaskList.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTask     the task description with a deadline.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList the TaskList to add the task to.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isFromFile   indicates whether the task was read from a file: true if read from file (not to display default message), false if its from","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChiaAmeline"},"content":"    public void processDeadlineTask(String todoTask, TaskList todoTaskList, boolean isFromFile) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate deadlineDateTime;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChiaAmeline"},"content":"        String deadlineTask \u003d ExceptionHandling.removeSpaces(todoTask.replaceAll(\"(?i)deadline\", \"\"));","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChiaAmeline"},"content":"        String[] deadlineDetails \u003d deadlineTask.split(\"(?i)/by\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChiaAmeline"},"content":"        String newDeadlineTask \u003d ExceptionHandling.removeSpaces(deadlineDetails[0]);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChiaAmeline"},"content":"        String deadlineOfTask \u003d ExceptionHandling.removeSpaces(deadlineDetails[1]);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChiaAmeline"},"content":"        try {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChiaAmeline"},"content":"            deadlineDateTime \u003d formatDateInputsAsLocalDate(deadlineOfTask, \"d/M/yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChiaAmeline"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printInvalidDateFormatMessage();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChiaAmeline"},"content":"            return;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChiaAmeline"},"content":"        Deadline inputDeadlineTask \u003d new Deadline(newDeadlineTask, deadlineDateTime);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChiaAmeline"},"content":"        todoTaskList.addTask(inputDeadlineTask);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChiaAmeline"},"content":"        if (!isFromFile) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printAddedTaskMessage(todoTaskList.getTotalTaskCount(), inputDeadlineTask.printAddedTask());","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChiaAmeline"},"content":"     * Processes an \"event\" task and adds it to the TaskList.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTask     the task description with event period range","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList the TaskList to add the task to.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isFromFile   indicates whether the task was read from a file: true if read from file (not to display default message), false if its from","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChiaAmeline"},"content":"    public void processEventTask(String todoTask, TaskList todoTaskList, boolean isFromFile) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChiaAmeline"},"content":"        String eventTask \u003d ExceptionHandling.removeSpaces(todoTask.replaceAll(\"(?i)event\", \"\"));","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChiaAmeline"},"content":"        String[] eventDetails \u003d eventTask.split(\"(?i)/from\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChiaAmeline"},"content":"        String newEventTask \u003d ExceptionHandling.removeSpaces(eventDetails[0]);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChiaAmeline"},"content":"        Map\u003cString, LocalDate\u003e dateRange \u003d parseStartAndEndDates(eventDetails[1], \"(?i)/to\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChiaAmeline"},"content":"        Event inputEventTask \u003d new Event(newEventTask, dateRange.get(\"startDate\"), dateRange.get(\"endDate\"));","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ChiaAmeline"},"content":"        todoTaskList.addTask(inputEventTask);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ChiaAmeline"},"content":"        if (!isFromFile) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printAddedTaskMessage(todoTaskList.getTotalTaskCount(), inputEventTask.printAddedTask());","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ChiaAmeline"},"content":"     * Processes task that needs to be completed within a date period","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTask the task description with the date period","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList the task list to sieve through the task.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ChiaAmeline"},"content":"    */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ChiaAmeline"},"content":"    public void processCompleteTaskWithinPeriod(String todoTask, TaskList todoTaskList){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ChiaAmeline"},"content":"        todoTask \u003d ExceptionHandling.removeSpaces(todoTask.replaceAll(\"(?i)complete tasks? between\", \"\"));","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ChiaAmeline"},"content":"        Map\u003cString, LocalDate\u003e dateRange \u003d parseStartAndEndDates(todoTask, \"/to\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate startDate \u003d dateRange.get(\"startDate\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate endDate \u003d dateRange.get(\"endDate\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ChiaAmeline"},"content":"        if (dateRange.isEmpty() || startDate \u003d\u003d null || endDate \u003d\u003d null || startDate.isAfter(endDate)) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printInvalidTimeMessage();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ChiaAmeline"},"content":"            return;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList tasksWithinPeriod \u003d todoTaskList.getTasksWithinPeriod(startDate, endDate);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ChiaAmeline"},"content":"        if (tasksWithinPeriod.getTotalTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printNoTaskFoundWithinPeriodMessage();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ChiaAmeline"},"content":"        else {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ChiaAmeline"},"content":"            tasksWithinPeriod.printTaskList();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ChiaAmeline"},"content":"     * Processes task that contains the keyword","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTask the task description with event period range","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ChiaAmeline"},"content":"    public void processFindKeyword(String todoTask, TaskList todoTaskList){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ChiaAmeline"},"content":"        todoTask \u003d ExceptionHandling.removeSpaces(todoTask.replaceAll(\"(?i)find\", \"\"));","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ChiaAmeline"},"content":"        if (todoTask.isEmpty()) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printNoTaskFoundWithKeywordMessage();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ChiaAmeline"},"content":"            return;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList tasksWithinPeriod \u003d todoTaskList.getTasksWithMatchingKeyword(todoTask, todoTaskList);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ChiaAmeline"},"content":"        if (tasksWithinPeriod.getTotalTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printNoTaskFoundWithKeywordMessage();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ChiaAmeline"},"content":"        else {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ChiaAmeline"},"content":"            tasksWithinPeriod.printTaskList();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":226}},{"path":"src/main/java/jibberJabber/commands/Keywords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.commands;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"public enum Keywords {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"    COMPLETE(\"complete\"),","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"    FIND(\"find\"),;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"    private final String keyword;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"    Keywords(String keyword) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"    public String getKeyword() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"        return keyword;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":23}},{"path":"src/main/java/jibberJabber/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.commands;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.Task;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.TaskFiles;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.TaskList;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.ui.Message;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"import static jibberJabber.ui.Message.printMissingCommandKeywordMessage;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":" * The parser class handles parsing and processing of user commands for the task management system.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"public class Parser {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"    private final TaskFiles taskFiles;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"    private final KeywordHandling keywordHandling;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"     * Constructs a Parser object with the specified TaskList and TaskFiles.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"     * @param taskList  the TaskList of the array list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"     * @param taskFiles the TaskFiles that contain the text file of the task list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"    public Parser(TaskList taskList, TaskFiles taskFiles) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"        this.taskFiles \u003d taskFiles;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"        this.keywordHandling \u003d new KeywordHandling();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"     * Processes a user keyword command and executes the respective operation.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTask the task information","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"     * @return false if the command is \"bye\" (to exit the program), true to continue the program","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"    public boolean hasProcessCommandSucceed(String todoTask) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChiaAmeline"},"content":"        assert todoTask !\u003d null : \"It looks like you forgot to specify keywords!\";","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChiaAmeline"},"content":"        // Check for empty input string and bypass it","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChiaAmeline"},"content":"        if (ExceptionHandling.isEmptyInput(todoTask)) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printEmptyMessage(false);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChiaAmeline"},"content":"            return true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChiaAmeline"},"content":"        String[] splitTodoTask \u003d todoTask.split(\" \");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChiaAmeline"},"content":"        String splitWord \u003d splitTodoTask[0];","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChiaAmeline"},"content":"        // Check to ensure the proper keyword is passed since we are checking against ENUM","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChiaAmeline"},"content":"        if (ExceptionHandling.isInvalidKeywordCommand(splitWord)) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChiaAmeline"},"content":"            printMissingCommandKeywordMessage();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChiaAmeline"},"content":"            return true;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChiaAmeline"},"content":"        switch (Keywords.valueOf(splitWord.toUpperCase())) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChiaAmeline"},"content":"            case BYE:","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChiaAmeline"},"content":"                return false;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChiaAmeline"},"content":"            case LIST:","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChiaAmeline"},"content":"                keywordHandling.processListKeyword(taskList);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChiaAmeline"},"content":"                return true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChiaAmeline"},"content":"            case COMPLETE:","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChiaAmeline"},"content":"                keywordHandling.processCompleteTaskWithinPeriod(todoTask.toLowerCase(), taskList);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChiaAmeline"},"content":"                return true;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChiaAmeline"},"content":"            case FIND:","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChiaAmeline"},"content":"                keywordHandling.processFindKeyword(todoTask.toLowerCase(), taskList);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChiaAmeline"},"content":"                return true;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChiaAmeline"},"content":"            case MARK:","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChiaAmeline"},"content":"                if (splitTodoTask.length \u003c 2) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChiaAmeline"},"content":"                    Message.printEmptyMessage(true);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChiaAmeline"},"content":"                    return true;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChiaAmeline"},"content":"                keywordHandling.processMarkKeyword(taskList, splitTodoTask[1], true, false);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChiaAmeline"},"content":"                taskFiles.writeToTextFile(taskList, taskList.getLastTask(), false);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChiaAmeline"},"content":"                return true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChiaAmeline"},"content":"            case UNMARK:","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChiaAmeline"},"content":"                if (splitTodoTask.length \u003c 2) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChiaAmeline"},"content":"                    Message.printEmptyMessage(true);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChiaAmeline"},"content":"                    return true;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChiaAmeline"},"content":"                keywordHandling.processMarkKeyword(taskList, splitTodoTask[1], false, false);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChiaAmeline"},"content":"                taskFiles.writeToTextFile(taskList, taskList.getLastTask(), false);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChiaAmeline"},"content":"                return true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChiaAmeline"},"content":"            case DELETE:","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChiaAmeline"},"content":"                if (splitTodoTask.length \u003c 2) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChiaAmeline"},"content":"                    Message.printEmptyMessage(true);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChiaAmeline"},"content":"                    return true;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChiaAmeline"},"content":"                keywordHandling.processRemoveKeyword(taskList, splitTodoTask[1]);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChiaAmeline"},"content":"                if (taskList.getTasks().isEmpty()){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChiaAmeline"},"content":"                    taskFiles.writeToTextFile(new TaskList(), null, false);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChiaAmeline"},"content":"                    return true;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChiaAmeline"},"content":"                taskFiles.writeToTextFile(taskList, taskList.getTasks().get(taskList.getTasks().size() - 1), false);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChiaAmeline"},"content":"                return true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChiaAmeline"},"content":"            case TODO:","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChiaAmeline"},"content":"            case DEADLINE:","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChiaAmeline"},"content":"            case EVENT:","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChiaAmeline"},"content":"                if (ExceptionHandling.isTaskDuplicated(taskList.getTasks(), todoTask.toLowerCase())) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChiaAmeline"},"content":"                    // Checks for duplicated tasks being added","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChiaAmeline"},"content":"                    Message.printDuplicateMessage();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChiaAmeline"},"content":"                } else {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChiaAmeline"},"content":"                    boolean taskAdded \u003d Task.addTask(taskList, todoTask, splitWord, keywordHandling, false);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChiaAmeline"},"content":"                    if (!taskList.getTasks().isEmpty() \u0026\u0026 taskAdded) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChiaAmeline"},"content":"                        taskFiles.writeToTextFile(taskList, taskList.getTasks().get(taskList.getTasks().size() - 1), true);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChiaAmeline"},"content":"                    } else {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChiaAmeline"},"content":"                        Message.printFailedToAppendToFileMessage();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChiaAmeline"},"content":"                    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChiaAmeline"},"content":"                return true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChiaAmeline"},"content":"            default:","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChiaAmeline"},"content":"                printMissingCommandKeywordMessage();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChiaAmeline"},"content":"                return true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-11-15","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":108}},{"path":"src/main/java/jibberJabber/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.tasks;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.commands.ExceptionHandling;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.commands.KeywordHandling;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.ui.Message;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"import java.util.Map;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":" * The Task class represents a general task, with methods to handle task status, track task counts, and interact with task lists.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"public class Task {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"    protected String taskName;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"    public boolean isDone;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"    private static int totalNumberOfTodoTask \u003d 0;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"     * Constructs a Task object with a specified task name.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"        totalNumberOfTodoTask++;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"     * If the count is greater than zero, the method decreases the total number of To-Do tasks","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"     * @return The updated total number of To-Do tasks object within the array list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChiaAmeline"},"content":"    public static int decreaseTotalNumberOfTodoTask(){","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChiaAmeline"},"content":"        if (totalNumberOfTodoTask \u003e 0){","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChiaAmeline"},"content":"            totalNumberOfTodoTask --;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChiaAmeline"},"content":"        return totalNumberOfTodoTask;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChiaAmeline"},"content":"     * Retrieve the name of the task of the object","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChiaAmeline"},"content":"     * @return The task name as a String.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChiaAmeline"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChiaAmeline"},"content":"        return taskName;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChiaAmeline"},"content":"     * Gets the status icon of the task - Done / Undone","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChiaAmeline"},"content":"     * @return \"X\" if the task is done, otherwise an empty space (string)","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChiaAmeline"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChiaAmeline"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChiaAmeline"},"content":"     * Sets the mark status as done or undone.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList The list containing all tasks objects.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChiaAmeline"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isDone The mark status of the task: true if done, false if undone.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isFromFile Indicates whether the task was read from a file: true if read from file (not to display default message), false if its from user input (display default message)","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChiaAmeline"},"content":"    public void setTaskMarkStatus(TaskList todoTaskList, int index, boolean isDone, boolean isFromFile) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChiaAmeline"},"content":"        Task markTask \u003d todoTaskList.getTaskById(index);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChiaAmeline"},"content":"        markTask.isDone \u003d isDone;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChiaAmeline"},"content":"        if (!isFromFile) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printTaskStatusMessage(isDone, markTask);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChiaAmeline"},"content":"     * Convert local date into formatted string date","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChiaAmeline"},"content":"     * @param date the input date in local date data type.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChiaAmeline"},"content":"     * @return the string date of the formatted date","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChiaAmeline"},"content":"    public static String convertDateInputString(LocalDate date){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChiaAmeline"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChiaAmeline"},"content":"        return date.format(dateFormat);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChiaAmeline"},"content":"     * Returns a formatted string representing the task name and its respective status icon","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChiaAmeline"},"content":"     * @return The formatted task string.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChiaAmeline"},"content":"    public String printAddedTask(){","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChiaAmeline"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskName;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChiaAmeline"},"content":"     * Adds a new task to the task list based on the keyword, such as \"todo\", \"deadline\", or \"event\".","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList The list that the new task will be added into.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTask The details of the task to be added.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChiaAmeline"},"content":"     * @param keyword The task type (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChiaAmeline"},"content":"     * @param keywordHandling The keyword class to handle all keyword operations.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isFromFile Indicates whether the task was read from a file: true if read from file (not to display default message), false if its from user input (display default message)","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChiaAmeline"},"content":"    public static boolean addTask(TaskList todoTaskList, String todoTask, String keyword, KeywordHandling keywordHandling , boolean isFromFile){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChiaAmeline"},"content":"        keyword \u003d ExceptionHandling.removeSpaces(keyword).toLowerCase();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChiaAmeline"},"content":"        switch (keyword){","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChiaAmeline"},"content":"            case \"todo\":","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChiaAmeline"},"content":"                keywordHandling.processTodoTask(todoTask, todoTaskList, isFromFile);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChiaAmeline"},"content":"                break;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChiaAmeline"},"content":"            case \"deadline\":","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChiaAmeline"},"content":"                String deadlineTask \u003d ExceptionHandling.removeSpaces(todoTask.replaceAll(\"(?i)deadline\", \"\"));","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChiaAmeline"},"content":"                String[] deadlineDetails \u003d deadlineTask.split(\"/by\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChiaAmeline"},"content":"                // Checks if deadline is provided","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChiaAmeline"},"content":"                if (!ExceptionHandling.isValidDeadlineInput(deadlineDetails)) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChiaAmeline"},"content":"                    Message.printMissingParameterMessage(\"deadline\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChiaAmeline"},"content":"                    return false;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChiaAmeline"},"content":"                String deadlineOfTask \u003d ExceptionHandling.removeSpaces(deadlineDetails[1]);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChiaAmeline"},"content":"                if (ExceptionHandling.isInvalidDate(deadlineOfTask)){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChiaAmeline"},"content":"                    Message.printInvalidDateFormatMessage();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChiaAmeline"},"content":"                    return false;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChiaAmeline"},"content":"                keywordHandling.processDeadlineTask(todoTask, todoTaskList, isFromFile);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChiaAmeline"},"content":"                break;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChiaAmeline"},"content":"            case \"event\":","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChiaAmeline"},"content":"                String eventTask \u003d ExceptionHandling.removeSpaces(todoTask.replaceAll(\"(?i)event\", \"\"));","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChiaAmeline"},"content":"                if (!eventTask.contains(\"/from\") || !eventTask.contains(\"/to\")) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChiaAmeline"},"content":"                    // Checks if the input value is in proper format","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChiaAmeline"},"content":"                    Message.printMissingParameterMessage(\"event\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChiaAmeline"},"content":"                    return false;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChiaAmeline"},"content":"                String[] eventDetails \u003d eventTask.split(\"/from\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChiaAmeline"},"content":"                if (!ExceptionHandling.isValidEventInput(eventDetails)) {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChiaAmeline"},"content":"                    // Checks if event duration is provided","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChiaAmeline"},"content":"                    Message.printMissingParameterMessage(\"event\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChiaAmeline"},"content":"                    return false;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChiaAmeline"},"content":"                String[] eventDurationDetails \u003d eventDetails[1].split(\"(?i)/to\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChiaAmeline"},"content":"                if (ExceptionHandling.isInvalidDate(ExceptionHandling.removeSpaces(eventDurationDetails[0])) ||","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChiaAmeline"},"content":"                    ExceptionHandling.isInvalidDate(ExceptionHandling.removeSpaces(eventDurationDetails[1]))) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChiaAmeline"},"content":"                        Message.printInvalidDateFormatMessage();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChiaAmeline"},"content":"                        return false;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChiaAmeline"},"content":"                Map\u003cString, LocalDate\u003e dateRange \u003d keywordHandling.parseStartAndEndDates(eventDetails[1], \"(?i)/to\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChiaAmeline"},"content":"                LocalDate startDate \u003d dateRange.get(\"startDate\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChiaAmeline"},"content":"                LocalDate endDate \u003d dateRange.get(\"endDate\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChiaAmeline"},"content":"                if (startDate.isAfter(endDate)){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChiaAmeline"},"content":"                    Message.printInvalidTimeMessage();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChiaAmeline"},"content":"                    return false;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChiaAmeline"},"content":"                keywordHandling.processEventTask(todoTask, todoTaskList, isFromFile);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChiaAmeline"},"content":"                break;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChiaAmeline"},"content":"        return true;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-11-15","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":151}},{"path":"src/main/java/jibberJabber/tasks/TaskFiles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.tasks;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.commands.ExceptionHandling;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.commands.KeywordHandling;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.ui.Message;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"import java.io.File;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"import java.io.IOException;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":" * The Task Files class handles file related operations such as storing and retrieving tasks in the task management system.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"public class TaskFiles {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"    private final String filePath;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"     * Constructs a Task Files object with the specified file path (relative path)","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"     * @param filePath the path to the file for storing tasks.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"    public TaskFiles(String filePath) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"     * Extracts tasks from the file and populates them into the TaskList array list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"     * If the file does not exist, a new file is created using the user\u0027s directory path, and an empty TaskList is returned.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"     * If the file exist, it reads all the contents from the file and save into the TaskList","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"     * @return a TaskList containing tasks read from the file.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"    public TaskList extractTasksFromFile() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList todoTaskList \u003d new TaskList();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChiaAmeline"},"content":"        int itemIndex \u003d 0;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChiaAmeline"},"content":"        String relativePath \u003d System.getProperty(\"user.dir\") + File.separator + \"data/tasks.txt\";","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChiaAmeline"},"content":"        TaskFiles taskFiles \u003d new TaskFiles(relativePath);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChiaAmeline"},"content":"        File file \u003d new File(relativePath);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChiaAmeline"},"content":"        try {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChiaAmeline"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChiaAmeline"},"content":"            if (taskFiles.fileExists()) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChiaAmeline"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChiaAmeline"},"content":"                    // Keep track of the index of the added item from the list","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChiaAmeline"},"content":"                    itemIndex ++;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChiaAmeline"},"content":"                    KeywordHandling keywordHandling \u003d new KeywordHandling();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChiaAmeline"},"content":"                    // To reconvert back to the defaulted input date format","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChiaAmeline"},"content":"                    String task \u003d ExceptionHandling.removeSpaces(scanner.nextLine());","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChiaAmeline"},"content":"                    boolean isTaskCompleted \u003d task.contains(\"[X]\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChiaAmeline"},"content":"                    char keywordCharacter \u003d task.charAt(1);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChiaAmeline"},"content":"                    task \u003d switch (keywordCharacter) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChiaAmeline"},"content":"                            case \u0027T\u0027-\u003e ExceptionHandling.removeSpaces(task.replaceAll(\"\\\\[T]\\\\[([ X])]\", \"todo\"));","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChiaAmeline"},"content":"                            case \u0027D\u0027 -\u003e {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChiaAmeline"},"content":"                                task \u003d task.replaceAll(\"\\\\[D]\\\\[([ X])]\", \"deadline\").replaceAll(\"\\\\(by:\", \"/by\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChiaAmeline"},"content":"                                task \u003d ExceptionHandling.removeSpaces(task);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChiaAmeline"},"content":"                                String[] splitDeadlineTask \u003d task.split(\"/by\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChiaAmeline"},"content":"                                // Removing closing parenthesis after splitting to reconvert the date","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChiaAmeline"},"content":"                                String deadline \u003d ExceptionHandling.removeSpaces(splitDeadlineTask[1].replace(\")\", \"\"));","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChiaAmeline"},"content":"                                String deadlineTask \u003d ExceptionHandling.removeSpaces(splitDeadlineTask[0]);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChiaAmeline"},"content":"                                LocalDate byDate \u003d KeywordHandling.formatDateInputsAsLocalDate(deadline, \"MMM dd yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChiaAmeline"},"content":"                                String formattedByDate \u003d ExceptionHandling.formatDateInputsAsString(byDate);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChiaAmeline"},"content":"                                yield deadlineTask + \"/by \" + formattedByDate;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChiaAmeline"},"content":"                            }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChiaAmeline"},"content":"                            default -\u003e {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChiaAmeline"},"content":"                                task \u003d task.replaceAll(\"\\\\[E]\\\\[([ X])]\", \"event\").replaceAll(\"\\\\(from:\", \"/from\").replaceAll(\"to:\", \"/to\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChiaAmeline"},"content":"                                task \u003d ExceptionHandling.removeSpaces(task);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChiaAmeline"},"content":"                                String[] splitEventTask \u003d task.split(\"/from\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChiaAmeline"},"content":"                                String eventTask \u003d ExceptionHandling.removeSpaces(splitEventTask[0]);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChiaAmeline"},"content":"                                // Removing closing parenthesis after splitting to reconvert the date","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChiaAmeline"},"content":"                                String from \u003d ExceptionHandling.removeSpaces(splitEventTask[1].split(\"/to\")[0].replace(\")\", \"\"));","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChiaAmeline"},"content":"                                String to \u003d ExceptionHandling.removeSpaces(splitEventTask[1].split(\"/to\")[1].replace(\")\", \"\"));","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChiaAmeline"},"content":"                                LocalDate fromDate \u003d KeywordHandling.formatDateInputsAsLocalDate(from, \"MMM dd yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChiaAmeline"},"content":"                                LocalDate toDate \u003d KeywordHandling.formatDateInputsAsLocalDate(to, \"MMM dd yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChiaAmeline"},"content":"                                String formattedFromDate \u003d ExceptionHandling.formatDateInputsAsString(fromDate);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChiaAmeline"},"content":"                                String formattedToDate \u003d ExceptionHandling.formatDateInputsAsString(toDate);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChiaAmeline"},"content":"                                yield eventTask + \"/from \" + formattedFromDate + \"/to\" + formattedToDate;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChiaAmeline"},"content":"                            }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChiaAmeline"},"content":"                        };","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChiaAmeline"},"content":"                    // Happens after first attempt to load file, so manually remove additional closing parenthesis","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChiaAmeline"},"content":"                    task \u003d task.replaceAll(\"\\\\)+$\", \"\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChiaAmeline"},"content":"                    String keyword \u003d ExceptionHandling.removeSpaces(task.split(\" \")[0]);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChiaAmeline"},"content":"                    Task.addTask(todoTaskList, task, keyword, keywordHandling, true);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChiaAmeline"},"content":"                    if (isTaskCompleted) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChiaAmeline"},"content":"                        keywordHandling.processMarkKeyword(todoTaskList, Integer.toString(itemIndex), true, true);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChiaAmeline"},"content":"                    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChiaAmeline"},"content":"            } else {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChiaAmeline"},"content":"                taskFiles.createFile();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChiaAmeline"},"content":"                return new TaskList();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChiaAmeline"},"content":"            }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChiaAmeline"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChiaAmeline"},"content":"            taskFiles.createFile();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChiaAmeline"},"content":"            return new TaskList();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChiaAmeline"},"content":"        return todoTaskList;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChiaAmeline"},"content":"     * Creates the parent directory for the file if no file exist","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the directory was created or already exists, false otherwise.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChiaAmeline"},"content":"    private boolean createDirectory(){","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChiaAmeline"},"content":"        String parentDirectory \u003d new File(filePath).getParent();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChiaAmeline"},"content":"        File directory \u003d new File(parentDirectory);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChiaAmeline"},"content":"        // Check if the parent directory folder is created","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChiaAmeline"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChiaAmeline"},"content":"            return directory.mkdirs();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChiaAmeline"},"content":"        return true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChiaAmeline"},"content":"     * Creates the task file and its parent directory if they do not exist.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChiaAmeline"},"content":"    protected void createFile() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChiaAmeline"},"content":"        if (!createDirectory()) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printFailedDirectoryCreationMessage();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChiaAmeline"},"content":"            return;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChiaAmeline"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChiaAmeline"},"content":"        if (!fileExists() \u0026 !ExceptionHandling.isFileCreated(file)) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printFailedToCreateFileMessage();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChiaAmeline"},"content":"     * Writes tasks to the text file and append a single task to the back of the list in the file or overwriting the file with all tasks when marking / unmarking tasks","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChiaAmeline"},"content":"     * @param todoTaskList the TaskList containing tasks that needs to be added onto","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChiaAmeline"},"content":"     * @param task         the task to append or adjust in the list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isAppend     true to append a single task, false to overwrite the file with all tasks.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChiaAmeline"},"content":"    public void writeToTextFile(TaskList todoTaskList, Task task, boolean isAppend) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChiaAmeline"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath, isAppend)) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChiaAmeline"},"content":"            // Append to list via terminal","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChiaAmeline"},"content":"            if (isAppend \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChiaAmeline"},"content":"                fw.write(task.printAddedTask() + \"\\n\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChiaAmeline"},"content":"            } else {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChiaAmeline"},"content":"                // Reads from the file and add","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChiaAmeline"},"content":"                for (Task i : todoTaskList.getTasks()) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChiaAmeline"},"content":"                    fw.write(i.printAddedTask() + \"\\n\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChiaAmeline"},"content":"            }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChiaAmeline"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChiaAmeline"},"content":"            Message.printFailedToAppendToFileMessage();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChiaAmeline"},"content":"     * Checks whether the task file exists.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChiaAmeline"},"content":"     * @return true if the file exists, false otherwise.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChiaAmeline"},"content":"    public boolean fileExists() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChiaAmeline"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChiaAmeline"},"content":"        return file.exists();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-11-15","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":155}},{"path":"src/main/java/jibberJabber/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.tasks;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.taskType.Deadline;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.taskType.Event;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.ui.Message;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":" * The task list class represents a list of tasks in the task management system.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":" * Provides methods to manage tasks such as adding, removing, and retrieving tasks.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"public class TaskList {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"    private final ArrayList\u003cTask\u003e todoTaskList;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"    public TaskList() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"        this.todoTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"     * Retrieves the list of all tasks within the array list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"     * @return the ArrayList containing all tasks in the TaskList.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"        return todoTaskList;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"     * Returns the total number of tasks in the list.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"     * @return the total number of tasks.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"    public int getTotalTaskCount() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChiaAmeline"},"content":"        return todoTaskList.size();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChiaAmeline"},"content":"     * Retrieves the last task added to the list.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChiaAmeline"},"content":"     * @return the last task in the list, or null if the list is empty.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChiaAmeline"},"content":"    public Task getLastTask() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChiaAmeline"},"content":"        if (todoTaskList.isEmpty()){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChiaAmeline"},"content":"            return null;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChiaAmeline"},"content":"        return todoTaskList.get(todoTaskList.size() - 1);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChiaAmeline"},"content":"     * Retrieves a task by index.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChiaAmeline"},"content":"     * @param id the index of the task to retrieve.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChiaAmeline"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChiaAmeline"},"content":"    public Task getTaskById(int id) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChiaAmeline"},"content":"        assert id \u003e\u003d 0 \u0026\u0026 id \u003c getTotalTaskCount() : \"Index is out of bounds.\";","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChiaAmeline"},"content":"        return todoTaskList.get(id);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChiaAmeline"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChiaAmeline"},"content":"     * @param task the task to add.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChiaAmeline"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChiaAmeline"},"content":"        todoTaskList.add(task);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChiaAmeline"},"content":"     * Removes a task from the list by index.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChiaAmeline"},"content":"     * @param index the index of the task to remove.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChiaAmeline"},"content":"     * @return the removed task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChiaAmeline"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChiaAmeline"},"content":"        return todoTaskList.remove(index);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChiaAmeline"},"content":"     * Prints all tasks in the list in the defaulted formatted manner.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChiaAmeline"},"content":"    public void printTaskList() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChiaAmeline"},"content":"        Message.printHorizontalLines();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChiaAmeline"},"content":"        for (int counter \u003d 0; counter \u003c getTotalTaskCount(); counter++) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChiaAmeline"},"content":"            int listIndex \u003d counter + 1;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChiaAmeline"},"content":"            Task currentTask \u003d getTaskById(counter);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChiaAmeline"},"content":"            System.out.println(listIndex + \".\" + currentTask.printAddedTask());","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChiaAmeline"},"content":"        Message.printHorizontalLines();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChiaAmeline"},"content":"     * Retrieve tasks within a given period","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChiaAmeline"},"content":"     * @param startDate the index of the task to remove.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChiaAmeline"},"content":"     * @param endDate the index of the task to remove.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChiaAmeline"},"content":"     * @return task list of tasks within the date range","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChiaAmeline"},"content":"    public TaskList getTasksWithinPeriod(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate taskStartDate;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate taskEndDate;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList todoTaskList \u003d new TaskList();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChiaAmeline"},"content":"        for (Task task : getTasks()) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChiaAmeline"},"content":"            if (!task.isDone){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChiaAmeline"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChiaAmeline"},"content":"                    taskStartDate \u003d ((Event) task).from;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChiaAmeline"},"content":"                    taskEndDate \u003d ((Event) task).to;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChiaAmeline"},"content":"                    if ((taskStartDate.isEqual(startDate) || taskStartDate.isAfter(startDate)) \u0026\u0026","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChiaAmeline"},"content":"                        (taskEndDate.isEqual(endDate) || taskEndDate.isBefore(endDate))) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChiaAmeline"},"content":"                            todoTaskList.addTask(task);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChiaAmeline"},"content":"                    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChiaAmeline"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChiaAmeline"},"content":"                    taskEndDate \u003d ((Deadline) task).by;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChiaAmeline"},"content":"                    if ((taskEndDate.isEqual(startDate) || taskEndDate.isAfter(startDate)) \u0026\u0026","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChiaAmeline"},"content":"                       (taskEndDate.isEqual(endDate) || taskEndDate.isBefore(endDate))) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChiaAmeline"},"content":"                            todoTaskList.addTask(task);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChiaAmeline"},"content":"                    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChiaAmeline"},"content":"                }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChiaAmeline"},"content":"            }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChiaAmeline"},"content":"        return todoTaskList;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChiaAmeline"},"content":"     * Retrieve tasks with the specified keyword","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChiaAmeline"},"content":"     * @param searchKeyword the keyword to search within each task\u0027s name.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChiaAmeline"},"content":"     * @param taskList the task list to sieve through the task.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChiaAmeline"},"content":"     * @return task list of tasks with the keyword present","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChiaAmeline"},"content":"    public TaskList getTasksWithMatchingKeyword(String searchKeyword, TaskList taskList){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList matchingStrings \u003d new TaskList();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChiaAmeline"},"content":"        searchKeyword \u003d searchKeyword.toLowerCase();","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChiaAmeline"},"content":"        for (Task task : taskList.getTasks()) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChiaAmeline"},"content":"            if (task.printAddedTask().toLowerCase().contains(searchKeyword)){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChiaAmeline"},"content":"                matchingStrings.addTask(task);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChiaAmeline"},"content":"            }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChiaAmeline"},"content":"        return matchingStrings;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-11-15","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":137}},{"path":"src/main/java/jibberJabber/tasks/taskType/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.tasks.taskType;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.Task;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":" * The Deadline class represents a deadline task (subclass) that extends the base Task class.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":" * Includes a deadline for the task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"    public LocalDate by;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"     * Constructs a Deadline task with the user\u0027s input - task name and due date.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"     * @param by The deadline (date time) for the task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"    public Deadline(String taskName, LocalDate by) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"        super(taskName);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"     * Returns a formatted string representing the added deadline task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"     * @return The formatted string with task details including task type, task name, and deadline.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"    public String printAddedTask(){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"        return \"\\t[D]\" + super.printAddedTask() + \" (by: \" + convertDateInputString(by) + \")\";","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":30}},{"path":"src/main/java/jibberJabber/tasks/taskType/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.tasks.taskType;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.Task;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":" * The Event class represents an Event task (subclass) that extends the base Task class.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":" * Includes a date range for the task (from and to)","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"public class Event extends Task {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"    public LocalDate from;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"    public LocalDate to;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"     * Constructs an Event task with the user\u0027s input - task name, from date and to date","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"     * @param from The event\u0027s starting date (date time) of the task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"     * @param to The event\u0027s ending date (date time) of the task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"    public Event(String taskName, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"        super(taskName);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"     * Returns a formatted string representing the added event task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"     * @return The formatted string with task details including task type, task name, start date (from), and end date (to).","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"    public String printAddedTask(){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"        return \"\\t[E]\" + super.printAddedTask()  + \" (from: \" + convertDateInputString(from) + \" to: \" + convertDateInputString(to) + \")\";","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":34}},{"path":"src/main/java/jibberJabber/tasks/taskType/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.tasks.taskType;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.Task;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":" * The todos class represents a Todos task (subclass) that extends the base Task class.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"     * Constructs a todos task with the user\u0027s input - task name","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"        super(taskName);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"     * Returns a formatted string representing the added todos task.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"     * @return The formatted string with task details including task type, and task name","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"    public String printAddedTask() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"        return \"\\t[T]\" + super.printAddedTask();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":25}},{"path":"src/main/java/jibberJabber/ui/JibberJabber.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.ui;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.commands.Parser;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.TaskFiles;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.TaskList;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"public class JibberJabber {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"        String relativePath \u003d System.getProperty(\"user.dir\") + \"/data/tasks.txt\";","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"        TaskFiles storage \u003d new TaskFiles(relativePath);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList taskList \u003d storage.extractTasksFromFile();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"        Parser parser \u003d new Parser(taskList, storage);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"        while (isRunning) {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"            String userCommand \u003d ui.read();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"            isRunning \u003d parser.hasProcessCommandSucceed(userCommand);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"        }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"        ui.showEndingMessage();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-11-15","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":26}},{"path":"src/main/java/jibberJabber/ui/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.ui;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.Task;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":" * This Message class handles all customised messages, providing methods to handle exceptions and successful command execution","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"public class Message {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns a string separator that wraps around text upon completion of commands","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printHorizontalLines(){","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"    private static void printSingleMessage(String textMessage){","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"        printHorizontalLines();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(textMessage);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"        printHorizontalLines();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"     * This method will set the intended system name and defaulted welcome message upon running the program","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"     * @param systemName The system name to be displayed upon running the program","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printWelcomeMessage(String systemName) {","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"        printHorizontalLines();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(\"Hello! I\u0027m \" + systemName);","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"        printHorizontalLines();","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-09-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted ending message upon \"bye\" keyword command","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printEndingMessage(){","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChiaAmeline"},"content":"     * This method will return the empty messages depending on the isList argument toggle","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isList A boolean to determine if the empty message is meant to detect empty list or empty task name","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printEmptyMessage(boolean isList){","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChiaAmeline"},"content":"        if(isList) printSingleMessage(\"The list is empty.\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChiaAmeline"},"content":"        else printSingleMessage(\"The task is empty.\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message for invalid integer","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printInvalidIntegerMessage(){","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"Mark item needs to be a valid number.\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message for out of bound indices (index \u003c\u003d 0 or index \u003e list size)","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printOutOfBoundsMessage(){","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"Index is out of bounds.\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message for duplicated tasks created","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printDuplicateMessage(){","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"Task exist in list.\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChiaAmeline"},"content":"     * This method sets isDone status for each currentTask within the arraylist with the defaulted Task status message","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChiaAmeline"},"content":"     * @param isDone A boolean to the status of done-ness for the task (Done / Not Done)","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChiaAmeline"},"content":"     * @param currentTask The current task object being pointed in the array list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printTaskStatusMessage(boolean isDone, Task currentTask){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChiaAmeline"},"content":"        String message;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChiaAmeline"},"content":"        if(isDone) message \u003d \"Nice! I\u0027ve marked this task as done\";","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChiaAmeline"},"content":"        else message \u003d \"OK, I\u0027ve marked this task as not done yet\";","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChiaAmeline"},"content":"        printHorizontalLines();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(message + \":\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(\"\\t\" + currentTask.printAddedTask());","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChiaAmeline"},"content":"        printHorizontalLines();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message for task that have already been marked / unmarked","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printMarkedTaskMessage(){","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"Task have been marked / unmarked\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChiaAmeline"},"content":"     * This method sets the total number of tasks and newly added task in a defaulted message upon completion of Add keyword command","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChiaAmeline"},"content":"     * @param totalNumberOfTodoTask Integer that reflects the total number of task created","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChiaAmeline"},"content":"     * @param addedTask The newly added task name","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printAddedTaskMessage(int totalNumberOfTodoTask, String addedTask){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChiaAmeline"},"content":"        printHorizontalLines();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(addedTask);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(\"Now you have \" + totalNumberOfTodoTask + \" tasks in the list.\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChiaAmeline"},"content":"        printHorizontalLines();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChiaAmeline"},"content":"     * This method sets the total number of tasks and deleted task name in a defaulted message upon completion of delete keyword command","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChiaAmeline"},"content":"     * @param totalNumberOfTodoTask Integer that reflects the total number of task created","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChiaAmeline"},"content":"     * @param removeTask The task name that is deleted from the array list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printDeleteTaskMessage(int totalNumberOfTodoTask, String removeTask){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChiaAmeline"},"content":"        printHorizontalLines();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(removeTask);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChiaAmeline"},"content":"        System.out.println(\"Now you have \" + totalNumberOfTodoTask + \" tasks in the list.\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChiaAmeline"},"content":"        printHorizontalLines();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message for commands that has missing keywords (todo/event/deadline/list/delete/mark/unmark/find)","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printMissingCommandKeywordMessage(){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"It looks like you forgot to specify keywords!\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChiaAmeline"},"content":"     * This method will return a defaulted message if the format of the command is not proper","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChiaAmeline"},"content":"     * @param taskType A string that is match against keywords which determines the format of the command","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printMissingParameterMessage(String taskType){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChiaAmeline"},"content":"        String format \u003d switch (taskType) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChiaAmeline"},"content":"            case \"deadline\" -\u003e \"[Task_name] /by [Deadline]\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChiaAmeline"},"content":"            case \"event\" -\u003e \"[Task_name] /from [Start_date] /to [End_date]\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChiaAmeline"},"content":"            default -\u003e \"\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChiaAmeline"},"content":"        };","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"It seems you forgot to specify a parameter! Please enter it in the following format: \" + format);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message when the system is unable to create directory","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printFailedDirectoryCreationMessage(){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"Failed to create a directory\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message when the system is unable to create file","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printFailedToCreateFileMessage(){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"Failed to create file\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message when the system is unable to append newly added task into existing text file","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printFailedToAppendToFileMessage(){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"Failed to append text to file\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message when the date format passed during deadline and event commands are invalid","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printInvalidDateFormatMessage(){","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"Invalid date format. Date should be in the format of d/M/yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message when start date is after end date","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printInvalidTimeMessage(){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"Invalid date range. Both dates should be present and start date should be before end date\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message when no task is found within the date range given","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printNoTaskFoundWithinPeriodMessage(){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"No task found with the period\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the defaulted message when no task is found with the keyword","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChiaAmeline"},"content":"    public static void printNoTaskFoundWithKeywordMessage(){","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChiaAmeline"},"content":"        printSingleMessage(\"No task found\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-09-28","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":171}},{"path":"src/main/java/jibberJabber/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"package jibberJabber.ui;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.commands.ExceptionHandling;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"/**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":" * The Ui class handles all user interactions within the application while running","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":" * Upon load, it displays the welcome message and after, reads the user input upon each interaction","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":" * It displays the ending message when the system ends or the user input the bye keyword command","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":" */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"public class Ui {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"     * Constructs an Ui object of the Ui class.","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"     * Sets up the scanner for reading user input.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"    public Ui() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"     * Reads a line of input from the user, trimmed of any leading and trailing whitespace.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"     *","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"     * @return The trimmed user input as a String.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"    public String read() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"        return ExceptionHandling.removeSpaces(scanner.nextLine());","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the welcome message to the user.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"        Message.printWelcomeMessage(\"Jibber Jabber\");","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"    /**","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"     * This method returns the ending message to the user.","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChiaAmeline"},"content":"     */","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChiaAmeline"},"content":"    public void showEndingMessage() {","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChiaAmeline"},"content":"        Message.printEndingMessage();","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-11-15","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":39}},{"path":"src/test/java/ExceptionHandlingTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.TaskList;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.taskType.ToDo;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.commands.ExceptionHandling;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.Task;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"import java.io.File;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"public class ExceptionHandlingTest {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"    private ArrayList\u003cTask\u003e todoTaskList;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"    void setUp() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"        todoTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Validate integer for array indices","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"    void testIsIntegerValid() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isInteger(\"123\"), \"Valid integer string should return true.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isInteger(\"abc\"), \"Non-integer string should return false.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isInteger(\"123abc\"), \"Mixed string should return false.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Remove white spaces that disrupt the format of the task","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"    void testRemoveSpaces() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(\"Test Test\", ExceptionHandling.removeSpaces(\"  Test   Test  \"), \"Extra spaces should be removed.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(\"Test\", ExceptionHandling.removeSpaces(\"Test\"), \"String with no spaces should remain unchanged.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Validate if a given command contains task description after keyword command","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChiaAmeline"},"content":"    void testIsEmptyTaskDescription() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isEmptyInput(\"todo\"), \"Input with only \u0027todo\u0027 should be empty.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isEmptyInput(\"todo read a book\"), \"Valid \u0027todo\u0027 keyword command should have valid task description.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isEmptyInput(\"event /from /to\"), \"Input with only \u0027event\u0027 should be empty.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isEmptyInput(\"event Celebrate Birthday /from 1/1/2023 /to 2/1/2023\"), \"Valid \u0027event\u0027 keyword command should have valid task description.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isEmptyInput(\"deadline /by\"), \"Input with only \u0027deadline\u0027 should be empty.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isEmptyInput(\"deadline return book /by 1/1/2023\"), \"Valid \u0027deadline\u0027 keyword command should have valid task description.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Validate if a new task is present in existing list","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChiaAmeline"},"content":"    void testIsTaskDuplicated() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChiaAmeline"},"content":"        todoTaskList.add(new ToDo(\"Read a book\"));","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChiaAmeline"},"content":"        String duplicateTodo \u003d \"todo Read a book\";","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isTaskDuplicated(todoTaskList, duplicateTodo), \"Duplicate \u0027todo\u0027 task should return true.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChiaAmeline"},"content":"        String nonDuplicateTodo \u003d \"todo Buy Grocery\";","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isTaskDuplicated(todoTaskList, nonDuplicateTodo), \"Non-duplicate \u0027todo\u0027 task should return false.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChiaAmeline"},"content":"        String duplicateDeadline \u003d \"deadline Buy Grocery /by 1/12/2023 2359\";","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isTaskDuplicated(todoTaskList, duplicateDeadline), \"Duplication does not consider task type. Non-duplicate \u0027todo\u0027 task should return false.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Validates if there is deadline (date time) provided","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChiaAmeline"},"content":"    void testIsValidDeadlineInput() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isValidDeadlineInput(new String[]{\"Submit assignment\", \"1/12/2023 2359\"}), \"Valid deadline input should return true.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isValidDeadlineInput(new String[]{\"Submit assignment\"}), \"Missing deadline (date time) should return false.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Validates if there is event period (date time) provided","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChiaAmeline"},"content":"    void testIsValidEventInput() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isValidEventInput(new String[]{\"Celebrate Birthday\", \"1/1/2023 2359 /to 2/1/2023 2359\"}), \"Valid event input should return true.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isValidEventInput(new String[]{\"Celebrate Birthday\", \"1/1/2023 2359\"}), \"Missing event details should return false.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isValidEventInput(new String[]{\"Celebrate Birthday\", \"1/1/2023 2359 /to \"}), \"Missing event details should return false.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Validate if the date is formatted","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChiaAmeline"},"content":"    void testIsInvalidDate() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isInvalidDate(\"1/12/2023\"), \"Valid date should return false.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isInvalidDate(\"1-12-2023 2359\"), \"Invalid date format should return true.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isInvalidDate(\" \"), \"Invalid date format should return true.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isInvalidDate(\"2023-12-01  \"), \"Invalid date format should return true.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isInvalidDate(\"6th June \"), \"Invalid date format should return true.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Validate if the keyword is present under keyword enum","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChiaAmeline"},"content":"    void testIsInvalidKeywordCommand() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isInvalidKeywordCommand(\"todo\"), \"Valid keyword should return false.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isInvalidKeywordCommand(\"EvEnt\"), \"Valid keyword should return false.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(ExceptionHandling.isInvalidKeywordCommand(\"DEADLINE\"), \"Valid keyword should return false.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isInvalidKeywordCommand(\"ToDos\"), \"Invalid keyword should return true.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(ExceptionHandling.isInvalidKeywordCommand(\"dead line\"), \"Invalid keyword should return true.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-11-16","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":86}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.commands.KeywordHandling;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.commands.Parser;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.TaskFiles;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChiaAmeline"},"content":"import jibberJabber.tasks.TaskList;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChiaAmeline"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChiaAmeline"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChiaAmeline"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChiaAmeline"},"content":"import java.io.File;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChiaAmeline"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChiaAmeline"},"content":"class ParserTest {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChiaAmeline"},"content":"    private Parser parser;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChiaAmeline"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChiaAmeline"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChiaAmeline"},"content":"    void setUp() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChiaAmeline"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChiaAmeline"},"content":"        String relativePath \u003d System.getProperty(\"user.dir\") + File.separator + \"data/tasks.txt\";","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChiaAmeline"},"content":"        TaskFiles taskFiles \u003d new TaskFiles(relativePath);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChiaAmeline"},"content":"        parser \u003d new Parser(taskList, taskFiles);","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChiaAmeline"},"content":"","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Add todos task","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_addTodo() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChiaAmeline"},"content":"        String todoCommand \u003d \"todo Read a book\";","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChiaAmeline"},"content":"        boolean result \u003d parser.hasProcessCommandSucceed(todoCommand);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(result, \"The return value should return true to continue processing.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(1, taskList.getTotalTaskCount(), \"Number of Task should increase after adding a task.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(\"[T][ ] Read a book\", taskList.getLastTask().printAddedTask().trim(), \"Task name should match the input.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Add event task","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_addEvent() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChiaAmeline"},"content":"        String eventCommand \u003d \"event Read a book /from 5/2/2013 /to 5/2/2013\";","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChiaAmeline"},"content":"        boolean result \u003d parser.hasProcessCommandSucceed(eventCommand);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(result, \"The return value should return true to continue processing.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(1, taskList.getTotalTaskCount(), \"Number of Task should increase after adding a task.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(\"[E][ ] Read a book (from: Feb 05 2013 to: Feb 05 2013)\", taskList.getLastTask().printAddedTask().trim(), \"Event Task name and description should match the input.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Add deadline task","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_addDeadline() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChiaAmeline"},"content":"        String deadlineCommand \u003d \"deadline Read a book /by 5/2/2013\";","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChiaAmeline"},"content":"        boolean result \u003d parser.hasProcessCommandSucceed(deadlineCommand);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(result, \"The return value should return true to continue processing.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(1, taskList.getTotalTaskCount(), \"Number of Task should increase after adding a task.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(\"[D][ ] Read a book (by: Feb 05 2013)\", taskList.getLastTask().printAddedTask().trim(), \"Deadline Task name and description should match the input.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Invalid keyword command","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_invalidCommand() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChiaAmeline"},"content":"        String invalidCommand \u003d \"t do\";","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChiaAmeline"},"content":"        boolean result \u003d parser.hasProcessCommandSucceed(invalidCommand);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(result, \"The parser should return true for invalid commands to keep running.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(0, taskList.getTotalTaskCount(), \"Task list should remain empty for invalid commands.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: mark task status as done","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_markTask() {","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"todo Write tests\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChiaAmeline"},"content":"        String markCommand \u003d \"mark 1\";","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChiaAmeline"},"content":"        boolean result \u003d parser.hasProcessCommandSucceed(markCommand);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(result, \"The command should return true to continue processing.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChiaAmeline"},"content":"        assertTrue(taskList.getTaskById(0).isDone, \"The first task should be marked as done.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Bye command","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_bye() {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChiaAmeline"},"content":"        boolean result \u003d parser.hasProcessCommandSucceed(\"bye\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChiaAmeline"},"content":"        assertFalse(result, \"The bye command should return false to indicate program exit.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Delete todos task","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_deleteTask() {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"todo Read a book\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(1, taskList.getTotalTaskCount(), \"Task list should contain one task before deletion.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"delete 1\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(0, taskList.getTotalTaskCount(), \"Task list should be empty after deletion.\");","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Complete task within request period","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_findUndoneTaskWithinDateRange() {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"event Read a book /from 1/1/2013 /to 1/3/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed( \"deadline Read a book /by 5/2/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"complete tasks between 1/1/2013 /to 1/3/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate startDate \u003d KeywordHandling.formatDateInputsAsLocalDate(\"1/1/2013\", \"d/M/yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate endDate \u003d KeywordHandling.formatDateInputsAsLocalDate(\"1/3/2013\", \"d/M/yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList tasksWithinPeriod \u003d taskList.getTasksWithinPeriod(startDate, endDate);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(2, tasksWithinPeriod.getTotalTaskCount(), \"Task list should contain two tasks within the period.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"delete 1\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed( \"deadline Read a book /by 1/12/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"complete tasks between 1/1/2013 /to 1/3/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChiaAmeline"},"content":"        tasksWithinPeriod \u003d taskList.getTasksWithinPeriod(startDate, endDate);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(1, tasksWithinPeriod.getTotalTaskCount(), \"Task list should contain one task within the period after deletion.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_findUndoneTaskWithinDateRange_nullReturn() {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"event Read a book /from 1/1/2013 /to 1/3/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed( \"deadline Read a book /by 5/2/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"complete tasks between 1/1/2014 /to 1/3/2014\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate startDate \u003d KeywordHandling.formatDateInputsAsLocalDate(\"1/1/2014\", \"d/M/yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate endDate \u003d KeywordHandling.formatDateInputsAsLocalDate(\"1/3/2014\",\"d/M/yyyy\" );","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList tasksWithinPeriod \u003d taskList.getTasksWithinPeriod(startDate, endDate);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(0, tasksWithinPeriod.getTotalTaskCount(), \"Task list should be empty with no tasks found\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_findUndoneTaskWithMidRangeDates() {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"event Read a book /from 1/1/2013 /to 1/3/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed( \"deadline Read a book /by 5/2/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"complete tasks between 1/1/2013 /to 6/2/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate startDate \u003d KeywordHandling.formatDateInputsAsLocalDate(\"1/2/2013\", \"d/M/yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChiaAmeline"},"content":"        LocalDate endDate \u003d KeywordHandling.formatDateInputsAsLocalDate(\"1/3/2013\", \"d/M/yyyy\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList tasksWithinPeriod \u003d taskList.getTasksWithinPeriod(startDate, endDate);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(1, tasksWithinPeriod.getTotalTaskCount(), \"Task list should contain one tasks within the period.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Find task","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_findKeywordMatch() {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"todo Read a book\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"todo Return books\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"todo Lend fairytale BoOk\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"find book\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(3, taskList.getTotalTaskCount(), \"Task list should contain three task.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChiaAmeline"},"content":"    // Test: Find task with dates","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_findKeywordMatchWithDates() {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"event Read a book /from 1/1/2013 /to 1/3/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"deadline Read a book /by 1/1/2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"todo Lend fairytale BoOk\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"find Jan 01 2013\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList foundTasks \u003d taskList.getTasksWithMatchingKeyword(\"Jan 01 2013\", taskList);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(2, foundTasks.getTotalTaskCount(), \"Task list should contain two task.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChiaAmeline"},"content":"    @Test","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChiaAmeline"},"content":"    void testProcessCommand_findKeywordMatch_nullReturn() {","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"todo Read a book\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"todo Return books\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"todo Lend fairytale BoOk\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChiaAmeline"},"content":"        parser.hasProcessCommandSucceed(\"find ticket\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChiaAmeline"},"content":"        TaskList foundTasks \u003d taskList.getTasksWithMatchingKeyword(\"ticket\", taskList);","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChiaAmeline"},"content":"        assertEquals(0, foundTasks.getTotalTaskCount(), \"Task list should be empty after finding a task.\");","lastModifiedDate":"2024-11-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChiaAmeline"},"content":"    }","lastModifiedDate":"2024-11-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChiaAmeline"},"content":"}","lastModifiedDate":"2024-11-16","isFullCredit":false}],"authorContributionMap":{"ChiaAmeline":145}}]
