[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    mainClass.set(\"wkduke.WKDuke\")","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":40,"waikhincheong":1}},{"path":"src/main/java/wkduke/WKDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.command.Command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.FileContentException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.StorageOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.WKDukeException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import wkduke.parser.CommandParser;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"import wkduke.storage.Storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"import wkduke.ui.Ui;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":" * The main class for the WKDuke application.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":" * Initializes the necessary components and manages the main application loop.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"public class WKDuke {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    private final Ui ui;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    private Storage storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a {@code WKDuke} instance, initializing UI, storage, and task list.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"     * Displays an initialization error and exits if storage fails to load.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    public WKDuke() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"        try {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"        } catch (StorageOperationException | FileContentException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"            ui.showInitError(e);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"            System.exit(-1);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"     * The main entry point for the WKDuke application.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"        new WKDuke().run();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"     * Runs the main application loop, showing the welcome message and processing user commands.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"     * Catches and handles exceptions related to storage and command execution.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"    public void run() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"        while (!isExit) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"            try {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"                String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"                Command c \u003d CommandParser.parseCommand(userInput);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"            } catch (StorageOperationException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"                ui.showError(e);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"                System.exit(-1);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"            } catch (WKDukeException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"                ui.showError(e);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"-":3,"waikhincheong":63}},{"path":"src/main/java/wkduke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.StorageOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.storage.Storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.Task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import wkduke.ui.Ui;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":" * This is an abstract class to be extended by specific task-adding commands, such as ToDo, Deadline, and Event.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"    public static final String COMMAND_WORD_TODO \u003d \"todo\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    public static final String COMMAND_WORD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    public static final String COMMAND_WORD_EVENT \u003d \"event\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_SUCCESS_PRE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    public static final String TASK_PLACEHOLDER \u003d \"  %s\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_SUCCESS_POST \u003d \"Now you have %s tasks in the list.\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    protected Task task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"     * Executes the add command by adding a task to the task list, saving it to storage, and displaying a success message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The task list to which the task will be added.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     * @param ui       The user interface for displaying messages to the user.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"     * @param storage  The storage where the updated task list will be saved.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     * @throws StorageOperationException if there is an error with saving the task list to storage.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws StorageOperationException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"        ui.printMessages(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"                MESSAGE_SUCCESS_PRE,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"                String.format(TASK_PLACEHOLDER, task.toString()),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"                String.format(MESSAGE_SUCCESS_POST, taskList.size())","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"        );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":40}},{"path":"src/main/java/wkduke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.Deadline;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_DEADLINE + \" {taskDescription} /by {deadLine}\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"     * Constructs an AddDeadlineCommand with the specified task description and deadline.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"     * @param taskDescription The description of the deadline task.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"     * @param by              The deadline date and time for the task.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    public AddDeadlineCommand(String taskDescription, LocalDateTime by) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"        task \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":22}},{"path":"src/main/java/wkduke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.Event;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_EVENT + \" {taskDescription} /from {start} /to {end}\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"     * Constructs an AddEventCommand with the specified task description, start date, and end date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"     * @param taskDescription The description of the event task.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"     * @param from            The starting date and time for the event.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     * @param to              The ending date and time for the event.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    public AddEventCommand(String taskDescription, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"        task \u003d new Event(taskDescription, from, to);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":23}},{"path":"src/main/java/wkduke/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.ToDo;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" * Represents a command to add a ToDo task to the task list.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"public class AddToDoCommand extends AddCommand {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_TODO + \" {taskDescription}\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"     * Constructs an AddToDoCommand with the specified task description.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"     * @param taskDescription The description of the todo task.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    public AddToDoCommand(String taskDescription) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"        task \u003d new ToDo(taskDescription);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":19}},{"path":"src/main/java/wkduke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.CommandOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.StorageOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.storage.Storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import wkduke.ui.Ui;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":" * Represents an executable command in the application.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":" * This is an abstract base class to be extended by specific command types.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"public abstract class Command {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a Command instance.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    protected Command() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     * @param ui       The user interface to interact with the user.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     * @param storage  The storage to save or retrieve data.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     * @throws StorageOperationException if there is an error with storage operations.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"     * @throws CommandOperationException if there is an error with command execution.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws StorageOperationException, CommandOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code true} if this command should terminate the application; {@code false} otherwise.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"        return false;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":39}},{"path":"src/main/java/wkduke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.common.Messages;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.CommandOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.StorageOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.storage.Storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.Task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import wkduke.ui.Ui;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" {taskNumber}\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_SUCCESS_PRE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    public static final String TASK_PLACEHOLDER \u003d \"  %s\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_SUCCESS_POST \u003d \"Now you have %s tasks in the list.\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    protected final int taskNumber;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a DeleteCommand with the specified task number.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     * @param taskNumber The 1-based index of the task to be deleted.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * Executes the delete command by removing the specified task from the task list,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     * saving the updated list to storage, and displaying a success message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The task list from which the task will be deleted.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"     * @param ui       The user interface for displaying messages to the user.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"     * @param storage  The storage where the updated task list will be saved.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"     * @throws StorageOperationException if there is an error with saving the task list to storage.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"     * @throws CommandOperationException if the specified task number is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws StorageOperationException, CommandOperationException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"        try {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"            Task task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"            taskList.deleteTask(taskIndex);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"            storage.save(taskList);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"            ui.printMessages(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"                    MESSAGE_SUCCESS_PRE,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"                    String.format(TASK_PLACEHOLDER, task.toString()),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"                    String.format(MESSAGE_SUCCESS_POST, taskList.size())","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"            throw new CommandOperationException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_TASK_NUMBER,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"Command\u003d\u0027delete\u0027, TaskNumber\u003d\u0027%s\u0027\", taskNumber)","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":60}},{"path":"src/main/java/wkduke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.storage.Storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.ui.Ui;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"     * Executes the exit command by displaying a goodbye message to the user.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The task list being managed (not used in this command).","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"     * @param ui       The user interface to interact with the user.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     * @param storage  The storage being used (not used in this command).","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     * Indicates that this command will terminate the application.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code true} to signal the application to exit.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"        return true;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":34}},{"path":"src/main/java/wkduke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.storage.Storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.Task;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.ui.Ui;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import java.util.List;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_FAILED \u003d \"Your task list is currently empty.\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"     * Executes the list command by retrieving all tasks from the task list","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     * and displaying them to the user. If the task list is empty, a message","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     * indicating this is displayed.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     * @param ui       The user interface for displaying messages to the user.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     * @param storage  The storage being used (not used in this command).","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getAllTask();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"            ui.printMessages(MESSAGE_FAILED);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"            return;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"        messages.add(MESSAGE_SUCCESS);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"            messages.add(String.format(\"%d.%s\", taskList.getTaskIndex(task) + 1, task));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"        ui.printMessages(messages.toArray(new String[0]));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":43}},{"path":"src/main/java/wkduke/command/ListOnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.parser.TimeParser;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.storage.Storage;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.Task;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import wkduke.ui.Ui;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"import java.util.List;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":" * Represents a command to list all tasks occurring on a specified date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"public class ListOnCommand extends Command {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" /on {dateTime}\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are the tasks in your list on \u0027%s\u0027:\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_FAILED \u003d \"Your task list is currently empty on \u0027%s\u0027.\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"    protected LocalDateTime on;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a ListOnCommand with the specified date and time to filter tasks.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     * @param on The date and time for which tasks should be listed.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"    public ListOnCommand(LocalDateTime on) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"        this.on \u003d on;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     * Executes the list command by retrieving all tasks occurring on the specified date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     * Displays the list of tasks or a message if no tasks are found.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The task list containing all tasks.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"     * @param ui       The user interface for displaying messages to the user.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"     * @param storage  The storage being used (not used in this command).","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getAllTaskOnDate(on);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"            ui.printMessages(","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"                    String.format(MESSAGE_FAILED, on.format(TimeParser.CLI_FORMATTER))","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"            return;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"        messages.add(","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"                String.format(MESSAGE_SUCCESS, on.format(TimeParser.CLI_FORMATTER))","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"        );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"            messages.add(String.format(\"%d.%s\", taskList.getTaskIndex(task) + 1, task));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"        ui.printMessages(messages.toArray(new String[0]));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"waikhincheong":59}},{"path":"src/main/java/wkduke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.common.Messages;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.CommandOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.StorageOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.storage.Storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.Task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import wkduke.ui.Ui;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" {taskNumber}\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_FAILED \u003d \"This task is already marked as done:\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    public static final String TASK_PLACEHOLDER \u003d \"  %s\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    protected final int taskNumber;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a MarkCommand with the specified task number.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     * @param taskNumber The 1-based index of the task to be marked as done.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * Executes the mark command by marking the specified task as done, saving the updated","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     * task list to storage, and displaying a success or failure message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The task list containing the task to be marked as done.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"     * @param ui       The user interface for displaying messages to the user.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"     * @param storage  The storage where the updated task list will be saved.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"     * @throws StorageOperationException if there is an error with saving the task list to storage.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"     * @throws CommandOperationException if the specified task number is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws StorageOperationException, CommandOperationException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"        try {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"            Task task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"            boolean updated \u003d taskList.markTask(taskIndex);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"            if (updated) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"                storage.save(taskList);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"                ui.printMessages(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"                        MESSAGE_SUCCESS,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"                        String.format(TASK_PLACEHOLDER, task.toString())","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"                );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"            } else {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"                ui.printMessages(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"                        MESSAGE_FAILED,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"                        String.format(TASK_PLACEHOLDER, task.toString())","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"                );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"            }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"            throw new CommandOperationException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_TASK_NUMBER,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"Command\u003d\u0027mark\u0027, TaskNumber\u003d\u0027%s\u0027\", taskNumber)","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":67}},{"path":"src/main/java/wkduke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.common.Messages;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.CommandOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.StorageOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.storage.Storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.Task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import wkduke.ui.Ui;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":" * Represents a command to unmark a task as not done in the task list.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" {taskNumber}\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_FAILED \u003d \"This task is not yet marked as done:\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    public static final String TASK_PLACEHOLDER \u003d \"  %s\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    protected final int taskNumber;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"     * Constructs an UnmarkCommand with the specified task number.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     * @param taskNumber The 1-based index of the task to be marked as not done.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * Executes the unmark command by marking the specified task as not done, saving the updated","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     * task list to storage, and displaying a success or failure message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The task list containing the task to be marked as not done.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"     * @param ui       The user interface for displaying messages to the user.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"     * @param storage  The storage where the updated task list will be saved.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"     * @throws StorageOperationException if there is an error with saving the task list to storage.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"     * @throws CommandOperationException if the specified task number is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws StorageOperationException, CommandOperationException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"        try {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"            Task task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"            boolean updated \u003d taskList.unmarkTask(taskIndex);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"            if (updated) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"                storage.save(taskList);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"                ui.printMessages(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"                        MESSAGE_SUCCESS,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"                        String.format(TASK_PLACEHOLDER, task.toString())","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"                );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"            } else {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"                ui.printMessages(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"                        MESSAGE_FAILED,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"                        String.format(TASK_PLACEHOLDER, task.toString())","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"                );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"            }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"            throw new CommandOperationException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_TASK_NUMBER,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"Command\u003d\u0027unmark\u0027, TaskNumber\u003d\u0027%s\u0027\", taskNumber)","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":67}},{"path":"src/main/java/wkduke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.common;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":" * Contains common messages used throughout the application.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":" * These messages are displayed to the user\u0027s CLI for guidance, feedback, or error handling.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"public class Messages {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m WKDuke. What can I do for you?\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_AVAILABLE_COMMAND \u003d \"list, todo, deadline, event, mark, unmark, delete, bye\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_INVALID_TASK_FORMAT \u003d \"Invalid task format!\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_INVALID_TASK_ARG_FORMAT \u003d \"Invalid task argument format!\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"Invalid task number (task not found)!\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_INVALID_TASK_ENCODED_FORMAT \u003d \"Invalid encoded task content!\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_INVALID_DEADLINE_ENCODED \u003d \"duke.task.Deadline task missing \u0027by\u0027 information!\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_INVALID_EVENT_ENCODED \u003d \"duke.task.Event task missing \u0027from\u0027 or \u0027to\u0027 information!\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_INVALID_DATETIME_FORMAT \u003d \"Expected format is {yyyy-MM-dd} or {yyyy/MM/dd} with optional time in 24-hour format {HH:mm} or {HHmm}\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_INVALID_DATETIME_RANGE \u003d \"\u0027%s\u0027 is after \u0027%s\u0027!\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_CREATE_FILE_ERROR \u003d \"Error while creating folder or file!\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_READ_FILE_ERROR \u003d \"Error while reading from file!\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_WRITE_FILE_ERROR \u003d \"Error while writing to file!\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"    public static final String MESSAGE_FILE_PATH_ERROR \u003d \"duke.storage.Storage file should end with \u0027.txt\u0027\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":27}},{"path":"src/main/java/wkduke/exception/CommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.exception;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":" * Represents an exception that is thrown when a command format error occurs.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":" * This exception is used to signal issues with the structure or syntax of a user command.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"public class CommandFormatException extends WKDukeException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a CommandFormatException with the specified error message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the command format issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    public CommandFormatException(String message) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"        super(message);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a CommandFormatException with the specified error message and detailed information.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the command format issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the command format issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    public CommandFormatException(String message, String detail) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"        super(message, detail);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a CommandFormatException with the specified error message, detailed information, and help text.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the command format issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the command format issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * @param help    Suggested help or guidance for resolving the issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"    public CommandFormatException(String message, String detail, String help) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"        super(message, detail, help);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":37}},{"path":"src/main/java/wkduke/exception/CommandOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.exception;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":" * Represents an exception that is thrown when an error occurs during the execution of a command.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":" * This exception is used to signal issues that prevent successful command operations.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"public class CommandOperationException extends WKDukeException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a CommandOperationException with the specified error message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the command operation issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    public CommandOperationException(String message) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"        super(message);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a CommandOperationException with the specified error message and detailed information.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the command operation issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the command operation issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    public CommandOperationException(String message, String detail) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"        super(message, detail);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a CommandOperationException with the specified error message, detailed information, and help text.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the command operation issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the command operation issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * @param help    Suggested help or guidance for resolving the issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"    public CommandOperationException(String message, String detail, String help) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"        super(message, detail, help);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":37}},{"path":"src/main/java/wkduke/exception/FileContentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.exception;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":" * Represents an exception that is thrown when an error is encountered with the content of a file.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":" * This exception is used to signal issues such as invalid data format or unexpected content in files.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"public class FileContentException extends WKDukeException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a FileContentException with the specified error message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the file content issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    public FileContentException(String message) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"        super(message);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a FileContentException with the specified error message and detailed information.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the file content issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the file content issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    public FileContentException(String message, String detail) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"        super(message, detail);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a FileContentException with the specified error message, detailed information, and help text.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the file content issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the file content issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * @param help    Suggested help or guidance for resolving the issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"    public FileContentException(String message, String detail, String help) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"        super(message, detail, help);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":37}},{"path":"src/main/java/wkduke/exception/StorageFilePathException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.exception;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":" * Represents a runtime exception that is thrown when there is an error with the storage file path.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":" * This exception is used to indicate issues such as an invalid file path format.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"public class StorageFilePathException extends RuntimeException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a StorageFilePathException with the specified error message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the file path issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    public StorageFilePathException(String message) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"        super(message);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"waikhincheong":16}},{"path":"src/main/java/wkduke/exception/StorageOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.exception;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":" * Represents an exception that is thrown when an error occurs during a storage operation.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":" * This exception is used to signal issues such as read/write failures or storage access errors.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"public class StorageOperationException extends WKDukeException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a StorageOperationException with the specified error message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the storage operation issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    public StorageOperationException(String message) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"        super(message);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a StorageOperationException with the specified error message and detailed information.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the storage operation issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the storage operation issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    public StorageOperationException(String message, String detail) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"        super(message, detail);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a StorageOperationException with the specified error message, detailed information, and help text.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the storage operation issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the storage operation issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * @param help    Suggested help or guidance for resolving the issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"    public StorageOperationException(String message, String detail, String help) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"        super(message, detail, help);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"waikhincheong":37}},{"path":"src/main/java/wkduke/exception/TaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.exception;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":" * Represents an exception that is thrown when an error occurs with the format of a task.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":" * This exception is used to indicate issues such as invalid task data or incorrect task arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"public class TaskFormatException extends WKDukeException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a TaskFormatException with the specified error message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the task format issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    public TaskFormatException(String message) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"        super(message);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a TaskFormatException with the specified error message and detailed information.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the task format issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the task format issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    public TaskFormatException(String message, String detail) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"        super(message, detail);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a TaskFormatException with the specified error message, detailed information, and help text.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the task format issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the task format issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * @param help    Suggested help or guidance for resolving the issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"    public TaskFormatException(String message, String detail, String help) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"        super(message, detail, help);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":37}},{"path":"src/main/java/wkduke/exception/WKDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.exception;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":" * Represents a custom exception used in the WKDuke application for handling various error cases.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":" * This exception includes additional fields for detailed error information and helpful guidance.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"public class WKDukeException extends Exception {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"    protected String detail \u003d null;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"    protected String help \u003d null;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a WKDukeException with the specified error message.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    public WKDukeException(String message) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"        super(message);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a WKDukeException with the specified error message and detail.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the exception.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"    public WKDukeException(String message, String detail) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"        this(message);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a WKDukeException with the specified error message, detail, and help text.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"     * @param detail  Additional detail about the exception.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"     * @param help    Suggested help or guidance for resolving the issue.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"    public WKDukeException(String message, String detail, String help) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"        this(message, detail);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"        this.help \u003d help;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves detailed information about the exception.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"     * @return The detail information as a {@code String}.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"    public String getDetail() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"        return detail;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"     * Sets detailed information about the exception.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"     * @param detail The detail information to set.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"    public void setDetail(String detail) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves helpful guidance or suggestions for resolving the exception.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"     * @return The help information as a {@code String}.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"    public String getHelp() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"        return help;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"waikhincheong"},"content":"     * Sets helpful guidance or suggestions for resolving the exception.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"waikhincheong"},"content":"     * @param help The help information to set.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"waikhincheong"},"content":"    public void setHelp(String help) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"waikhincheong"},"content":"        this.help \u003d help;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":78}},{"path":"src/main/java/wkduke/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.parser;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.command.*;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.common.Messages;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.CommandFormatException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.TaskFormatException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":" * Parses user input into command objects for execution.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":" * Uses regular expressions to match and extract command keywords and arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"public class CommandParser {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    public static final Pattern TASK_TODO_DATA_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e.+)\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    public static final Pattern TASK_DEADLINE_DATA_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e.+) /by (?\u003cby\u003e.+)\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    public static final Pattern TASK_EVENT_DATA_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e.+) /from (?\u003cfrom\u003e.+) /to (?\u003cto\u003e.+)\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"    public static final Pattern MARK_TASK_ARGS_FORMAT \u003d Pattern.compile(\"^(?\u003ctaskNumber\u003e\\\\d.*)$\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"    public static final Pattern UNMARK_TASK_ARGS_FORMAT \u003d Pattern.compile(\"^(?\u003ctaskNumber\u003e\\\\d.*)$\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    public static final Pattern DELETE_TASK_ARGS_FORMAT \u003d Pattern.compile(\"^(?\u003ctaskNumber\u003e\\\\d.*)$\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"    public static final Pattern LIST_TASK_ARGS_FORMAT \u003d Pattern.compile(\"/on (?\u003con\u003e.+)\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"     * Parses the user input into a command.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     * @param userInput The full user input to be parsed.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"     * @return The corresponding {@code Command} based on the user input.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"     * @throws CommandFormatException If the command format is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * @throws TaskFormatException    If the task format within the command is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"    public static Command parseCommand(String userInput) throws CommandFormatException, TaskFormatException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"            throw new AssertionError(\"Basic command scenario is already handled earlier\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"        final String arguments \u003d matcher.group(\"arguments\").trim();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"        return switch (commandWord) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"            case ExitCommand.COMMAND_WORD -\u003e new ExitCommand();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"            case ListCommand.COMMAND_WORD -\u003e prepareList(arguments);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"            case AddCommand.COMMAND_WORD_TODO -\u003e prepareAddToDo(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"            case AddCommand.COMMAND_WORD_DEADLINE -\u003e prepareAddDeadline(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"            case AddCommand.COMMAND_WORD_EVENT -\u003e prepareAddEvent(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"            case MarkCommand.COMMAND_WORD -\u003e prepareMark(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"            case UnmarkCommand.COMMAND_WORD -\u003e prepareUnmark(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"            case DeleteCommand.COMMAND_WORD -\u003e prepareDelete(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"            default -\u003e throw new CommandFormatException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"UserInput\u003d\u0027%s\u0027\", userInput),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"AvailableCommand\u003d\u0027%s\u0027\", Messages.MESSAGE_AVAILABLE_COMMAND)","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"        };","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"     * Prepares an AddToDo command from the given arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"     * @param arguments The arguments provided for the ToDo task.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"     * @return A new {@code AddToDoCommand} with the specified task description.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"     * @throws TaskFormatException If the arguments format is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"waikhincheong"},"content":"    private static Command prepareAddToDo(String arguments) throws TaskFormatException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"waikhincheong"},"content":"        final Matcher matcher \u003d TASK_TODO_DATA_ARGS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"waikhincheong"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"waikhincheong"},"content":"            throw new TaskFormatException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_TASK_FORMAT,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"TaskArguments\u003d\u0027%s\u0027\", arguments),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"waikhincheong"},"content":"                    AddToDoCommand.MESSAGE_USAGE","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"waikhincheong"},"content":"        return new AddToDoCommand(matcher.group(\"description\"));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"waikhincheong"},"content":"     * Prepares an AddDeadline command from the given arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"waikhincheong"},"content":"     * @param arguments The arguments provided for the Deadline task.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"waikhincheong"},"content":"     * @return A new {@code AddDeadlineCommand} with the specified description and due date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"waikhincheong"},"content":"     * @throws TaskFormatException If the arguments format is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"waikhincheong"},"content":"    private static Command prepareAddDeadline(String arguments) throws TaskFormatException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"waikhincheong"},"content":"        final Matcher matcher \u003d TASK_DEADLINE_DATA_ARGS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"waikhincheong"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"waikhincheong"},"content":"            throw new TaskFormatException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_TASK_FORMAT,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"TaskArguments\u003d\u0027%s\u0027\", arguments),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"waikhincheong"},"content":"                    AddDeadlineCommand.MESSAGE_USAGE","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"waikhincheong"},"content":"        LocalDateTime byDateTime \u003d TimeParser.parseDateTime(matcher.group(\"by\"));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"waikhincheong"},"content":"        return new AddDeadlineCommand(matcher.group(\"description\"), byDateTime);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"waikhincheong"},"content":"     * Prepares an AddEvent command from the given arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"waikhincheong"},"content":"     * @param arguments The arguments provided for the Event task.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"waikhincheong"},"content":"     * @return A new {@code AddEventCommand} with the specified description, start date, and end date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"waikhincheong"},"content":"     * @throws TaskFormatException If the arguments format is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"waikhincheong"},"content":"    private static Command prepareAddEvent(String arguments) throws TaskFormatException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"waikhincheong"},"content":"        final Matcher matcher \u003d TASK_EVENT_DATA_ARGS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"waikhincheong"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"waikhincheong"},"content":"            throw new TaskFormatException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_TASK_FORMAT,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"TaskArguments\u003d\u0027%s\u0027\", arguments),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"waikhincheong"},"content":"                    AddEventCommand.MESSAGE_USAGE","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"waikhincheong"},"content":"        LocalDateTime fromDateTime \u003d TimeParser.parseDateTime(matcher.group(\"from\"));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"waikhincheong"},"content":"        LocalDateTime toDateTime \u003d TimeParser.parseDateTime(matcher.group(\"to\"));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"waikhincheong"},"content":"        if (fromDateTime.isAfter(toDateTime)) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"waikhincheong"},"content":"            throw new TaskFormatException(","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_TASK_ARG_FORMAT,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"TaskArguments\u003d\u0027%s\u0027\", arguments),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"waikhincheong"},"content":"                    String.format(Messages.MESSAGE_INVALID_DATETIME_RANGE, fromDateTime, toDateTime)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"waikhincheong"},"content":"        return new AddEventCommand(matcher.group(\"description\"), fromDateTime, toDateTime);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"waikhincheong"},"content":"     * Prepares a DeleteCommand from the given arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"waikhincheong"},"content":"     * @param arguments The arguments provided to specify which task to delete.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"waikhincheong"},"content":"     * @return A new {@code DeleteCommand} with the specified task number.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"waikhincheong"},"content":"     * @throws CommandFormatException If the arguments format is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"waikhincheong"},"content":"    private static Command prepareDelete(String arguments) throws CommandFormatException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"waikhincheong"},"content":"        final Matcher matcher \u003d DELETE_TASK_ARGS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"waikhincheong"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"waikhincheong"},"content":"            throw new CommandFormatException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"Command\u003d\u0027delete\u0027, Arguments\u003d\u0027%s\u0027\", arguments),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"waikhincheong"},"content":"                    DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"waikhincheong"},"content":"        return new DeleteCommand(Integer.parseInt(matcher.group(\"taskNumber\")));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"waikhincheong"},"content":"     * Prepares a MarkCommand from the given arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"waikhincheong"},"content":"     * @param arguments The arguments provided to specify which task to mark as done.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"waikhincheong"},"content":"     * @return A new {@code MarkCommand} with the specified task number.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"waikhincheong"},"content":"     * @throws CommandFormatException If the arguments format is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"waikhincheong"},"content":"    private static Command prepareMark(String arguments) throws CommandFormatException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"waikhincheong"},"content":"        final Matcher matcher \u003d MARK_TASK_ARGS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"waikhincheong"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"waikhincheong"},"content":"            throw new CommandFormatException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"Command\u003d\u0027mark\u0027, Arguments\u003d\u0027%s\u0027\", arguments),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"waikhincheong"},"content":"                    MarkCommand.MESSAGE_USAGE","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"waikhincheong"},"content":"        return new MarkCommand(Integer.parseInt(matcher.group(\"taskNumber\")));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"waikhincheong"},"content":"     * Prepares an UnmarkCommand from the given arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"waikhincheong"},"content":"     * @param arguments The arguments provided to specify which task to unmark.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"waikhincheong"},"content":"     * @return A new {@code UnmarkCommand} with the specified task number.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"waikhincheong"},"content":"     * @throws CommandFormatException If the arguments format is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"waikhincheong"},"content":"    private static Command prepareUnmark(String arguments) throws CommandFormatException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"waikhincheong"},"content":"        final Matcher matcher \u003d UNMARK_TASK_ARGS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"waikhincheong"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"waikhincheong"},"content":"            throw new CommandFormatException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"Command\u003d\u0027unmark\u0027, Arguments\u003d\u0027%s\u0027\", arguments),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"waikhincheong"},"content":"                    UnmarkCommand.MESSAGE_USAGE","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"waikhincheong"},"content":"        return new UnmarkCommand(Integer.parseInt(matcher.group(\"taskNumber\")));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"waikhincheong"},"content":"     * Prepares a ListCommand or ListOnCommand based on the arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"waikhincheong"},"content":"     * @param arguments The arguments specifying a date for filtering, if provided.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code ListCommand} if no date is provided, or a {@code ListOnCommand} if a date is specified.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"waikhincheong"},"content":"     * @throws CommandFormatException If the arguments format is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"waikhincheong"},"content":"     * @throws TaskFormatException    If the date format is invalid.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"waikhincheong"},"content":"    private static Command prepareList(String arguments) throws CommandFormatException, TaskFormatException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"waikhincheong"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"waikhincheong"},"content":"            return new ListCommand();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"waikhincheong"},"content":"        final Matcher matcher \u003d LIST_TASK_ARGS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"waikhincheong"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"waikhincheong"},"content":"            throw new CommandFormatException(","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"Command\u003d\u0027list\u0027, Arguments\u003d\u0027%s\u0027\", arguments),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"waikhincheong"},"content":"                    ListOnCommand.MESSAGE_USAGE","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"waikhincheong"},"content":"        LocalDateTime onDateTime \u003d TimeParser.parseDateTime(matcher.group(\"on\"));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"waikhincheong"},"content":"        return new ListOnCommand(onDateTime);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":209}},{"path":"src/main/java/wkduke/parser/TimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.parser;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.common.Messages;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.TaskFormatException;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":" * Provides utility methods for parsing and formatting date and time strings.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":" * Supports flexible input formats and standardized output formats.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"public class TimeParser {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    // Solution below inspired by https://stackoverflow.com/questions/50023654/java-datetimeformatterbuilder-with-optional-pattern-results-in-datetimeparseexce","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    public static final DateTimeFormatter DECODING_FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"            .appendPattern(\"[yyyy/MM/dd][yyyy-MM-dd]\")","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"            .optionalStart()","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"            .appendPattern(\" [HHmm][HH:mm]\")","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"            .optionalEnd()","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"            .toFormatter();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"    public static final DateTimeFormatter ENCODING_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    public static final DateTimeFormatter CLI_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy h:mma\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"     * Parses a date-time string into a {@code LocalDateTime} object using the decoding formatter.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * @param dateTimeString The date-time string to parse.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code LocalDateTime} object representing the parsed date and time.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     * @throws TaskFormatException If the date-time string does not match the expected decoding format.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws TaskFormatException {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"        try {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"            return LocalDateTime.parse(dateTimeString, DECODING_FORMATTER);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"            throw new TaskFormatException(","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"                    e.getMessage(),","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"DateTimeArguments\u003d\u0027%s\u0027\", dateTimeString),","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_DATETIME_FORMAT","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"waikhincheong":48}},{"path":"src/main/java/wkduke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.common.Messages;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.FileContentException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.StorageFilePathException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.StorageOperationException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"import java.util.List;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":" * Manages storage of task data in the file system.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":" * Handles file reading, writing, and ensures proper file setup.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"public class Storage {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"    protected static final String DEFAULT_STORAGE_FILEPATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"    private final Path filePath;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     * Initializes a Storage instance with the default file path.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"     * @throws StorageOperationException If there is an error in creating the file or directories.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    public Storage() throws StorageOperationException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     * Initialises a Storage instance with a specified file path.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"     * @param filePathString The file path for storing tasks.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"     * @throws StorageOperationException If there is an error in creating the file or directories.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"     * @throws StorageFilePathException  If the file path is invalid (must end with \".txt\").","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"    public Storage(String filePathString) throws StorageOperationException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"        filePath \u003d Paths.get(filePathString);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"        Path folderPath \u003d filePath.getParent();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"        if (!isValidPath(filePath)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"            throw new StorageFilePathException(Messages.MESSAGE_FILE_PATH_ERROR);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"        try {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"            if (!Files.exists(folderPath)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"                Files.createDirectories(folderPath);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"            throw new StorageOperationException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_CREATE_FILE_ERROR,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"FilePath\u003d\u0027%s\", filePathString)","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"     * Validates that the file path ends with \".txt\".","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"     * @param filePath The file path to validate.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code true} if the path ends with \".txt\"; {@code false} otherwise.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"waikhincheong"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"waikhincheong"},"content":"        return filePath.toString().endsWith(\".txt\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"waikhincheong"},"content":"     * Loads the task list from the storage file.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code TaskList} containing tasks read from the file.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"waikhincheong"},"content":"     * @throws FileContentException      If the file content is improperly formatted.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"waikhincheong"},"content":"     * @throws StorageOperationException If there is an error reading from the file.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"waikhincheong"},"content":"    public TaskList load() throws FileContentException, StorageOperationException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"waikhincheong"},"content":"        try {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"waikhincheong"},"content":"            return TaskListDecoder.decodeTaskList(Files.readAllLines(filePath));","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"waikhincheong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"waikhincheong"},"content":"            throw new AssertionError(\"A non-existent file scenario is already handled earlier\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"waikhincheong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"waikhincheong"},"content":"            throw new StorageOperationException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_READ_FILE_ERROR,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"FilePath\u003d\u0027%s\", filePath)","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"waikhincheong"},"content":"     * Saves the given task list to the storage file.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The {@code TaskList} to save to the file.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"waikhincheong"},"content":"     * @throws StorageOperationException If there is an error writing to the file.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"waikhincheong"},"content":"    public void save(TaskList taskList) throws StorageOperationException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"waikhincheong"},"content":"        try {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"waikhincheong"},"content":"            List\u003cString\u003e encodedTaskList \u003d TaskListEncoder.encodeTaskList(taskList);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"waikhincheong"},"content":"            Files.write(filePath, encodedTaskList);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"waikhincheong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"waikhincheong"},"content":"            throw new StorageOperationException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_WRITE_FILE_ERROR,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"FilePath\u003d\u0027%s\", filePath)","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"waikhincheong":109}},{"path":"src/main/java/wkduke/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.common.Messages;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.FileContentException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.TaskFormatException;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import wkduke.parser.TimeParser;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.*;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"import java.util.List;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":" * Decodes task data from storage format into Task objects.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":" * Supports decoding ToDo, Deadline, and Event tasks from encoded strings.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"//Solution below inspired by https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/AddressBookDecoder.java","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"public class TaskListDecoder {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"    public static final Pattern TASK_PATTERN \u003d Pattern.compile(","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"            \"(?\u003ctaskType\u003e[TDE]) \\\\| (?\u003ctaskStatus\u003e[01]) \\\\| (?\u003cdescription\u003e[^|]+)\"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"                    + \"(?: \\\\| (?\u003cby\u003e[^|]+))?\"   // Optional by for D","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"                    + \"(?: \\\\| (?\u003cfrom\u003e[^|]+) \\\\| (?\u003cto\u003e[^|]+))?\" // Optional from and to for E","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    );","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     * Decodes a list of encoded task strings into a {@code TaskList}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"     * @param encodedTaskList The list of encoded task strings.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code TaskList} containing the decoded tasks.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * @throws FileContentException If any encoded task has an invalid format.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"    public static TaskList decodeTaskList(List\u003cString\u003e encodedTaskList) throws FileContentException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"        for (String encodedTask : encodedTaskList) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"            taskList.addTask(decodeTaskFromString(encodedTask));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"        return taskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"     * Decodes a single encoded task string into a {@code Task} object.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"     * @param encodedTask The encoded task string.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code Task} representing the decoded task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"     * @throws FileContentException If the encoded task has an invalid format.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"    public static Task decodeTaskFromString(String encodedTask) throws FileContentException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"        final Matcher matcher \u003d TASK_PATTERN.matcher(encodedTask);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"            throw new FileContentException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"                    Messages.MESSAGE_INVALID_TASK_ENCODED_FORMAT,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"EncodedTask\u003d\u0027%s\u0027\", encodedTask)","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"        TaskType taskType \u003d TaskType.fromCode(matcher.group(\"taskType\"));","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"        int taskStatus \u003d Integer.parseInt(matcher.group(\"taskStatus\"));","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"        try {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"            Task task \u003d getTask(matcher, taskType);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"            if (taskStatus \u003d\u003d 1) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"                task.markAsDone();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"            return task;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"        } catch (FileContentException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"            e.setDetail(String.format(\"EncodedTask\u003d\u0027%s\u0027\", encodedTask));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"waikhincheong"},"content":"            throw e;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"waikhincheong"},"content":"        } catch (TaskFormatException e) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"waikhincheong"},"content":"            throw new FileContentException(","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"waikhincheong"},"content":"                    e.getMessage(),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"waikhincheong"},"content":"                    String.format(\"EncodedTask\u003d\u0027%s\u0027\", encodedTask),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"waikhincheong"},"content":"                    e.getHelp()","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"waikhincheong"},"content":"            );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"waikhincheong"},"content":"     * Creates a {@code Task} from matched data using the specified {@code TaskType}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"waikhincheong"},"content":"     * @param matcher  The matcher containing the encoded task data.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"waikhincheong"},"content":"     * @param taskType The type of the task (ToDo, Deadline, Event).","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code Task} representing the decoded task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"waikhincheong"},"content":"     * @throws FileContentException If required fields are missing or invalid for the task type.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"waikhincheong"},"content":"     * @throws TaskFormatException  If there is an error parsing task date formats.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"waikhincheong"},"content":"    private static Task getTask(Matcher matcher, TaskType taskType) throws FileContentException, TaskFormatException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"waikhincheong"},"content":"        String description \u003d matcher.group(\"description\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"waikhincheong"},"content":"        Task task;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"waikhincheong"},"content":"        switch (taskType) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"waikhincheong"},"content":"            case TODO -\u003e task \u003d new ToDo(description);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"waikhincheong"},"content":"            case DEADLINE -\u003e {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"waikhincheong"},"content":"                String by \u003d matcher.group(\"by\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"waikhincheong"},"content":"                if (by \u003d\u003d null) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"waikhincheong"},"content":"                    throw new FileContentException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"waikhincheong"},"content":"                            Messages.MESSAGE_INVALID_DEADLINE_ENCODED","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"waikhincheong"},"content":"                    );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"waikhincheong"},"content":"                }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"waikhincheong"},"content":"                LocalDateTime dateTime \u003d TimeParser.parseDateTime(by);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"waikhincheong"},"content":"                task \u003d new Deadline(description, dateTime);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"waikhincheong"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"waikhincheong"},"content":"            case EVENT -\u003e {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"waikhincheong"},"content":"                String from \u003d matcher.group(\"from\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"waikhincheong"},"content":"                String to \u003d matcher.group(\"to\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"waikhincheong"},"content":"                if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"waikhincheong"},"content":"                    throw new FileContentException(","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"waikhincheong"},"content":"                            Messages.MESSAGE_INVALID_EVENT_ENCODED","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"waikhincheong"},"content":"                    );","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"waikhincheong"},"content":"                }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"waikhincheong"},"content":"                LocalDateTime fromDateTime \u003d TimeParser.parseDateTime(from);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"waikhincheong"},"content":"                LocalDateTime toDateTime \u003d TimeParser.parseDateTime(to);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"waikhincheong"},"content":"                task \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"waikhincheong"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"waikhincheong"},"content":"            default -\u003e throw new AssertionError(\"An invalid task type scenario is already handled earlier.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"waikhincheong"},"content":"        return task;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"waikhincheong":119}},{"path":"src/main/java/wkduke/storage/TaskListEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.Task;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.task.TaskList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import java.util.List;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":" * Encodes a {@code TaskList} into a format suitable for file storage.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":" * Each task in the list is converted to a string representation.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"//Solution below inspired by https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/AddressBookEncoder.java","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"public class TaskListEncoder {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"     * Encodes the tasks in the given {@code TaskList} into a list of strings.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The {@code TaskList} containing tasks to encode.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code List\u003cString\u003e} where each string represents an encoded task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"    public static List\u003cString\u003e encodeTaskList(TaskList taskList) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"        final List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"        for (Task task : taskList.getAllTask()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"            encodedTasks.add(task.encode());","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"        return encodedTasks;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"waikhincheong":30}},{"path":"src/main/java/wkduke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.parser.TimeParser;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":" * Contains a description and a date-time by which the task should be completed.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a {@code Deadline} task with the specified description and deadline date-time.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     * @param by          The date and time by which the task is due.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     * Encodes the {@code Deadline} task into a string format for file storage.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code String} representing the encoded task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    public String encode() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"        return String.format(\"D | %s | %s | %s\",","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"                isDone ? \"1\" : \"0\",","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"                description,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"                by.format(TimeParser.ENCODING_FORMATTER)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"        );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"     * Checks if the task is due on the specified date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"     * @param targetDateTime The date to check against the task\u0027s due date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code true} if the task is due on the specified date; {@code false} otherwise.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"    public boolean isOnDate(LocalDateTime targetDateTime) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"        return targetDateTime.isEqual(by);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"     * Returns a string representation of the task, including its type and due date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code String} representing the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"    public String toString() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by.format(TimeParser.CLI_FORMATTER) + \")\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves the date and time by which the task is due.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"     * @return The due date and time as a {@code LocalDateTime}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"        return by;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"waikhincheong"},"content":"     * Sets the due date and time for the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"waikhincheong"},"content":"     * @param by The new due date and time.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"waikhincheong"},"content":"    public void setBy(LocalDateTime by) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"waikhincheong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"waikhincheong":77}},{"path":"src/main/java/wkduke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.parser.TimeParser;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":" * Represents an event task with a start and end date-time.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":" * Contains a description and a time range during which the event occurs.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"     * Constructs an {@code Event} task with the specified description, start, and end date-time.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"     * @param from        The start date and time of the event.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"     * @param to          The end date and time of the event.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     * Encodes the {@code Event} task into a string format for file storage.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code String} representing the encoded event task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"    public String encode() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"        return String.format(\"E | %s | %s | %s | %s\",","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"                isDone ? \"1\" : \"0\",","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"                description,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"                from.format(TimeParser.ENCODING_FORMATTER),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"                to.format(TimeParser.ENCODING_FORMATTER)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"        );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"     * Checks if the event is occurring on the specified date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"     * @param targetDateTime The date to check against the event\u0027s time range.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code true} if the specified date falls within the event\u0027s time range; {@code false} otherwise.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"    public boolean isOnDate(LocalDateTime targetDateTime) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"        return targetDateTime.isAfter(from) \u0026\u0026 targetDateTime.isBefore(to);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"     * Returns a string representation of the event, including its type, time range, and description.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code String} representing the event.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"    public String toString() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + from.format(TimeParser.CLI_FORMATTER) + \" to:\" + to.format(TimeParser.CLI_FORMATTER) + \")\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves the start date and time of the event.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"     * @return The start date and time as a {@code LocalDateTime}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"waikhincheong"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"waikhincheong"},"content":"        return from;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"waikhincheong"},"content":"     * Sets the start date and time of the event.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"waikhincheong"},"content":"     * @param from The new start date and time.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"waikhincheong"},"content":"    public void setFrom(LocalDateTime from) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"waikhincheong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves the end date and time of the event.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"waikhincheong"},"content":"     * @return The end date and time as a {@code LocalDateTime}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"waikhincheong"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"waikhincheong"},"content":"        return to;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"waikhincheong"},"content":"     * Sets the end date and time of the event.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"waikhincheong"},"content":"     * @param to The new end date and time.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"waikhincheong"},"content":"    public void setTo(LocalDateTime to) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"waikhincheong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"waikhincheong":99}},{"path":"src/main/java/wkduke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" * Represents a general task with a description and completion status.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":" * Subclasses must implement methods for encoding and date-based checks.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"    protected String description;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a {@code Task} with the specified description.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     * Encodes the task into a string format suitable for file storage.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code String} representing the encoded task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    public abstract String encode();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     * @return The description of the task as a {@code String}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"    public String getDescription() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"        return description;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"     * Sets the description of the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"     * @param description The new description of the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves the status icon of the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code \"X\"} if the task is done, or a blank space if it is not done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code true} if the task is done; {@code false} otherwise.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"        return isDone;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"waikhincheong"},"content":"     * Checks if the task is scheduled for or due on a specified date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"waikhincheong"},"content":"     * @param targetDateTime The date to check against.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code true} if the task is on the specified date; {@code false} otherwise.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"waikhincheong"},"content":"    public abstract boolean isOnDate(LocalDateTime targetDateTime);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"waikhincheong"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"waikhincheong"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"waikhincheong"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"waikhincheong"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"waikhincheong"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"waikhincheong"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"waikhincheong"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code String} representing the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"waikhincheong"},"content":"    public String toString() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"waikhincheong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"waikhincheong":98}},{"path":"src/main/java/wkduke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"import java.util.List;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":" * Manages a list of tasks, providing methods to add, delete, and query tasks.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"public class TaskList {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"    public final List\u003cTask\u003e taskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    public TaskList() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a {@code TaskList} with the given list of tasks.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"     * @param taskList The initial list of tasks.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * @param task The task to add.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"        taskList.add(task);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"     * Deletes a task at the specified index from the list.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves all tasks in the list.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code List\u003cTask\u003e} containing all tasks.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"    public List\u003cTask\u003e getAllTask() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"        return taskList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves all tasks that occur on the specified date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"     * @param targetDateTime The date to check against.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code List\u003cTask\u003e} containing tasks scheduled on the specified date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"    public List\u003cTask\u003e getAllTaskOnDate(LocalDateTime targetDateTime) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"            if (task.isOnDate(targetDateTime)) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"                result.add(task);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"waikhincheong"},"content":"            }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"waikhincheong"},"content":"        return result;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"waikhincheong"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"waikhincheong"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"waikhincheong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"waikhincheong"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves the index of a specified task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"waikhincheong"},"content":"     * @param task The task to find.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"waikhincheong"},"content":"     * @return The index of the task, or {@code -1} if it is not found.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"waikhincheong"},"content":"    public int getTaskIndex(Task task) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"waikhincheong"},"content":"        return taskList.indexOf(task);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"waikhincheong"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code true} if the task list is empty; {@code false} otherwise.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"waikhincheong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"waikhincheong"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"waikhincheong"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"waikhincheong"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code true} if the task was successfully marked as done; {@code false} if it was already done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"waikhincheong"},"content":"    public boolean markTask(int index) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"waikhincheong"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"waikhincheong"},"content":"        if (task.isDone()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"waikhincheong"},"content":"            return false;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"waikhincheong"},"content":"        task.markAsDone();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"waikhincheong"},"content":"        return true;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves the number of tasks in the list.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"waikhincheong"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"waikhincheong"},"content":"    public int size() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"waikhincheong"},"content":"        return taskList.size();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"waikhincheong"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"waikhincheong"},"content":"     * @param index The index of the task to mark as not done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code true} if the task was successfully marked as not done; {@code false} if it was already not done.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"waikhincheong"},"content":"    public boolean unmarkTask(int index) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"waikhincheong"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"waikhincheong"},"content":"        if (!task.isDone()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"waikhincheong"},"content":"            return false;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"waikhincheong"},"content":"        task.markAsUndone();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"waikhincheong"},"content":"        return true;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":140}},{"path":"src/main/java/wkduke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":" * Enum representing the types of tasks available in the application.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":" * Each task type is associated with a specific code used for encoding and decoding.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"public enum TaskType {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"    TODO(\"T\"),","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"    EVENT(\"E\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"    private final String code;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a {@code TaskType} with the specified code.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"     * @param code The code representing the task type.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    TaskType(String code) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"        this.code \u003d code;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves the {@code TaskType} corresponding to the given code.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"     * @param code The code representing the task type.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"     * @return The {@code TaskType} associated with the given code.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"     * @throws IllegalArgumentException If the code does not match any task type.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"    public static TaskType fromCode(String code) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"        for (TaskType type : TaskType.values()) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"            if (type.code.equals(code)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"                return type;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"        throw new IllegalArgumentException(\"Unknown task type: \" + code);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"     * Retrieves the code associated with the task type.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"     * @return The code as a {@code String}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"    public String getCode() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"        return code;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"     * Returns a string representation of the task type in lowercase.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"     * @return The name of the task type in lowercase as a {@code String}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"    public String toString() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"        return name().toLowerCase();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"waikhincheong":57}},{"path":"src/main/java/wkduke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.task;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":" * Represents a ToDo task with a description.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":" * A ToDo task has no associated date or deadline.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a {@code ToDo} task with the specified description.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"     * Encodes the {@code ToDo} task into a string format for file storage.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code String} representing the encoded task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"    public String encode() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"        return String.format(\"T | %s | %s\",","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"                isDone ? \"1\" : \"0\",","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"                description","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"        );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     * Checks if the task is scheduled for or due on a specified date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     * Since a ToDo task has no associated date, this always returns {@code false}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"     * @param targetDateTime The date to check against.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"     * @return {@code false}, as ToDo tasks have no associated date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"    public boolean isOnDate(LocalDateTime targetDateTime) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"        return false;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"     * Returns a string representation of the ToDo task, including its type and description.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"     * @return A {@code String} representing the task.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"    public String toString() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"waikhincheong":53}},{"path":"src/main/java/wkduke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"package wkduke.ui;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"import wkduke.common.Messages;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"import wkduke.exception.WKDukeException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"import java.util.List;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":" * Handles user interface for the WKDuke application.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":" * Provides methods to display messages, errors, and read user commands.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":" */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"public class Ui {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    private static final String BORDER_LINE \u003d \"\\t_________________________________________________________________________\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    private static final String INDENT \u003d \"\\t \";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    private static final String WK_DUKE_LOGO \u003d \"\"\"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"             ___       __   ___  __    ________  ___  ___  ___  __    _______","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"            \\t |\\\\  \\\\     |\\\\  \\\\|\\\\  \\\\|\\\\  \\\\ |\\\\   ___ \\\\|\\\\  \\\\|\\\\  \\\\|\\\\  \\\\|\\\\  \\\\ |\\\\  ___ \\\\","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"            \\t \\\\ \\\\  \\\\    \\\\ \\\\  \\\\ \\\\  \\\\/  /|\\\\ \\\\  \\\\_|\\\\ \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\/  /|\\\\ \\\\   __/|","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"            \\t  \\\\ \\\\  \\\\  __\\\\ \\\\  \\\\ \\\\   ___  \\\\ \\\\  \\\\ \\\\\\\\ \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\   ___  \\\\ \\\\  \\\\_|/__","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"            \\t   \\\\ \\\\  \\\\|\\\\__\\\\_\\\\  \\\\ \\\\  \\\\\\\\ \\\\  \\\\ \\\\  \\\\_\\\\\\\\ \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\ \\\\  \\\\ \\\\  \\\\_|\\\\ \\\\","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"            \\t    \\\\ \\\\____________\\\\ \\\\__\\\\\\\\ \\\\__\\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\__\\\\\\\\ \\\\__\\\\ \\\\_______\\\\","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"            \\t     \\\\|____________|\\\\|__| \\\\|__|\\\\|_______|\\\\|_______|\\\\|__| \\\\|__|\\\\|_______|","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"            \"\"\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"    private final Scanner in;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"    private final PrintStream out;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"     * Constructs a {@code Ui} object for interacting with the user.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"     * Initializes the input scanner and output stream.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"    public Ui() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"        this.out \u003d System.out;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"waikhincheong"},"content":"     * Prints a series of messages to the user, surrounded by a border line.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"waikhincheong"},"content":"     * @param messages The messages to print.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"waikhincheong"},"content":"    public void printMessages(String... messages) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"waikhincheong"},"content":"        showLine();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"waikhincheong"},"content":"        for (String message : messages) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"waikhincheong"},"content":"            out.println(INDENT + message);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"waikhincheong"},"content":"        showLine();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"waikhincheong"},"content":"     * Reads a command from the user, skipping empty lines.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"waikhincheong"},"content":"     * @return The command entered by the user as a {@code String}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"waikhincheong"},"content":"    public String readCommand() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"waikhincheong"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"waikhincheong"},"content":"        while (userInput.trim().isEmpty()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"waikhincheong"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"waikhincheong"},"content":"        return userInput;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"waikhincheong"},"content":"     * Displays an error message based on the provided {@code WKDukeException}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"waikhincheong"},"content":"     * Includes error class, message, additional details, and help information if available.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"waikhincheong"},"content":"     * @param e The exception containing error information.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"waikhincheong"},"content":"    public void showError(WKDukeException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"waikhincheong"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"waikhincheong"},"content":"        messages.add(String.format(\"[Error]-[%s]\", e.getClass().getSimpleName()));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"waikhincheong"},"content":"        if (e.getMessage() !\u003d null \u0026\u0026 !e.getMessage().trim().isEmpty()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"waikhincheong"},"content":"            messages.add(String.format(\" Message: %s\", e.getMessage()));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"waikhincheong"},"content":"        if (e.getDetail() !\u003d null \u0026\u0026 !e.getDetail().trim().isEmpty()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"waikhincheong"},"content":"            messages.add(String.format(\" Info: %s\", e.getDetail()));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"waikhincheong"},"content":"        if (e.getHelp() !\u003d null \u0026\u0026 !e.getHelp().trim().isEmpty()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"waikhincheong"},"content":"            messages.add(String.format(\" Help: %s\", e.getHelp()));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"waikhincheong"},"content":"        printMessages(messages.toArray(new String[0]));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"waikhincheong"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"waikhincheong"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"waikhincheong"},"content":"        printMessages(Messages.MESSAGE_GOODBYE);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"waikhincheong"},"content":"     * Displays an initialization error message based on the provided {@code WKDukeException}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"waikhincheong"},"content":"     * Includes error class, message, additional details, and help information if available.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"waikhincheong"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"waikhincheong"},"content":"     * @param e The exception containing error information.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"waikhincheong"},"content":"    public void showInitError(WKDukeException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"waikhincheong"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"waikhincheong"},"content":"        messages.add(String.format(\"[Init-Error]-[%s]\", e.getClass().getSimpleName()));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"waikhincheong"},"content":"        if (e.getMessage() !\u003d null \u0026\u0026 !e.getMessage().trim().isEmpty()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"waikhincheong"},"content":"            messages.add(String.format(\" Message: %s\", e.getMessage()));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"waikhincheong"},"content":"        if (e.getDetail() !\u003d null \u0026\u0026 !e.getDetail().trim().isEmpty()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"waikhincheong"},"content":"            messages.add(String.format(\" Info: %s\", e.getDetail()));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"waikhincheong"},"content":"        if (e.getHelp() !\u003d null \u0026\u0026 !e.getHelp().trim().isEmpty()) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"waikhincheong"},"content":"            messages.add(String.format(\" Help: %s\", e.getHelp()));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"waikhincheong"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"waikhincheong"},"content":"        printMessages(messages.toArray(new String[0]));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"waikhincheong"},"content":"     * Displays a line border to separate sections in the console output.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"waikhincheong"},"content":"    public void showLine() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"waikhincheong"},"content":"        out.println(BORDER_LINE);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"waikhincheong"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"waikhincheong"},"content":"     * Displays the welcome logo and message to the user.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"waikhincheong"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"waikhincheong"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"waikhincheong"},"content":"        printMessages(WK_DUKE_LOGO, Messages.MESSAGE_WELCOME);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"waikhincheong"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"waikhincheong"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"waikhincheong":128}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"waikhincheong"},"content":"list","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"waikhincheong"},"content":"todo read book","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"waikhincheong"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"waikhincheong"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"waikhincheong"},"content":"todo borrow book","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"waikhincheong"},"content":"deadline return book 2 /by Sunday","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"waikhincheong"},"content":"event project meeting 2 /from Mon 2pm /to 4pm","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"list","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"waikhincheong"},"content":"mark 1","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"waikhincheong"},"content":"list","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"mark 2","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"list","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"mark 3","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"mark 3","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"list","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"unmark 3","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"unmark 3","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"list","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"unmark 2","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"list","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"waikhincheong"},"content":"unmark 1","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"waikhincheong"},"content":"list","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"waikhincheong"},"content":"delete 1","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"waikhincheong"},"content":"list","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"waikhincheong"},"content":"delete 2","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"waikhincheong"},"content":"list","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"waikhincheong"},"content":"[Invalid Input Test]","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"mark","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"waikhincheong"},"content":"mark a","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"waikhincheong"},"content":"mark 10","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"waikhincheong"},"content":"unmark","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"waikhincheong"},"content":"unmark a","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"waikhincheong"},"content":"unmark 10","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"waikhincheong"},"content":"deadline return book","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"waikhincheong"},"content":"deadline return book /by","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"waikhincheong"},"content":"event project meeting /from","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"waikhincheong"},"content":"event project meeting /from Aug 6th","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"waikhincheong"},"content":"bye","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"waikhincheong":38}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"waikhincheong"},"content":"if exist .\\data rmdir /S /Q .\\data","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"waikhincheong"},"content":"javac -cp ..\\src\\main\\java\\wkduke\\WKDuke.java -Xlint:none -d ..\\bin ^","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"waikhincheong"},"content":"    ..\\src\\main\\java\\wkduke\\*.java ^","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"waikhincheong"},"content":"    ..\\src\\main\\java\\wkduke\\command\\*.java ^","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"waikhincheong"},"content":"    ..\\src\\main\\java\\wkduke\\common\\*.java ^","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"waikhincheong"},"content":"    ..\\src\\main\\java\\wkduke\\exception\\*.java ^","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"waikhincheong"},"content":"    ..\\src\\main\\java\\wkduke\\parser\\*.java ^","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"waikhincheong"},"content":"    ..\\src\\main\\java\\wkduke\\storage\\*.java ^","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"waikhincheong"},"content":"    ..\\src\\main\\java\\wkduke\\task\\*.java ^","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"waikhincheong"},"content":"    ..\\src\\main\\java\\wkduke\\ui\\*.java","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"waikhincheong"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"waikhincheong"},"content":"java -classpath ..\\bin wkduke.WKDuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":19,"waikhincheong":12}}]
