[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbtht"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bbtht"},"content":"    public String deadlineDate;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bbtht"},"content":"    public Deadline(String deadlineDescription, String date) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bbtht"},"content":"        super(deadlineDescription);","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bbtht"},"content":"        this.deadlineDate \u003d date;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bbtht"},"content":"    @Override","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bbtht"},"content":"    public String toString() {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bbtht"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineDate + \")\";","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bbtht"},"content":"}","lastModifiedDate":"2024-11-19","isFullCredit":false}],"authorContributionMap":{"bbtht":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbtht"},"content":"public class Event extends Task {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bbtht"},"content":"    private final String eventStart;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bbtht"},"content":"    private final String eventEnd;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bbtht"},"content":"    public Event(String eventDescription, String from, String to) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bbtht"},"content":"        super(eventDescription);","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bbtht"},"content":"        this.eventStart \u003d from;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bbtht"},"content":"        this.eventEnd \u003d to;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bbtht"},"content":"    @Override","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bbtht"},"content":"    public String toString() {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bbtht"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + eventStart + \", to: \" + eventEnd + \")\";","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bbtht"},"content":"}","lastModifiedDate":"2024-11-19","isFullCredit":false}],"authorContributionMap":{"bbtht":15}},{"path":"src/main/java/Sunny.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbtht"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bbtht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bbtht"},"content":"import java.util.List;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bbtht"},"content":"public class Sunny {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bbtht"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bbtht"},"content":"    private static final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bbtht"},"content":"    // prints a separator line","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bbtht"},"content":"    private static void printSeparator() {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bbtht"},"content":"        System.out.println(\"____________________________________________________________________________________________________________________________\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bbtht"},"content":"    // prints messages with separators to allow cleaner code","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bbtht"},"content":"    private static void printMessage(String... messages) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bbtht"},"content":"        printSeparator();","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bbtht"},"content":"        for (String message : messages) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bbtht"},"content":"            System.out.println(message);","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bbtht"},"content":"        printSeparator();","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bbtht"},"content":"    public enum TaskType {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bbtht"},"content":"        TODO,","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bbtht"},"content":"        DEADLINE,","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bbtht"},"content":"        EVENT;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bbtht"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bbtht"},"content":"        // display welcome message","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bbtht"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Sunny\\n\" +","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bbtht"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bbtht"},"content":"                \"Available Commands:\\n\" +","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bbtht"},"content":"                \"[list]: list all the tasks\\n\" +","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bbtht"},"content":"                \"[todo \u003cdescription\u003e]: add a todo task\\n\" +","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bbtht"},"content":"                \"[deadline \u003cdescription\u003e /by \u003cdate\u003e]: add a deadline task\\n\" +","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bbtht"},"content":"                \"[event \u003cdescription\u003e /from \u003ctime\u003e /to \u003ctime\u003e]: add an event task\\n\" +","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bbtht"},"content":"                \"[mark \u003ctaskNumber\u003e]: mark task number as done\\n\" +","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bbtht"},"content":"                \"[unmark \u003ctaskNumber\u003e]: mark task number as not done\\n\" +","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bbtht"},"content":"                \"[bye]: end the session\";","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bbtht"},"content":"        printMessage(welcomeMessage);","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bbtht"},"content":"        // scanner for user input","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bbtht"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bbtht"},"content":"        String input;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bbtht"},"content":"        // loop to process user input","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bbtht"},"content":"        while (true) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bbtht"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bbtht"},"content":"            // end session if user inputs \"bye\"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bbtht"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bbtht"},"content":"                printMessage(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bbtht"},"content":"                break;","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bbtht"},"content":"            } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bbtht"},"content":"                // display list of tasks when user input \"list\"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bbtht"},"content":"                listTasks();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bbtht"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bbtht"},"content":"                // mark task as done when user input starts with \"mark\" (e.g. mark 2)","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bbtht"},"content":"                markTask(input);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bbtht"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bbtht"},"content":"                // mark task as not done when user input starts with \"unmark\" (e.g. unmark 2)","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bbtht"},"content":"                unmarkTask(input);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bbtht"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bbtht"},"content":"                // delete task when user input starts with \"delete\" (e.g. delete 2)","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bbtht"},"content":"                deleteTask(input);","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bbtht"},"content":"            }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bbtht"},"content":"            else {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bbtht"},"content":"                addTask(input);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bbtht"},"content":"            }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bbtht"},"content":"        // end scanner session","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bbtht"},"content":"        in.close();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bbtht"},"content":"    // method to display all task","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bbtht"},"content":"    private static void listTasks() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bbtht"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bbtht"},"content":"        taskList.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bbtht"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bbtht"},"content":"            taskList.append(\" \").append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bbtht"},"content":"        printMessage(taskList.toString());","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bbtht"},"content":"    // method to add a new task based on user input","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bbtht"},"content":"    private static void addTask(String input) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bbtht"},"content":"        // check if the task list has reached its limit","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bbtht"},"content":"        if (tasks.size() \u003e\u003d MAX_TASKS) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. There are too many tasks for Sunny to handle! Maximum is \" + MAX_TASKS + \" tasks.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bbtht"},"content":"            return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bbtht"},"content":"        // split the input into maximum two parts: command and description","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bbtht"},"content":"        String[] taskParts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bbtht"},"content":"        // convert part 1 of the input into task type (all lowercase for consistency)","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bbtht"},"content":"        String task \u003d taskParts[0].toLowerCase();","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bbtht"},"content":"        try {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bbtht"},"content":"            TaskType taskType \u003d TaskType.valueOf(task.toUpperCase()); // Convert string to enum","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bbtht"},"content":"            // determine the type of task to add","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bbtht"},"content":"            switch (taskType) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bbtht"},"content":"                case TODO:","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bbtht"},"content":"                    addTodoTask(taskParts); // call method to add to do task","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bbtht"},"content":"                    break;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bbtht"},"content":"                case DEADLINE:","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bbtht"},"content":"                    addDeadlineTask(taskParts); // call method to add a deadline task","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bbtht"},"content":"                    break;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bbtht"},"content":"                case EVENT:","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bbtht"},"content":"                    addEventTask(taskParts); // call method to add an event task","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bbtht"},"content":"                    break;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bbtht"},"content":"                default:","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bbtht"},"content":"                    printMessage(\" Error, Please try again. Please provide a valid task type (e.g. todo, deadline, or event)\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bbtht"},"content":"            }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bbtht"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. Please provide a valid task type (e.g. todo, deadline, or event).\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bbtht"},"content":"    // method to add to do task","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bbtht"},"content":"    private static void addTodoTask(String[] taskParts) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bbtht"},"content":"        // check if user provided description for the task","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bbtht"},"content":"        if (taskParts.length \u003c 2 || taskParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. The description of a todo task cannot be empty.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bbtht"},"content":"            return; // exit the method if no description is provided","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bbtht"},"content":"        // create a new to do task with the provided description and add it to the tasks array","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bbtht"},"content":"        tasks.add(new Todo(taskParts[1]));","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bbtht"},"content":"        printMessage(\" added: \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bbtht"},"content":"    // method to add a deadline task","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bbtht"},"content":"    private static void addDeadlineTask(String[] taskParts) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bbtht"},"content":"        // check if the user provided a description and a due date","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bbtht"},"content":"        if (taskParts.length \u003c 2 || taskParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. The description of a deadline task cannot be empty.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bbtht"},"content":"            return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bbtht"},"content":"        // split the description and due date using \"/by\" as the delimiter","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bbtht"},"content":"        String[] deadlineParts \u003d taskParts[1].split(\"/by\", 2);","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bbtht"},"content":"        if (deadlineParts.length \u003c 2 || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. Please provide a due date (e.g. /by Monday).\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bbtht"},"content":"            return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bbtht"},"content":"        // create a new Deadline task with the description and due date, and add it to the tasks array","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bbtht"},"content":"        tasks.add(new Deadline(deadlineParts[0].trim(), deadlineParts[1].trim()));","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"bbtht"},"content":"        printMessage(\" added: \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"bbtht"},"content":"    // method to add an event task","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"bbtht"},"content":"    private static void addEventTask(String[] taskParts) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"bbtht"},"content":"        // check if the user provided a description","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"bbtht"},"content":"        if (taskParts.length \u003c 2 || taskParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. The description of an event task cannot be empty.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"bbtht"},"content":"            return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"bbtht"},"content":"        String input \u003d taskParts[1].trim();","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"bbtht"},"content":"        // check for the presence of both /from and /to","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"bbtht"},"content":"        if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. Please provide the start time and end time of the event (e.g. /from Mon 2pm /to 4pm).\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"bbtht"},"content":"            return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"bbtht"},"content":"        // validate the order of /from and /to","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"bbtht"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"bbtht"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"bbtht"},"content":"        if (fromIndex \u003e toIndex) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. The /from time must come before the /to time.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"bbtht"},"content":"            return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"bbtht"},"content":"        // split the description into parts using \"/from\" and \"/to\" as delimiters","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"bbtht"},"content":"        String[] eventParts \u003d input.split(\"/from|/to\", 3);","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"bbtht"},"content":"        // check if the split produced the expected number of parts","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"bbtht"},"content":"        if (eventParts.length \u003c 3 || eventParts[1].trim().isEmpty() || eventParts[2].trim().isEmpty()) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. Please provide the end time of the event (e.g. /to 4pm).\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"bbtht"},"content":"            return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"bbtht"},"content":"        // create a new Event task with the description, start time, and end time, and add it to the tasks array","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"bbtht"},"content":"        tasks.add(new Event(eventParts[0].trim(), eventParts[1].trim(), eventParts[2].trim()));","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"bbtht"},"content":"        printMessage(\"added: \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"bbtht"},"content":"    // method to mark specified task as done","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"bbtht"},"content":"    private static void markTask(String input) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"bbtht"},"content":"        // split the input into command and task number","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"bbtht"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"bbtht"},"content":"        // check if input has 2 parts (command and task number)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"bbtht"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. Please provide a task number to mark as done (e.g. mark \u003cnumber\u003e).\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"bbtht"},"content":"            return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"bbtht"},"content":"        try {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"bbtht"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"bbtht"},"content":"            // validate if the task number is within the bounds of the task list","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"bbtht"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"bbtht"},"content":"                printMessage(\" Error, Please try again. Please provide a valid task number within the task list.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"bbtht"},"content":"                return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"bbtht"},"content":"            }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"bbtht"},"content":"            // check if the specified task is already marked as done","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"bbtht"},"content":"            if (tasks.get(taskNumber).isDone) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"bbtht"},"content":"                printMessage(\" Task \" + (taskNumber + 1) + \" is already marked as done!\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"bbtht"},"content":"            } else {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"bbtht"},"content":"                // mark task as done","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"bbtht"},"content":"                tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"bbtht"},"content":"                printMessage(\"Nice! I\u0027ve marked this task as done:\\n    \" + tasks.get(taskNumber));","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"bbtht"},"content":"            }","lastModifiedDate":"2024-10-12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"bbtht"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"bbtht"},"content":"            // handle the case where the task number is not a valid integer","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. Please provide a valid numeric task number.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"bbtht"},"content":"    // method to mark specified task as not done","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"bbtht"},"content":"    private static void unmarkTask(String input) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"bbtht"},"content":"        String[] partsU \u003d input.split(\" \");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"bbtht"},"content":"        // check if the input has less than 2 parts or if the task number is empty","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"bbtht"},"content":"        if (partsU.length \u003c 2) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. Please provide a task number to unmark as done (e.g. unmark \u003cnumber\u003e).\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"bbtht"},"content":"            return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"bbtht"},"content":"        try {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"bbtht"},"content":"            int taskNumber \u003d Integer.parseInt(partsU[1]) - 1;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"bbtht"},"content":"            // validate if the task number is within the bounds of the task list","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"bbtht"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"bbtht"},"content":"                printMessage(\" Error, Please try again. Please provide a valid task number within the task list.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"bbtht"},"content":"                return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"bbtht"},"content":"            }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"bbtht"},"content":"            // check if the specified task is already marked as not done","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"bbtht"},"content":"            if (!tasks.get(taskNumber).isDone) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"bbtht"},"content":"                printMessage(\" Task \" + (taskNumber + 1) + \" is already marked as not done!\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"bbtht"},"content":"            } else {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"bbtht"},"content":"                // mark task as not done","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"bbtht"},"content":"                tasks.get(taskNumber).markAsNotDone();","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"bbtht"},"content":"                printMessage(\" Nice! I\u0027ve marked this task as not done:\\n    \" + tasks.get(taskNumber));","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"bbtht"},"content":"            }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"bbtht"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"bbtht"},"content":"            // handle the case where the task number is not a valid integer","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. Please provide a valid numeric task number.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"bbtht"},"content":"    private static void deleteTask(String input) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"bbtht"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"bbtht"},"content":"        // validate the input format","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"bbtht"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. Please provide a task number to delete (e.g. delete \u003cnumber\u003e).\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"bbtht"},"content":"            return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-10-01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"bbtht"},"content":"        try {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"bbtht"},"content":"            int taskNumber \u003d Integer.parseInt(parts[1]) - 1; // Convert input to zero-based index","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"bbtht"},"content":"            // validate the task number is within bounds","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"bbtht"},"content":"            if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"bbtht"},"content":"                printMessage(\" Error, Please try again. Please provide a valid task number within the task list.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"bbtht"},"content":"                return;","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"bbtht"},"content":"            }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"bbtht"},"content":"            // remove the task from the list and display the removed task","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"bbtht"},"content":"            Task removedTask \u003d tasks.remove(taskNumber);","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"bbtht"},"content":"            printMessage(\"Noted. I\u0027ve removed this task:\", \"  \" + removedTask,","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"bbtht"},"content":"                    \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"bbtht"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"bbtht"},"content":"            printMessage(\" Error, Please try again. Please provide a valid numeric task number.\");","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"bbtht"},"content":"}","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false}],"authorContributionMap":{"bbtht":298}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbtht"},"content":"public class Task {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bbtht"},"content":"    // fields to store the task description and its completion status","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bbtht"},"content":"    protected String description;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bbtht"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bbtht"},"content":"    // constructor that initialises task with description and sets initial status to \"not done\"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bbtht"},"content":"    public Task(String desc) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bbtht"},"content":"        this.description \u003d desc;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bbtht"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bbtht"},"content":"    // returns status \"X\" if task is done, and a blank space if task not done","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bbtht"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bbtht"},"content":"        if (isDone) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bbtht"},"content":"            return \"X\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bbtht"},"content":"        } else {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bbtht"},"content":"            return \" \";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bbtht"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bbtht"},"content":"    // marks the task as done by setting isDone to true","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bbtht"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bbtht"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bbtht"},"content":"    // marks the task as not done by setting isDone to false","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bbtht"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bbtht"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bbtht"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bbtht"},"content":"    public String toString() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bbtht"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bbtht"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"bbtht":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bbtht"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bbtht"},"content":"    public Todo(String todoDescription) {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bbtht"},"content":"        super(todoDescription);","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bbtht"},"content":"","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bbtht"},"content":"    @Override","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bbtht"},"content":"    public String toString() {","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bbtht"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bbtht"},"content":"    }","lastModifiedDate":"2024-11-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bbtht"},"content":"}","lastModifiedDate":"2024-11-19","isFullCredit":false}],"authorContributionMap":{"bbtht":10}}]
