[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"// https://www.youtube.com/watch?v\u003dwq9SJb8VeyM","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"// https://www.simplilearn.com/tutorials/java-tutorial/enum-in-java","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"// https://www.geeksforgeeks.org/java-program-to-convert-enum-to-string/","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"// https://stackoverflow.com/questions/23608885/how-to-define-static-constants-in-a-java-enum","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"public enum Command {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"    BYE_COMMAND(\"bye\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"    LIST_COMMAND(\"list\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"    MARK_COMMAND(\"mark\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"    UNMARK_COMMAND(\"unmark\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"    TODO_COMMAND(\"todo\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"    DEADLINE_COMMAND(\"deadline\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"    EVENT_COMMAND(\"event\"),","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    DELETE_COMMAND(\"delete\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    private final String command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    Command(String command) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"        return command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    // Static fields for easy access","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    public static final String BYE \u003d BYE_COMMAND.toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    public static final String LIST \u003d LIST_COMMAND.toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public static final String MARK \u003d MARK_COMMAND.toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    public static final String UNMARK \u003d UNMARK_COMMAND.toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public static final String TODO \u003d TODO_COMMAND.toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    public static final String DEADLINE \u003d DEADLINE_COMMAND.toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    public static final String EVENT \u003d EVENT_COMMAND.toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    public static final String DELETE \u003d DELETE_COMMAND.toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"ameliadevs":36}},{"path":"src/main/java/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"// https://stackoverflow.com/questions/8423700/how-to-create-a-custom-exception-type-in-java","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"    public CommandException(String message) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"        super(message);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"ameliadevs":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"// Deadlines are tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"    protected String due;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"    public Deadline(String description, boolean isDone, String due) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"        this.due \u003d due;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"    public String getDue() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"        return due;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"        // If description does not end with a space, add a space behind it","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"        if (!description.endsWith(\" \")) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"            description +\u003d \" \";","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        } ","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + getDue() + \")\";","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"ameliadevs":25}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"// Events are tasks that start at a specific date/time and ends at a specific date/time","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"// e.g., (a) team project meeting 2/10/2019 2-4pm (b) orientation week 4/10/2019 to 11/10/2019","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"    protected String start;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"    protected String end;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"    public Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    public String getStart() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"        return start;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    public String getEnd() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"        return end;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        // If description does not end with a space, add a space behind it","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        if (!description.endsWith(\" \")) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"            description +\u003d \" \";","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"        } ","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + getStart() + \" to: \" + getEnd() + \")\";","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"ameliadevs":32}},{"path":"src/main/java/Javaro.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import java.util.regex.*;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"public class Javaro {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"    // Use constant variables to store the keyword commands","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"    // https://www.javatpoint.com/java-constant","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"    static final String CHATBOT_NAME \u003d \"Javaro\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"    static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"    static final String NEW_LINE \u003d \"\\n\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    static final String BY\u003d\"/by\";","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    static final String FROM\u003d\"/from\";","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    static final String TO\u003d\"/to\";","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    // Solution below adapted from https://stackoverflow.com/questions/1073787/print-spaces-with-string-format","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    // https://stackoverflow.com/questions/69576641/why-would-you-use-a-stringbuilder-method-over-a-string-in-java","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    public static String formatSpace(int numberOfSpace) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"        // String space \u003d String.format(\"%\" + numberOfSpace + \"s\", \"\");","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"        String format \u003d \"%\" + numberOfSpace + \"s\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        String space \u003d String.format(format, \"\");","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        return space;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    public static String getSpace(boolean isLine, boolean isTask) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"        // If space is to come before a horizontal line, use \"    \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        if (isLine \u003d\u003d true \u0026\u0026 isTask \u003d\u003d false) {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"            return formatSpace(4);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        } else if (isLine \u003d\u003d false \u0026\u0026 isTask \u003d\u003d true) {        // If space is to come before a line of text, use \"     \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"            // For printing task","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"            return formatSpace(7);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"        } else if (isLine \u003d\u003d false \u0026\u0026 isTask \u003d\u003d false) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"            return formatSpace(5);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"            return \"\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    public static String getLine() {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"        String space \u003d getSpace(true, false);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        return space + LINE;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    // Prints a horizontal line, followed by the message (may be one or multiple lines), then another horizontal line","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    // https://stackoverflow.com/questions/2914695/how-can-you-write-a-function-that-accepts-multiple-types","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    public static \u003cT\u003e void printMessage(T messageList) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"        String line \u003d getLine();        // includes space before line","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        String space \u003d getSpace(false, false);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder().append(line).append(NEW_LINE);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(messageList.getClass());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        // https://stackoverflow.com/questions/40899820/arrays-check-if-object-is-an-array","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        if (messageList.getClass().isArray()) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"            for (int i \u003d 0; i \u003c Array.getLength(messageList); i++) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"                stringBuilder.append(space)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"                             .append(Array.get(messageList, i))","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"                             .append(NEW_LINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        } ","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"        // https://stackoverflow.com/questions/14674027/checking-if-object-is-instance-of-listobject","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"        else if (messageList instanceof ArrayList\u003c?\u003e) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"            for (int i \u003d 0; i \u003c ((ArrayList\u003c?\u003e) messageList).size(); i++) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"                stringBuilder.append(space).append(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"                                                ((ArrayList\u003c?\u003e) messageList)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"                                                .get(i)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"                                            )","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"                                           .append(NEW_LINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"        String text \u003d stringBuilder.append(line).toString();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"        System.out.println(text);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"    // Print greeting message","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"    public static void greet() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"        String[] messageList \u003d {\"Hello, I\u0027m \" + CHATBOT_NAME + \".\", \"What can I do for you?\"};","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"        printMessage(messageList);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"    // Chatbot exits","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"    public static void exit() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"        String[] messageList \u003d {\"Bye. Hope to see you again soon!\"};","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"        printMessage(messageList);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e taskList) throws TaskException {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"        // https://stackoverflow.com/questions/1005073/initialization-of-an-arraylist-in-one-line","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"        // ArrayList\u003cString\u003e places \u003d new ArrayList\u003c\u003e(Arrays.asList(\"Buenos Aires\", \"Córdoba\", \"La Plata\"));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"        ArrayList\u003cString\u003e messageList \u003d new ArrayList\u003c\u003e(Arrays.asList(\"Here are the tasks in your list:\"));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"        int taskListSize \u003d taskList.size();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"        if (taskListSize \u003d\u003d 0) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"            throw new TaskException(\"Yay! You\u0027re all caught up!\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"        for (int i \u003d 0; i \u003c taskListSize; i++) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"            Task current \u003d taskList.get(i);         // taskList.get(i) contains the checkbox","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"            String index \u003d Integer.toString(i + 1);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"            String line \u003d index + \". \" + current;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"            messageList.add(line);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"        printMessage(messageList);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"    // TODO: Add validation checks for input, e.g. What if user just press enter without keying any words","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"    public static boolean checkEquals(String str1, String str2) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"        // Check if two strings are similar irrespective of the differences in case","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"        return str1.equalsIgnoreCase(str2);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"    // Check if user input starts with a specified command","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"    public static boolean checkInputStartsWith(String input, String command) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"        return input.startsWith(command);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"    public static String getTaskWord(int taskListSize) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"        StringBuilder taskWordStringBuilder \u003d new StringBuilder(\" task\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"        if (taskListSize \u003e 1) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"            taskWordStringBuilder.append(\"s\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"        String taskWord \u003d taskWordStringBuilder.toString();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"        return taskWord;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"    // Add the ability to mark tasks as done. Optionally, add the ability to change the status back to not done.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"    // list will be the list of tasks that the user has entered","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"    // input will be the command that the user types (e.g. \"mark 1\")","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"    // TODO: What if index entered by user is greater than the number of items in the list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"    public static void markDone(ArrayList\u003cTask\u003e taskList, String input) throws TaskException {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"        String message;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"        // To get the task number that the user wants to mark/unmark, cannot simply extract the last character because this would assume that the task number will always be less than 10, i.e. it will not work if there are more than 9 tasks in the list","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ameliadevs"},"content":"        // Because command can be \"mark\" or \"unmark\", cannot simply use the length of the word \"mark\" or \"unmark\" and +2 (+1 for the space after the command and another +1 to get to the task number) to get the value of the task number that the user wants to mark/unmark","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ameliadevs"},"content":"        // Instead, the substring function extracts the value after the space, i.e. value of task number that user wants to mark/unmark. Then to get the index (because String array indices start from 0), need to -1","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ameliadevs"},"content":"        int indexOfSpace \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ameliadevs"},"content":"        int indexToMark \u003d -1;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ameliadevs"},"content":"        Task taskToMark;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ameliadevs"},"content":"        // https://stackoverflow.com/questions/5554734/what-causes-a-java-lang-arrayindexoutofboundsexception-and-how-do-i-prevent-it","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ameliadevs"},"content":"        // https://www.geeksforgeeks.org/array-index-out-of-bounds-exception-in-java/","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ameliadevs"},"content":"        // TODO: Test if it handles the case where index (from input) \u003e number of items in the list, or when index (from input) \u003e number of items in the list","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ameliadevs"},"content":"            indexToMark \u003d Integer.parseInt(input.substring(indexOfSpace + 1)) - 1;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ameliadevs"},"content":"            taskToMark \u003d taskList.get(indexToMark);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ameliadevs"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ameliadevs"},"content":"            message \u003d \"Task not found. Please enter a valid task number from 1 to \" + taskList.size() + \".\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ameliadevs"},"content":"            throw new TaskException(message);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ameliadevs"},"content":"        StringBuilder alreadyMarkedMessage \u003d new StringBuilder(\"The task is already marked as \");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ameliadevs"},"content":"        StringBuilder alreadyUnmarkedMessage \u003d new StringBuilder(alreadyMarkedMessage).append(\"not \");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ameliadevs"},"content":"        alreadyMarkedMessage \u003d alreadyMarkedMessage.append(\"done. No action done.\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ameliadevs"},"content":"        alreadyUnmarkedMessage \u003d alreadyUnmarkedMessage.append(\"done. No action done.\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ameliadevs"},"content":"        if (checkInputStartsWith(input, Command.MARK)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ameliadevs"},"content":"            if (taskToMark.getDone() \u003d\u003d true) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ameliadevs"},"content":"                // throw new TaskException(alreadyMarkedMessage.toString());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ameliadevs"},"content":"                throw new TaskException(\"The task is already marked as done. No action done.\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ameliadevs"},"content":"            // Mark task as done","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ameliadevs"},"content":"            message \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ameliadevs"},"content":"            taskToMark.setDone(true);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ameliadevs"},"content":"            if (taskToMark.getDone() \u003d\u003d false) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ameliadevs"},"content":"                // throw new TaskException(alreadyUnmarkedMessage.toString());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ameliadevs"},"content":"                throw new TaskException(\"The task is already marked as not done. No action done.\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ameliadevs"},"content":"            // Mark task as not done","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ameliadevs"},"content":"            message \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ameliadevs"},"content":"            taskToMark.setDone(false);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ameliadevs"},"content":"        // Print result on CLI","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ameliadevs"},"content":"        String[] messageList \u003d {message, formatSpace(2) + taskToMark};","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ameliadevs"},"content":"        printMessage(messageList);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ameliadevs"},"content":"    // Note that here, input is without command in front","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ameliadevs"},"content":"    public static String extractDescription(String details, String command) throws TaskException {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ameliadevs"},"content":"        String description \u003d details.trim();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ameliadevs"},"content":"        boolean isCommandEqualTodo \u003d checkEquals(command, Command.TODO);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ameliadevs"},"content":"        boolean isCommandEqualDeadline \u003d checkEquals(command, Command.DEADLINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ameliadevs"},"content":"        boolean isCommandEqualEvent \u003d checkEquals(command, Command.EVENT);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ameliadevs"},"content":"        if (isCommandEqualTodo \u003d\u003d true) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ameliadevs"},"content":"            description \u003d details.substring(0, details.length()).trim();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ameliadevs"},"content":"            int slashIndex \u003d details.indexOf(\u0027/\u0027);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ameliadevs"},"content":"            // Check if details has \u0027/\u0027, i.e. whether \u0027/by\u0027 or \u0027/from\u0027 or \u0027/to\u0027 is present","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ameliadevs"},"content":"            boolean hasSlash \u003d slashIndex !\u003d -1;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ameliadevs"},"content":"            ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ameliadevs"},"content":"            String missingInfo \u003d new String();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ameliadevs"},"content":"            String message;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ameliadevs"},"content":"            if (hasSlash \u003d\u003d false) {     // User did not input /","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ameliadevs"},"content":"                if (isCommandEqualDeadline \u003d\u003d true) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ameliadevs"},"content":"                    missingInfo \u003d BY;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ameliadevs"},"content":"                    // throw new TaskException(\"Error: Missing \u0027/\u0027 in deadline command. Please enter the deadline in the format \u0027deadline \u003cdescription\u003e /by \u003cdue date\u003e\u0027.\");","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ameliadevs"},"content":"                } else if (isCommandEqualEvent \u003d\u003d true) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ameliadevs"},"content":"                    missingInfo \u003d FROM;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ameliadevs"},"content":"                    // throw new TaskException(\"Error: Missing \u0027/\u0027 in event command. Please enter the event in the format \u0027event \u003cdescription\u003e /from \u003cstart date/time\u003e /to \u003cend date/time\u003e\u0027.\");","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ameliadevs"},"content":"                }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ameliadevs"},"content":"                message \u003d \"Please enter \" + missingInfo + \" information\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ameliadevs"},"content":"                throw new TaskException(message);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ameliadevs"},"content":"            int afterIndex \u003d details.substring(slashIndex).indexOf(\u0027 \u0027);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ameliadevs"},"content":"            // Check if user has entered anything after \u0027/by\u0027 or \u0027/from\u0027 or \u0027/to\u0027","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ameliadevs"},"content":"            boolean hasAfter \u003d afterIndex !\u003d -1;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ameliadevs"},"content":"            if (hasAfter \u003d\u003d false) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ameliadevs"},"content":"                if (isCommandEqualDeadline \u003d\u003d true) {      // \"Please enter the due date of the deadline\"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ameliadevs"},"content":"                    missingInfo \u003d \"due date\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ameliadevs"},"content":"                } else if (isCommandEqualEvent \u003d\u003d true) {      // \"Please enter the start date/time of the event\"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ameliadevs"},"content":"                    missingInfo \u003d \"start date/time\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ameliadevs"},"content":"                }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ameliadevs"},"content":"                message \u003d \"Please enter the \" + missingInfo;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ameliadevs"},"content":"                throw new TaskException(message);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ameliadevs"},"content":"            if (hasSlash \u003d\u003d true \u0026\u0026 hasAfter \u003d\u003d true) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ameliadevs"},"content":"                description \u003d details.substring(0, slashIndex - 1).trim();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ameliadevs"},"content":"        return description;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ameliadevs"},"content":"    // Does not apply to Todo tasks. ","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ameliadevs"},"content":"    // For Deadline tasks, extracts the date/time from input (\"after \u0027/by\u0027\"), using substring from after \u0027/by\u0027 to the end of input. ","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ameliadevs"},"content":"    // For Event tasks, extracts the date/time from input. ","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ameliadevs"},"content":"    // TODO: For Deadline, return a List of String that just contains one element which is the due date","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ameliadevs"},"content":"    // TODO: For Event, return a List of String where first element is the start time and second element is the end time","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ameliadevs"},"content":"    // keyword is either \"/by\", or \"/from\" or \"/to\"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ameliadevs"},"content":"    public static String extractDateTime(String input, String keyword) throws TaskException {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ameliadevs"},"content":"        // Get index of word after keyword and space","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ameliadevs"},"content":"        int startIndex \u003d input.indexOf(keyword) + keyword.length() + 1;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(\"startIndex is derived by \" + input.indexOf(keyword) + \" + length + 1 is \" + keyword.length() + 1);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ameliadevs"},"content":"        int endIndex;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ameliadevs"},"content":"        // For /from, endIndex is before /to","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ameliadevs"},"content":"        if (checkEquals(keyword, FROM)) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ameliadevs"},"content":"            endIndex \u003d input.indexOf(\u0027/\u0027, startIndex);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ameliadevs"},"content":"            // int endIndex \u003d input.substring(indexOfSlash, input.length());","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ameliadevs"},"content":"            if (endIndex \u003d\u003d -1) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ameliadevs"},"content":"                String message \u003d \"End date/time is missing.\" + NEW_LINE + getSpace(false, false) + ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ameliadevs"},"content":"                                    \"Please enter the date/time that the event ends at after \\\"\" + FROM + \"\\\"\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ameliadevs"},"content":"                throw new TaskException(message);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ameliadevs"},"content":"            endIndex \u003d input.length();","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"ameliadevs"},"content":"        // first index of word after /from","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(\"startIndex in extractDateTime is \" + startIndex);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(\"endIndex in extractDateTime is \" + endIndex);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"ameliadevs"},"content":"        String dateTime \u003d input.substring(startIndex, endIndex).trim();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"ameliadevs"},"content":"        if (dateTime.isEmpty()) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ameliadevs"},"content":"            String message \u003d String.format(\"Please enter a value after %s\", keyword);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"ameliadevs"},"content":"            throw new TaskException(message);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"ameliadevs"},"content":"        return dateTime;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"ameliadevs"},"content":"    // https://stackoverflow.com/questions/25417363/java-string-contains-matches-exact-word","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ameliadevs"},"content":"    private static boolean isContain(String source, String subItem){","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"ameliadevs"},"content":"        String regex \u003d \"\\\\b\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"ameliadevs"},"content":"        String pattern \u003d regex + subItem + regex;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"ameliadevs"},"content":"        // String pattern \u003d \"\\\\b\" + subItem + \"\\\\b\";","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"ameliadevs"},"content":"        Pattern p \u003d Pattern.compile(pattern);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"ameliadevs"},"content":"        Matcher m \u003d p.matcher(source);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"ameliadevs"},"content":"        return m.find();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"ameliadevs"},"content":"    // Add task (Types supported: Todo, Deadline, Event)","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"ameliadevs"},"content":"    public static ArrayList\u003cTask\u003e addTask(ArrayList\u003cTask\u003e taskList, String input) throws TaskException {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"ameliadevs"},"content":"        // printLine();","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"ameliadevs"},"content":"        // Split the input into a String array where the first element is the command and the second element is the description + deadline OR start/end date/time or event","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ameliadevs"},"content":"        String[] splitInput \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ameliadevs"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ameliadevs"},"content":"        // Check if description is empty","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"ameliadevs"},"content":"        if (splitInput.length \u003c 2 || splitInput[1].startsWith(\"/\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"ameliadevs"},"content":"            throw new TaskException(\"The description of a task cannot be empty. \" + NEW_LINE + ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ameliadevs"},"content":"                                    getSpace(false, false) + \"Please add a description for the task. Example: \\\"\" + command + \" borrow book\\\"\");","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ameliadevs"},"content":"        String description \u003d extractDescription(splitInput[1], command);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(\"Description: \" + description);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"ameliadevs"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"ameliadevs"},"content":"        // For todo, check if user has entered description. If not, don\u0027t add to task list","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"ameliadevs"},"content":"        if (checkEquals(command, Command.TODO)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"ameliadevs"},"content":"            task \u003d new Todo(description, false);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"ameliadevs"},"content":"        } else if (checkEquals(command, Command.DEADLINE)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"ameliadevs"},"content":"            // Check if input contains \"/by\"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"ameliadevs"},"content":"            // boolean hasBy \u003d input.contains(BY);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"ameliadevs"},"content":"            // System.out.println(\"hasBy \" + hasBy);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"ameliadevs"},"content":"            ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"ameliadevs"},"content":"            // if (isContain(input, BY) \u003d\u003d false) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"ameliadevs"},"content":"            // if (hasBy \u003d\u003d false) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"ameliadevs"},"content":"            //     throw new TaskException(\"Missing /by information\");","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"ameliadevs"},"content":"            // }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"ameliadevs"},"content":"            String due \u003d extractDateTime(input, BY);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"ameliadevs"},"content":"            ","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"ameliadevs"},"content":"            task \u003d new Deadline(description, false, due);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"ameliadevs"},"content":"        } else if (checkEquals(command, Command.EVENT)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"ameliadevs"},"content":"            // Check if input contains \"/from\" and \"/to\"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"ameliadevs"},"content":"            // boolean isValid \u003d input.contains(FROM) \u0026\u0026 input.contains(TO);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"ameliadevs"},"content":"            if (input.contains(FROM) \u003d\u003d false) {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"ameliadevs"},"content":"                throw new TaskException(\"Please enter \\\"/from\\\" followed by the start date/time of the event\");","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"ameliadevs"},"content":"            String start \u003d extractDateTime(input, FROM);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"ameliadevs"},"content":"            String end \u003d extractDateTime(input, TO);","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"ameliadevs"},"content":"            task \u003d new Event(description, false, start, end);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ameliadevs"},"content":"        taskList.add(task);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"ameliadevs"},"content":"        int taskListSize \u003d taskList.size();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"ameliadevs"},"content":"        String taskWord \u003d getTaskWord(taskListSize);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"ameliadevs"},"content":"        String[] messageList \u003d {\"Got it. I\u0027ve added this task:\", formatSpace(2) + task, ","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"ameliadevs"},"content":"                                \"Now you have \" + taskListSize + taskWord + \" in the list.\"};","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"ameliadevs"},"content":"        printMessage(messageList);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"ameliadevs"},"content":"        return taskList;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"ameliadevs"},"content":"    public static ArrayList\u003cTask\u003e deleteTask(ArrayList\u003cTask\u003e taskList, String input) throws TaskException {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(\"taskList before removal: \" + taskList);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"ameliadevs"},"content":"        // Split the input into a String array where the first element is the command and the second element is the description + deadline OR start/end date/time or event","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"ameliadevs"},"content":"        String[] splitInput \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"ameliadevs"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"ameliadevs"},"content":"        String index \u003d splitInput[1];","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"ameliadevs"},"content":"        int indexToDelete \u003d -1;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"ameliadevs"},"content":"        Task taskToDelete;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"ameliadevs"},"content":"        String message;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"ameliadevs"},"content":"            indexToDelete \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"ameliadevs"},"content":"            taskToDelete \u003d taskList.get(indexToDelete);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"ameliadevs"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"ameliadevs"},"content":"            message \u003d \"Task not found. Please enter a valid task number from 1 to \" + taskList.size() + \".\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"ameliadevs"},"content":"            throw new TaskException(message);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(\"indexToDelete is \" + indexToDelete + NEW_LINE + \"taskToDelete is \" + taskToDelete);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"ameliadevs"},"content":"        taskList.remove(indexToDelete);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"ameliadevs"},"content":"        int taskListSize \u003d taskList.size();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"ameliadevs"},"content":"        String taskWord \u003d getTaskWord(taskListSize);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"ameliadevs"},"content":"        String[] messageList \u003d {\"Noted. I\u0027ve removed this task:\", ","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"ameliadevs"},"content":"                                formatSpace(2) + taskToDelete,","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"ameliadevs"},"content":"                                \"Now you have \" + taskListSize + taskWord + \" in the list.\"};","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"ameliadevs"},"content":"        printMessage(messageList);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(\"taskList after removal: \" + taskList);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"ameliadevs"},"content":"        return taskList;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"ameliadevs"},"content":"    // This function echos commands entered by the user, and exits when the user types the command bye.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"ameliadevs"},"content":"    public static void echo() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"ameliadevs"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"ameliadevs"},"content":"        // Assume there will be no more than 100 tasks. Initialize an empty list of String array","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"ameliadevs"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"ameliadevs"},"content":"        // Continue looping indefinitely","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"ameliadevs"},"content":"        while (true) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"ameliadevs"},"content":"            ","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"ameliadevs"},"content":"            System.out.println();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"ameliadevs"},"content":"            // Get the input","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"ameliadevs"},"content":"            String input \u003d in.nextLine().trim();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"ameliadevs"},"content":"            ","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"ameliadevs"},"content":"            // Check if the command entered by the user is valid","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"ameliadevs"},"content":"            try {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"ameliadevs"},"content":"                if (checkEquals(input, Command.BYE)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"ameliadevs"},"content":"                    exit();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"ameliadevs"},"content":"                    break;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"ameliadevs"},"content":"                } else if (checkEquals(input, Command.LIST)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"ameliadevs"},"content":"                    printTaskList(taskList);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"ameliadevs"},"content":"                } else if (checkInputStartsWith(input, Command.MARK) || checkInputStartsWith(input, Command.UNMARK)) {        // Check if input contains the command \"mark\" or \"unmark\"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"ameliadevs"},"content":"                    markDone(taskList, input);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"ameliadevs"},"content":"                } else if (","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"ameliadevs"},"content":"                        checkInputStartsWith(input, Command.TODO) ||","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"ameliadevs"},"content":"                        checkInputStartsWith(input, Command.DEADLINE) || ","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"ameliadevs"},"content":"                        checkInputStartsWith(input, Command.EVENT)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"ameliadevs"},"content":"                    ) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"ameliadevs"},"content":"                        taskList \u003d addTask(taskList, input);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"ameliadevs"},"content":"                } else if (checkInputStartsWith(input, Command.DELETE)) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"ameliadevs"},"content":"                    taskList \u003d deleteTask(taskList, input);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"ameliadevs"},"content":"                } else {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"ameliadevs"},"content":"                    String message \u003d \"Invalid command entered. \" + NEW_LINE + getSpace(false, false) + ","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"ameliadevs"},"content":"                                        \"Please start with \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027. If you are done, please enter \u0027bye\u0027 to exit the chat\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"ameliadevs"},"content":"                    throw new CommandException(message);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"ameliadevs"},"content":"                }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"ameliadevs"},"content":"            } catch (CommandException commandException) {     // When user enters an invalid command, e.g. gibberish","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"ameliadevs"},"content":"                String[] messageList \u003d {commandException.getMessage()};","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"ameliadevs"},"content":"                printMessage(messageList);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"ameliadevs"},"content":"            } catch (TaskException taskException) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"ameliadevs"},"content":"                String[] messageList \u003d {taskException.getMessage()};","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"ameliadevs"},"content":"                printMessage(messageList);","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"ameliadevs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"ameliadevs"},"content":"        greet();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"ameliadevs"},"content":"        echo();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":444}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"    protected String description;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"    // Initialize task with empty string description and set the task to be undone","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"    public Task() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"        description \u003d \"\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"        return description;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public boolean getDone() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        return isDone;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        if (isDone) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"            return \"X\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"            return \" \";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-14","isFullCredit":false}],"authorContributionMap":{"ameliadevs":45}},{"path":"src/main/java/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"// https://stackoverflow.com/questions/8423700/how-to-create-a-custom-exception-type-in-java","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"public class TaskException extends Exception {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"    public TaskException(String message) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"        super(message);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"/*","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * Exception #1 (TaskException): Missing / empty description (for Todo, Deadline \u0026 Event) or date/time for Deadline \u0026 Event","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" * Exception #2 (CommandException): Invalid command (does not start with todo / deadline / event)","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * Exception #3 (TaskException): User input non-number for mark / unmark tasks (NumberFormatException?)","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" * Exception #4 (TaskException): User input out of range index for mark / unmark tasks (can be \u003c 0 or \u003e list.length())","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" * ","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":" * There can be different variations, e.g.","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":" * For deadline, ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":" * deadline                     --\u003e missing description and /by information","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":" * deadline \u003cdescription\u003e       --\u003e missing /by information","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":" * deadline by                  --\u003e in this case, \"by\" goes under description","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":" * deadline /by                 --\u003e missing description","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":" * deadline /by \u003cdescription\u003e   --\u003e no error, task is added to list","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":" * ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":" * For event,","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":" * event                                                    --\u003e missing description and /from and /to information","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":" * event \u003cdescription\u003e                                      --\u003e missing /from and /to information","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":" * event \u003cdescription\u003e /to                                  --\u003e missing from","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":" * event \u003cdescription\u003e /from                                --\u003e missing to","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":" * event \u003cdescription\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e    --\u003e no error, task is added to list","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":" * ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":" * event","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":" * event project meeting","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":" * event project meeting /from Mon 2pm","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":" * event project meeting /to 4pm","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":" * event /from Mon 2pm","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":" * event /to 4pm","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":" * event /from Mon 2pm /to 4pm","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":" * event project meeting /from Mon 2pm /to 4pm      --\u003e only this task is added successfully","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":" * ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":" * Future exceptions: End time is before start time. ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":" * ","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":" * ...","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":" * ","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"ameliadevs":44}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"// Todos are tasks without any date/time attached to it e.g., visit new theme park","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"ameliadevs":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"todo","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"todo read book","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"mark 1","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"mark 1","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"deadline","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"deadline return book","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"deadline /by Sunday","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"mark 2","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"unmark 2","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"unmark 2","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"event project meeting /from: Aug 6th 2pm /to: 4pm","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"todo join sports club","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"mark 4","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"delete 2","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"todo borrow book","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"mark abc","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"mark 123456789","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"delete abc","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"delete 123456789","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"bye","lastModifiedDate":"2024-09-14","isFullCredit":false}],"authorContributionMap":{"ameliadevs":30}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"java -classpath ../bin Javaro \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ameliadevs":1,"-":37}}]
