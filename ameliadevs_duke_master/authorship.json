[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"4. Duke is released under an MIT license.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"5. Duke is part of https://se-education.org","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":1,"-":25}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    mainClass.set(\"Javaro\")","lastModifiedDate":"2024-11-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ameliadevs":1,"-":40}},{"path":"src/main/java/Javaro.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"import commands.Command;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import exception.FileContentException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import exception.TaskListDecoderException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import parser.Parser;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" * Represents the main application class / entry point for the Javaro task management system.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" * The class initializes the user interface, storage, and task list, and runs the main application logic.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":" * It processes the commands issued by the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":" * It reads commands from the user, parses and executes them, and displays appropriate feedback to the user.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":" * The application handles errors related to task storage, command parsing, and general exceptions gracefully.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"public class Javaro {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    private final Ui ui;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    private Storage storage;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a Javaro instance.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * Setting up the Javaro application initializing the user interface, storage, and task list.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     * It handles any initialization errors that occur.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * If it fails to load tasks list from storage (tasks file),","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     * then it initializes an empty task list and displays an error message.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    public Javaro() {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        // Initialize Ui","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        // Initialize Storage and load tasks to TaskList","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"            taskList \u003d storage.loadTasks();     // Attempt to load task from storage (tasks file)","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        } catch (StorageOperationException | FileContentException |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"                 TaskListDecoderException | CommandException e) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"            // Handle common exceptions related to task loading","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"            // storageOperationException.printStackTrace();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"            ui.showError(e.getMessageList());       // Display the error message to the user","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"            taskList \u003d new TaskList();      // Initialize an empty task list","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"            // Handle IOExceptions (e.g., file not found)","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"            String[] messages \u003d {ioe.getMessage()};","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"            ui.printMessage(messages);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"            taskList \u003d new TaskList();      // Initialize an empty task list","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"     * Runs the main application logic.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"     * Repeatedly reads input from the user, parses the input received from the user and","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"     * executes it until the user issues a command to exit, which stops the program.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"     * Any exceptions that occur will be caught and an error message will be displayed to the user.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    public void run() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        // Display welcome message","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"        // Main loop for reading user input and executing commands","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"        while (!isBye) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"            try {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"                // Read input from the user","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"                String userInput \u003d ui.readInput();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"                // ui.showLine();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"                // Parse and execute the command","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"                // Check if the command is a \"bye\" command to exit the loop","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"                isBye \u003d command.isBye();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"                // Handle command parsing or execution errors","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"                // System.out.println(\"CommandException caught: \" + e.getMessage());","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"                ui.showError(e.getMessageList());","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"            } catch (StorageOperationException e) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"                // Handle storage operation errors","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"                // System.out.println(\"StorageOperationException caught: \" + e.getMessage());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"                ui.showError(e.getMessageList());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"     * Initializes the Javaro program and starts the main loop.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"     * The main entry point of the Javaro application.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"     * This method is called when the program is executed from the command-line.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"     * @param args command line arguments (not used here).","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"        new Javaro().run();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":104}},{"path":"src/main/java/commands/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"public class ArchiveCommand extends Command {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    private static final String ALL \u003d \"all\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + Constants.SPACE + ALL;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    private static final String NOTED \u003d \"Noted.\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    private static final String ALL_TASKS \u003d \"All\" + SPACE + Constants.TASK + Constants.S;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    private static final String HAS \u003d \"has\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    private static final String HAVE \u003d \"have\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    private static final String MESSAGE_SUCCESS_POST \u003d \"been successfully archived to\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    private static final String MESSAGE_SUCCESS_ALL_POST \u003d ALL_TASKS + SPACE + HAVE + SPACE + MESSAGE_SUCCESS_POST;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    private final String target;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    public ArchiveCommand(String target) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"        this.target \u003d target;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public String getTarget() {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        return target;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    // implement in tasklist","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    public boolean archiveAll() {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"        return false;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CommandException, StorageOperationException {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        String target \u003d getTarget();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        String[] messages \u003d null;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"        switch (target) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        case ALL:","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"            storage.archiveTasks(taskList);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"            messages \u003d new String[]{MESSAGE_SUCCESS_ALL_POST + SPACE +","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"                storage.getArchiveTasksFilePath() + Constants.DOT};","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"            break;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"        default:","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"            int targetNumber \u003d Integer.parseInt(target);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"            Task task \u003d taskList.getTaskForOperation(targetNumber);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"            storage.archiveTask(task);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"            String MESSAGE_SUCCESS \u003d NOTED + SPACE + Messages.THE_TASK + SPACE +","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"                Constants.BACKTICK + task + Constants.BACKTICK + SPACE + HAS + SPACE +","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"                MESSAGE_SUCCESS_POST + SPACE + storage.getArchiveTasksFilePath() + Constants.DOT;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"            messages \u003d new String[]{MESSAGE_SUCCESS};","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"            break;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        ui.printMessage(messages);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-14","isFullCredit":false}],"authorContributionMap":{"ameliadevs":68}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" * Represents a command to terminate the program.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * The ByeCommand class is responsible for executing the action of terminating the application.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * When executed, it communicates with the user interface to display a goodbye message.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * This command does not modify the {@link TaskList} or {@link Storage}.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"     * Executes the command by displaying a goodbye message to the user.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents the current list of tasks. (not used in this command)","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"     * @param ui       represents the user interface to handle interactions with the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"     * @param storage  represents the storage manager to handle interactions with the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     *                 (reading from and writing to) the task file. (not used in this command)","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"        ui.showBye();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     * Flags to indicate whether the command is a \"bye\" command.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"     * @return true because this command indicates the termination of the program.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    public boolean isBye() {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"        return true;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-30","isFullCredit":false}],"authorContributionMap":{"ameliadevs":39}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * Represents an abstract command in the application.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" * This class serves as a base for specific command implementations.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * Each command can execute a certain action on a given task list, user interface, and storage.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"public abstract class Command {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    protected static final String SPACE \u003d Constants.SPACE;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    protected static final String OPEN_ANGLE_BRACKET \u003d Constants.OPEN_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    protected static final String CLOSE_ANGLE_BRACKET \u003d Constants.CLOSE_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"     * Executes the command with the provided task list, user interface, and storage.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList The list of tasks to operate on.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"     * @param ui       The user interface to handle interactions with the user.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"     * @param storage  The storage manager to handle interactions with (reading from and writing to) the task file.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException          if an error occurs during command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * @throws StorageOperationException if an error occurs while accessing (loading / saving tasks from) storage.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        throws CommandException, StorageOperationException;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"     * Indicates whether the command is a bye command, i.e. a command that terminates the application.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"     * @return true if the command signals the application to exit; false otherwise.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    public boolean isBye() {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        return false;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-30","isFullCredit":false}],"authorContributionMap":{"ameliadevs":41}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" * The DeleteCommand class is responsible for removing a specified task from the task list based on its task number.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" * It also interacts with the user interface to provide feedback on the task addition and","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":" * saves the updated task list to storage.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + SPACE + Constants.TASK_NUMBER_IN_ANGLE_BRACKETS;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_DELETE_SUCCESS_PRE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    protected final int taskNumber;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a DeleteCommand with the specified task number.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * @param taskNumber represents the 1-based index of the task to be deleted.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"     * Returns the task number associated with this command.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        return taskNumber;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"     * Executes the command to delete the specified task from the task list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents the list of tasks to delete the task from.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"     * @param ui       represents the user interface to interact with the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     * @param storage  represents the storage to save the updated task list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException          if the task number is invalid or the task does not exist.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"     * @throws StorageOperationException if an error occurs while saving the taskList to storage.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CommandException, StorageOperationException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        Task taskToDelete \u003d taskList.getTaskForOperation(getTaskNumber());","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        boolean isDeletedSuccess \u003d taskList.removeTask(taskToDelete);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"        int taskListSize \u003d taskList.getSize();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        String taskWord \u003d taskList.getTaskWord();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_DELETE_SUCCESS_POST \u003d Messages.MESSAGE_NOW_YOU_HAVE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"            taskListSize + taskWord + Messages.MESSAGE_IN_THE_LIST;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        String[] messages \u003d null;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        if (isDeletedSuccess) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"            messages \u003d new String[]{MESSAGE_DELETE_SUCCESS_PRE,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"                ui.getSpace(false, true) + taskToDelete, MESSAGE_DELETE_SUCCESS_POST};","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"        ui.printMessage(messages);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":71}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" * Represents a command to find tasks in a task list based on a specified description.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * The command searches for tasks that matches the given description and displays the list to the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + SPACE + Constants.DESCRIPTION_IN_ANGLE_BRACKETS;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    private static final String MATCHING_TASKS \u003d \"matching tasks\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    private static final String MESSAGE_EMPTY_LIST \u003d","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"        \"There are no\" + Constants.SPACE + MATCHING_TASKS + Messages.MESSAGE_IN_YOUR_LIST + Constants.DOT;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    private static final String MESSAGE_SHOW_SUCCESS_PRE \u003d","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"        Messages.HERE_ARE_THE + SPACE + MATCHING_TASKS + Messages.MESSAGE_IN_YOUR_LIST_COLON;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    private final String description;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a FindCommand with the given description.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description to search for in the task list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     * Returns the description associated with the FindCommand.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"     * @return the description that this command will search for in the task list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    private String getDescription() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"        return description;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     * Executes the find command and searches for tasks in the task list that matches the given description.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents the task list to search for matching tasks descriptions.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"     * @param ui       represents the user interface to print messages to the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"     * @param storage  represents the storage to handle any storage operations (not used in this command).","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"        String taskDescription \u003d getDescription();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"        TaskList tasksWithMatchingDescription \u003d taskList.getAllTasksWithMatchingDescription(taskDescription);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        ui.printTaskListMessage(tasksWithMatchingDescription, MESSAGE_EMPTY_LIST, MESSAGE_SHOW_SUCCESS_PRE);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":63}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * Represents a command to list all tasks in the task list,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" * The ListCommand class is responsible for displaying the tasks currently stored in the task list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * It provides feedback to the user whether the list is empty or contains tasks.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_PRE \u003d Messages.HERE_ARE_THE + \" tasks\" + Messages.MESSAGE_IN_YOUR_LIST_COLON;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_EMPTY_LIST \u003d \"Good job! You\u0027re all caught up!\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"     * Executes the command to display the tasks in the task list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents the list of tasks to display.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"     * @param ui       represents the user interface to interact with the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"     * @param storage  represents the storage (not used in this command).","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"        ui.printTaskListMessage(taskList, MESSAGE_EMPTY_LIST, MESSAGE_PRE);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":32}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" * The MarkCommand class is responsible for updating the status of a","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" * specified task in the task list to indicate that it has been completed.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":" * It provides feedback to the user about the result of the operation.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + SPACE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"        OPEN_ANGLE_BRACKET + Constants.TASK_NUMBER + CLOSE_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    protected static final String MESSAGE_MARK_SUCCESS \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    protected final int taskNumber;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * Creates a MarkCommand with the specified task number.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * @param taskNumber represents the 1-based index of the task to be marked as done.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"     * Returns the task number specified in the command.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        return taskNumber;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     * Executes the command to mark the specified task as done in the task list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents the list of tasks to mark the task in.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     * @param ui       represents the user interface to interact with the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"     * @param storage  represents the storage to save the updated task list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException          if the task number is invalid or the task does not exist.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"     * @throws StorageOperationException if an error occurs while saving the task list to storage.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CommandException, StorageOperationException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        Task taskToMark \u003d taskList.getTaskForOperation(getTaskNumber());","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"        // The task `[T][X] read book` is already marked as done. No action done.","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_ALREADY_MARKED \u003d Messages.THE_TASK + SPACE + Constants.BACKTICK + taskToMark +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"            Constants.BACKTICK + SPACE + Messages.ALREADY_MARKED_AS + SPACE + Messages.DONE +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"            Constants.DOT + SPACE + Messages.NO_ACTION_DONE;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        String[] messages;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        boolean isMarkedSuccess \u003d taskList.markTask(taskToMark);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        if (isMarkedSuccess) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"            messages \u003d new String[]{MESSAGE_MARK_SUCCESS, ui.getSpace(false, true) + taskToMark};","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"            messages \u003d new String[]{MESSAGE_ALREADY_MARKED};","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"        ui.printMessage(messages);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":74}},{"path":"src/main/java/commands/ShowCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * Represents a command to show all deadlines and events that are scheduled on a specific date.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" * The ShowCommand class retrieves and displays tasks from the task list that are scheduled for a given date.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":" * It provides feedback to the user about the tasks scheduled on that date.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + SPACE + ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        OPEN_ANGLE_BRACKET + Constants.DATE + CLOSE_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    public static final String DEADLINES_EVENTS_ON \u003d \"deadlines / events on\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    protected final LocalDate date;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a ShowCommand with the specified date.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     * @param date represents the date for which to show deadlines and events.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    public ShowCommand(LocalDate date) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"     * Returns the date associated with the command.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        return date;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"     * Executes the command to display tasks that are scheduled on a specific date.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents the list of tasks to check for the specified date.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     * @param ui       represents the user interface to interact with the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     * @param storage  represents the storage (not used in this command).","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"        LocalDate date \u003d getDate();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        // Here are the deadlines / events on \u003cdate\u003e:","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_SHOW_SUCCESS_PRE \u003d","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"            Messages.HERE_ARE_THE + SPACE + DEADLINES_EVENTS_ON + SPACE + date + Constants.COLON;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"        // Retrieve all tasks scheduled on the specified date","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        // Sort the tasks by their LocalDateTime","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        // https://stackoverflow.com/questions/2784514/sort-arraylist-of-custom-objects-by-property","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"        TaskList scheduledTasks \u003d taskList.getScheduledTasks(date);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_EMPTY_LIST \u003d \"You have no\" + SPACE + DEADLINES_EVENTS_ON + SPACE + date + Constants.DOT;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        ui.printTaskListMessage(scheduledTasks, MESSAGE_EMPTY_LIST, MESSAGE_SHOW_SUCCESS_PRE);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"ameliadevs":65}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * Represents a command to unmark a task in the task list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" * The UnmarkCommand class is responsible for updating the status of a","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" * specified task in the task list to indicate that it has not been completed.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":" * It provides feedback to the user about the result of the operation.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + SPACE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"        OPEN_ANGLE_BRACKET + Constants.TASK_NUMBER + CLOSE_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_UNMARK_SUCCESS \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    protected final int taskNumber;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * Constructs an UnmarkCommand with the specified 1-based task number.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * @param taskNumber represents the 1-based index of the task to be unmarked.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"     * Retrieves the task number associated with the command.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"     * @return the 1-based index of the task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        return taskNumber;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     * Executes the command to unmark the specified task as not done in the task list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents list of tasks to unmark the task in.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"     * @param ui       represents the user interface to interact with the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"     * @param storage  represents the storage to save the updated task list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException          if the task number is invalid or the task does not exist.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"     * @throws StorageOperationException if an error occurs while saving the updated task list to storage.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CommandException, StorageOperationException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"        Task taskToUnmark \u003d taskList.getTaskForOperation(getTaskNumber());","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        // The task `[D][ ] return pen (by: Jan 01 2024 0000)` is already marked as not done. No action done.","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_ALREADY_UNMARKED \u003d Messages.THE_TASK + SPACE + Constants.BACKTICK +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"            taskToUnmark + Constants.BACKTICK + SPACE + Messages.ALREADY_MARKED_AS + SPACE +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"            Messages.NOT + SPACE + Messages.DONE + Constants.DOT + SPACE + Messages.NO_ACTION_DONE;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        String[] messages;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"        boolean isUnmarkedSuccess \u003d taskList.unmarkTask(taskToUnmark);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"        if (isUnmarkedSuccess) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"            messages \u003d new String[]{MESSAGE_UNMARK_SUCCESS, ui.getSpace(false, true) + taskToUnmark};","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"            messages \u003d new String[]{MESSAGE_ALREADY_UNMARKED};","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"        ui.printMessage(messages);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":77}},{"path":"src/main/java/commands/add/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands.add;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import commands.Command;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * Serves as the base class for TodoCommand, DeadlineCommand, and EventCommand.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" * AddTaskCommand is an abstract class that extends from the Command class.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" * It is meant to be extended by concrete classes that define specific types of tasks.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":" * Its purpose is to handle the core functionality of adding a task to the {@code TaskList},","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":" * saving the {@code TaskList} to {@code Storage}, i.e. the tasks file, and printing a message.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":" * The task creation process is abstracted so that subclasses can define","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":" * their own implementation of creating the specific type of task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"public abstract class AddTaskCommand extends Command {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    protected static final String DESCRIPTION_IN_ANGLE_BRACKETS \u003d Constants.DESCRIPTION_IN_ANGLE_BRACKETS;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    private static final String MESSAGE_ADD_SUCCESS_PRE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    // All tasks have a description","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    protected final String description;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * Constructs an {@code AddTaskCommand} with the specified task description.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description of the {@code Task} to be added.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    protected AddTaskCommand(String description) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"     * Returns the description of the {@code Task}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    public String getDescription() {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        return description;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     * Creates the specific {@code Task} to be added to the {@code TaskList} based on the command.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     * This abstract method will be implemented by the subclasses, i.e. TodoCommand, DeadlineCommand, and EventCommand.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"     * The respective classes will create the appropriate type of task.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"     * @return the newly-created {@code Task} object to be added to the {@code TaskList}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    protected abstract Task createTask();","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"     * Prepares the post-success message after a task has been added to the {@code TaskList}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"     * It indicates to the user, the number of tasks in the list after the addition of the new task.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents the current state of the task list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"     * @return a post-success message.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    protected static String preparePostSuccessMessage(TaskList taskList) {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        // Prepare the success message","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        int taskListSize \u003d taskList.getSize();","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        String taskWord \u003d taskList.getTaskWord();","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        return Messages.MESSAGE_NOW_YOU_HAVE + taskListSize + taskWord + Messages.MESSAGE_IN_THE_LIST;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"     * Executes the command by adding a {@code Task} to the {@code TaskList}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"     * Creates the {@code Task}, adds it to the {@code TaskList}, and saves the updated {@code TaskList} to storage.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"     * Upon successful completion, prints a success message.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents the list of tasks to which the new task will be added.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"     * @param ui       represents the user interface instance that will be used to handle interactions with the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"     * @param storage  represents the storage instance that will be used to save the updated task list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"     * @throws StorageOperationException if an error occurs while saving the task list to storage.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws StorageOperationException {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"        Task task \u003d createTask();","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"        // Add the newly-created task to the task list","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"        // Save the updated task list to storage","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_ADD_SUCCESS_POST \u003d preparePostSuccessMessage(taskList);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"        String[] messages \u003d {MESSAGE_ADD_SUCCESS_PRE, ui.getSpace(false, true) + task, MESSAGE_ADD_SUCCESS_POST};","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"        // Print the success message to the user","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"        ui.printMessage(messages);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-08","isFullCredit":false}],"authorContributionMap":{"ameliadevs":95}},{"path":"src/main/java/commands/add/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands.add;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import task.Deadline;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * Extends from {@code AddTaskCommand}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * It is a subclass of {@code AddTaskCommand} which provides the general structure of adding a task.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" * It takes the description and due date for the {@code Deadline} task, creates a {@code Deadline} task,","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * adds it to the {@code TaskList}, and saves the updated {@code TaskList} to {@code Storage}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"public class DeadlineCommand extends AddTaskCommand {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    // deadline \u003cdescription\u003e /by \u003cdue date\u003e","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + SPACE + DESCRIPTION_IN_ANGLE_BRACKETS + SPACE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        Constants.SLASH_BY + SPACE + Constants.DUE_DATE_IN_ANGLE_BRACKETS;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    protected final LocalDateTime dueDate;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a {@code DeadlineCommand} with the specified description and due date.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description of the {@code Deadline} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     * @param dueDate     represents the due date of the {@code Deadline} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    public DeadlineCommand(String description, LocalDateTime dueDate) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        super(description);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"     * Returns the due date and time of the {@code Deadline} task.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        return dueDate;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     * Returns a new {@code Deadline} task with the provided description and due date.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    protected Task createTask() {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"        String taskDescription \u003d getDescription();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime taskDueDate \u003d getDueDate();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"        return new Deadline(taskDescription, taskDueDate);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-08","isFullCredit":false}],"authorContributionMap":{"ameliadevs":53}},{"path":"src/main/java/commands/add/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands.add;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import task.Event;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * Extends from {@code AddTaskCommand} and is a subclass of {@code AddTaskCommand}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * {@code AddTaskCommand} provides the general structure for adding a task to the {@code TaskList}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" * It represents a command that is used to add an {@code Event} task to the {@code TaskList}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * The command takes a description, start date/time, and end date/time, creates an {@code Event} task,","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" * adds it to the {@code TaskList} and saves the updated {@code TaskList} to {@code Storage}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"public class EventCommand extends AddTaskCommand {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    // event \u003cdescription\u003e / from \u003cstart date/ time\u003e / to \u003cend date/ time\u003e","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + SPACE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        DESCRIPTION_IN_ANGLE_BRACKETS + SPACE + Constants.SLASH_FROM + SPACE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"        Constants.START_DATE_TIME_IN_ANGLE_BRACKETS + SPACE + Constants.SLASH_TO + SPACE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"        Constants.END_DATE_TIME_IN_ANGLE_BRACKETS;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     * Constructs an {@code EventCommand} with the specified task description,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * start date and time, and end date and time.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     * @param description   represents the description of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"     * @param startDateTime represents the start date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"     * @param endDateTime   represents the end date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    public EventCommand(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"        super(description);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"     * Returns the start date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        return startDateTime;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"     * Returns the end date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        return endDateTime;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"     * Returns a new {@code Event} task with the specified description, start date and time, and end date and time.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"    protected Task createTask() {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"        String eventDescription \u003d getDescription();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime eventStartDateTime \u003d getStartDateTime();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime eventEndDateTime \u003d getEndDateTime();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        return new Event(eventDescription, eventStartDateTime, eventEndDateTime);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-08","isFullCredit":false}],"authorContributionMap":{"ameliadevs":67}},{"path":"src/main/java/commands/add/FixedDurationCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands.add;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import task.FixedDuration;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" * Represents a command to add a task with fixed duration.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * This command allows the user to specify a task description and its duration in hours.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"public class FixedDurationCommand extends AddTaskCommand {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"fd\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    // make duration in terms of minutes","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    // fd \u003ctask description\u003e /duration \u003cduration of task in hours\u003e","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    // fd \u003ctask description\u003e /hours \u003cnumber of hours needed\u003e /minutes \u003cnumber of minutes needed\u003e","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    // fd \u003cdescription\u003e /duration \u003cduration in hours\u003e","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + SPACE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        DESCRIPTION_IN_ANGLE_BRACKETS + SPACE + Constants.SLASH_DURATION + SPACE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"        Constants.DURATION_IN_HOURS_IN_ANGLE_BRACKETS;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    private final double duration;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a {@code FixedDurationCommand} with the specified task description and duration.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description of the task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * @param duration    represents the duration required for the task, in hours.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public FixedDurationCommand(String description, double duration) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        super(description);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     * Gets the duration of the task, in hours.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    protected double getDuration() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        return duration;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"     * Creates a {@code FixedDuration} task based on the received description and duration.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     * @return a new instance of {@code FixedDuration} task representing the task to be added.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    protected Task createTask() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"        String taskDescription \u003d getDescription();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        double taskDuration \u003d getDuration();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        return new FixedDuration(taskDescription, taskDuration);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":56}},{"path":"src/main/java/commands/add/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands.add;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import task.Todo;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":" * Extends from the {@code AddTaskCommand}. It is a subclass of {@code AddTaskCommand}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" * The {@code TodoCommand} class provides the general structure for adding a {@code Task}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * It is used to add a {@code Todo} task to the {@code TaskList}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * This command takes the description, creates a {@code Todo} task,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * adds it to the {@code TaskList}, and saves the updated {@code TaskList} to {@code Storage}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"public class TodoCommand extends AddTaskCommand {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    // todo \u003cdescription\u003e","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + SPACE + DESCRIPTION_IN_ANGLE_BRACKETS;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a {@code TodoCommand} with the specified description.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description of the {@code Todo} task to be added.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        super(description);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * Creates the {@code Todo} task with the given description.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     * @return the newly-created {@code Todo} task with the description.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    protected Task createTask() {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"        return new Todo(getDescription());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-08","isFullCredit":false}],"authorContributionMap":{"ameliadevs":38}},{"path":"src/main/java/common/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package common;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":" * Contains various constant values used throughout the application. It serves as a utility class.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":" * The Constants class centralizes commonly used string constants to","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":" * ensure consistency and ease of maintenance across the application.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":" * This design allows for easy modification of constants without changing the logic of the application.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"// to put magic literals","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"public class Constants {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"    // Add a private constructor to hide the implicit public one","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"    private Constants() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    // Ui","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    public static final String NEW_LINE \u003d \"\\n\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    public static final String PERCENT \u003d \"%\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    public static final String S \u003d \"s\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public static final String T \u003d \"T\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    public static final String D \u003d \"D\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    public static final String E \u003d \"E\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    public static final String FD \u003d \"FD\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    public static final String X \u003d \"X\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    public static final String SPACE \u003d \" \";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    public static final String DOT \u003d \".\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    public static final String DOT_SPACE \u003d DOT + SPACE;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public static final String OPEN_ROUND_BRACKET \u003d \"(\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    public static final String CLOSE_ROUND_BRACKET \u003d \")\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public static final String OPEN_SQUARE_BRACKET \u003d \"[\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    public static final String CLOSE_SQUARE_BRACKET \u003d \"]\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    public static final String OPEN_ANGLE_BRACKET \u003d \"\u003c\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    public static final String CLOSE_ANGLE_BRACKET \u003d \"\u003e\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    public static final String BACKTICK \u003d \"`\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    public static final String COMMA \u003d \",\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    public static final String UNDERSCORE \u003d \"_\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    public static final String ENCODE_TASK_SEPARATOR \u003d SPACE + \"|\" + SPACE;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    public static final String DESCRIPTION \u003d \"description\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    public static final String COLON \u003d \":\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    public static final String SLASH \u003d \"/\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    public static final String DESCRIPTION_IN_ANGLE_BRACKETS \u003d OPEN_ANGLE_BRACKET + DESCRIPTION + CLOSE_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    public static final String BY \u003d \"by\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    public static final String DATE \u003d \"date\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    public static final String DUE \u003d \"due\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    public static final String DUE_DATE \u003d DUE + SPACE + DATE;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    public static final String DUE_DATE_IN_ANGLE_BRACKETS \u003d OPEN_ANGLE_BRACKET + DUE_DATE + CLOSE_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    public static final String SLASH_BY \u003d SLASH + BY;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    public static final String FROM \u003d \"from\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    public static final String START \u003d \"start\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    public static final String TIME \u003d \"time\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    public static final String START_DATE_TIME \u003d START + SPACE + DATE + SLASH + TIME;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"    public static final String START_DATE_TIME_IN_ANGLE_BRACKETS \u003d OPEN_ANGLE_BRACKET + START_DATE_TIME + CLOSE_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"    public static final String SLASH_FROM \u003d SLASH + FROM;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    public static final String TO \u003d \"to\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"    public static final String END \u003d \"end\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"    public static final String END_DATE_TIME \u003d END + SPACE + DATE + SLASH + TIME;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"    public static final String END_DATE_TIME_IN_ANGLE_BRACKETS \u003d OPEN_ANGLE_BRACKET + END_DATE_TIME + CLOSE_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    public static final String SLASH_TO \u003d SLASH + TO;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"    public static final String DURATION \u003d \"duration\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    public static final String HOURS \u003d \"hours\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    public static final String SLASH_DURATION \u003d SLASH + DURATION;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    public static final String DURATION_IN_HOURS_IN_ANGLE_BRACKETS \u003d OPEN_ANGLE_BRACKET + DURATION + SPACE + \"in\" + SPACE + HOURS + CLOSE_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    public static final String TASK \u003d \"task\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"    public static final String TASK_NUMBER \u003d TASK + SPACE + \"number\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"    public static final String TASK_NUMBER_IN_ANGLE_BRACKETS \u003d OPEN_ANGLE_BRACKET + TASK + SPACE + \"number\" + CLOSE_ANGLE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"    public static final int ZERO \u003d 0;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"    public static final int ONE \u003d 1;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"    public static final int TWO \u003d 2;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"    public static final int FOUR \u003d 4;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"    public static final int FIVE \u003d 5;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"    public static final int SEVEN \u003d 7;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"    public static final int SIXTY \u003d 60;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"ameliadevs":78}},{"path":"src/main/java/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package common;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":" * Contains various message constants used throughout the application.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":" * It serves as a utility class.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":" * The Messages class centralizes all the strings used for user feedback,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" * error messages, and prompts to ensure consistency and ease of maintenance.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * This design allows for easy modification of messages without changing the logic of the application.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"public class Messages {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    // Add a private constructor to hide the implicit public one","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    private Messages() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    // Ui","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Greetings! It\u0027s Javaro at your service. What can I do for you?\";","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Good bye! Hope to see you again soon\";","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    // Storage: Folder","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR \u003d \"Error: \";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_CREATE_FOLDER_PRE \u003d ERROR + \"Failed to create the data directory\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_CREATE_FOLDER_POST \u003d \"Please check your folder path and permissions.\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    // Storage: File","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_CREATE_FILE_PRE \u003d ERROR + \"Failed to create the task file\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_CREATE_FILE_POST \u003d \"Please check your file path and permissions.\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    public static final String CHECK_PERMISSIONS \u003d \"Please check your permissions.\";","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_READ_FILE \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        \"Error: Unable to read the task file.\" + Constants.SPACE + CHECK_PERMISSIONS;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_WRITE_FILE \u003d ERROR + \"Failed to write to task file\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    public static final String FAIL_CREATE_FILE \u003d \"Error: Failed to create task file due to \";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_IO_CREATE_FILE \u003d \"An I/O error occurred.\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_SECURITY_CREATE_FILE \u003d \"security restrictions.\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_INSUFFICIENT_PERMISSIONS_PRE \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        \"Please ensure that you have sufficient permissions to \";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_INSUFFICIENT_PERMISSIONS \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        MESSAGE_INSUFFICIENT_PERMISSIONS_PRE + \"create the task file.\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_EMPTY_LINE \u003d \"Empty line found\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_INVALID_TASKS_DATA \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        \"Please ensure that all lines in ./data/tasks.txt contain valid data\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_TASK_MISSING_COMPONENTS \u003d \"Task data has missing components\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    // TaskList","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    public static final String TASKLIST_EMPTY \u003d \"Good job! You\u0027re all caught up!\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    // Parser","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_INVALID_COMMAND \u003d \"Error: Invalid command.\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    public static final String VALID_COMMANDS \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"        \"Please start with \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027. If you are done, please enter \u0027bye\u0027 to exit the chat\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_INVALID_COMMAND_FORMAT \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"        \"Error: Invalid command format for command \";       // to append actual command part entered by user at end of string","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"    // Todo, Deadline, Event","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION_PRE \u003d \"The description of a task cannot be empty.\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION_MID \u003d \"Please add a description for the task. Example: \\\"\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION_POST \u003d \" borrow book\\\"\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_INVALID_TASK_NUMBER \u003d \"Error: Invalid task number\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_NONEXISTENT_TASK_PRE \u003d \"Task number\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_NONEXISTENT_TASK_POST \u003d \"cannot be found.\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"    // public static final String MESSAGE_NONEXISTENT_TASK_POST \u003d \"Please enter a valid task number from 1 to\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_NOW_YOU_HAVE \u003d \"Now you have \";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_IN_THE_LIST \u003d \" in the list.\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_IN_YOUR_LIST \u003d \" in your list\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_IN_YOUR_LIST_COLON \u003d MESSAGE_IN_YOUR_LIST + Constants.COLON;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"    // TaskLisDecoder","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_INVALID_TASK_FORMAT \u003d \"Error: Invalid task format for \";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_TASK_NONEXISTENT \u003d \"Error: Task does not exist\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    // public static final String MESSAGE_NONEXISTENT_TASK_PRE \u003d \"Task number\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"    // public static final String MESSAGE_NONEXISTENT_TASK_POST \u003d \"not found.\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_ENTER_VALID_TASK_NUMBER \u003d \"Please enter a valid task number from 1 to\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_INVALID_DATETIME_FORMAT \u003d ERROR + \"Invalid date/time format\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_END_BEFORE_START \u003d ERROR + \"Start date/time must be before end date/time\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"    public static final String ERROR_EMPTY_INPUT \u003d ERROR + \"Input cannot be empty.\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"    // MarkCommand and UnmarkCommand","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"    public static final String MESSAGE_EMPTY_TASKLIST \u003d \"The task list is empty. Please add a task first.\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"    public static final String THE_TASK \u003d \"The task\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"    public static final String DONE \u003d \"done\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"    public static final String NOT \u003d \"not\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"    public static final String ALREADY_MARKED_AS \u003d \"is already marked as\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"    public static final String NO_ACTION_DONE \u003d \"No action done.\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"    public static final String HERE_ARE_THE \u003d \"Here are the\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-28","isFullCredit":false}],"authorContributionMap":{"ameliadevs":96}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"T | 1 | read book","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"D | 0 | return book | Jul 06 2024 1800","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"E | 0 | project meeting | Jun 09 2024 1400 | Jun 09 2024 1600","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"T | 1 | join sports club","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"FD | 0 | read the sales report | 2.0 hours","lastModifiedDate":"2024-11-12","isFullCredit":false}],"authorContributionMap":{"ameliadevs":5}},{"path":"src/main/java/exception/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"// https://stackoverflow.com/questions/8423700/how-to-create-a-custom-exception-type-in-java","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"package exception;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":" * Represents an exception that occurs during the execution of a command in the application.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":" *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * The CommandException class extends the JavaroException to provide specific error handling for command-related issues.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * This can include invalid commands, command format errors, or other command execution problems.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"public class CommandException extends JavaroException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a CommandException with the specified error message.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"     * @param error represents the error message associated with the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public CommandException(String error) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        super(error);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a CommandException with the specified error message and additional information.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     * @param error represents the error message associated with the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * @param info  represents the additional information about the error.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public CommandException(String error, String info) {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        super(error, info);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a CommandException with the specified error message, additional information, and usage instructions.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"     * @param error represents the error message associated with the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     * @param info  represents the additional information about the error.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"     * @param usage represents the usage instructions for the command.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    public CommandException(String error, String info, String usage) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        super(error, info, usage);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"ameliadevs":44}},{"path":"src/main/java/exception/FileContentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package exception;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":" * Represents an exception that occurs due to issues with the content of a file in the Javaro application.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":" * The FileContentException class extends the JavaroException to provide specific error handling","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":" * for issues related to file content, such as invalid formats, missing data, or corruption.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"public class FileContentException extends JavaroException {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"    public FileContentException(String errorMessage) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"        super(errorMessage);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a FileContentException with the specified error message,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"     * additional information, and usage instructions.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"     * @param errorMessage   the main error message associated with the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"     * @param detailedInfo   additional details about the error.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"     * @param expectedFormat usage instructions related to the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    public FileContentException(String errorMessage, String detailedInfo, String expectedFormat) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"        super(errorMessage, detailedInfo, expectedFormat);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":25}},{"path":"src/main/java/exception/JavaroException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package exception;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import java.util.Collections;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * Acts as a base class for custom exceptions in the application.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * This class extends the standard Exception class to include additional fields","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" * for detailed information and usage instructions related to the error.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"public class JavaroException extends Exception {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    protected String info \u003d Constants.EMPTY_STRING;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    protected String usage \u003d Constants.EMPTY_STRING;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a JavaroException with the specified error message.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"     * @param error represents the main error message associated with the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    public JavaroException(String error) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        super(error);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a JavaroException with the specified error message and additional information.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     * @param error represents the main error message associated with the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     * @param info  represents additional details about the error.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    public JavaroException(String error, String info) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        super(error);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"        this.info \u003d info;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a JavaroException with the specified error message,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"     * additional information and expected usage instructions.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"     * @param error represents the main error message associated with the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     * @param info  represents additional details about the error.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"     * @param usage usage instructions related to the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    public JavaroException(String error, String info, String usage) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"        this(error, info);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"        this.usage \u003d usage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"     * Returns a list of messages associated with this exception.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"     * This includes the main error message, additional information","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"     * (if provided), and expected usage instructions (if provided).","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"     * This method constructs a list of messages that can be used to provide","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"     * comprehensive feedback to the user regarding the nature of the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"     * @return a list of strings containing the main error message, detailed","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"     * information, and expected usage instructions related to this exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"    public ArrayList\u003cString\u003e getMessageList() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e(Collections.singletonList(super.getMessage()));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        if (!info.isEmpty()) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"            messages.add(info);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"        if (!usage.isEmpty()) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"            messages.add(usage);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"        return messages;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-28","isFullCredit":false}],"authorContributionMap":{"ameliadevs":76}},{"path":"src/main/java/exception/StorageOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package exception;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":" * Throws StorageOperationException when an error occurs during storage operations,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":" * e.g. loading tasks to TaskList, saving tasks to storage, etc.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":" * This class extends {@link JavaroException} to provide specific error handling","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":" * related to storage operations within the Javaro application.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" * It allows for the inclusion of additional information","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * about the error that occurred during these operations.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"public class StorageOperationException extends JavaroException {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a StorageOperationException with the specified error message and additional information.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"     * @param error represents the main error message associated with the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"     * @param info  represents additional details about the error that has occurred.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    public StorageOperationException(String error, String info) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"        super(error, info);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":23}},{"path":"src/main/java/exception/TaskListDecoderException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package exception;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":" * Throws exception during the decoding of a task list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":" *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":" * This class extends {@link JavaroException} to provide specific error handling","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" * for issues that arise while decoding task lists within the application.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * It allows for the inclusion of detailed error messages, additional information,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * and usage instructions related to the decoding process.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"public class TaskListDecoderException extends JavaroException {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a TaskListDecoderException with the specified error message.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"     * @param error represents the main error message associated with the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"     *              It provides information about the decoding error that occurred.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public TaskListDecoderException(String error) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        super(error);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a TaskListDecoderException with the specified error message,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"     * additional information, and usage instructions.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * @param error represents the main error message associated with the exception.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     *              It provides information about the decoding error that occurred.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * @param info  represents additional details about the error that has occurred.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     * @param usage represents usage instructions on the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    public TaskListDecoderException(String error, String info, String usage) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        super(error, info, usage);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":36}},{"path":"src/main/java/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package parser;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" * Parses and formats date and time strings. It is a utility class,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":" * This class provides methods to convert date and time strings in various formats to {@link LocalDateTime}","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":" * and {@link LocalDate} objects, as well as to format these objects back into strings.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":" * It supports specific input and output patterns for deadlines, events, and general date display.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"// Accept dates in a format such as yyyy-mm-dd format (e.g., 2019-10-15).","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"// Print in a different format such as MMM dd yyyy e.g., (Oct 15 2019).","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"public class DateTimeParser {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    private static final String INPUT_DATE_PATTERN \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    private static final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(INPUT_DATE_PATTERN);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    private static final String TIME_PATTERN \u003d \"HHmm\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    private static final String INPUT_DATETIME_PATTERN \u003d INPUT_DATE_PATTERN + Constants.SPACE + TIME_PATTERN;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    private static final DateTimeFormatter INPUT_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(INPUT_DATETIME_PATTERN);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    private static final String OUTPUT_DATETIME_PATTERN \u003d \"MMM dd yyyy\" + Constants.SPACE + TIME_PATTERN;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    private static final DateTimeFormatter OUTPUT_DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(OUTPUT_DATETIME_PATTERN);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    // Deadline must have date but time is optional","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    private static final DateTimeFormatter deadlineFormatter \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        .appendPattern(INPUT_DATE_PATTERN).optionalStart().appendPattern(Constants.SPACE + TIME_PATTERN)","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        .optionalEnd().parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0).toFormatter();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"//    private static final String SHOW_DATE_PATTERN \u003d INPUT_DATE_FORMAT;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"//    private static final DateTimeFormatter SHOW_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(SHOW_DATE_PATTERN);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    // Add a private constructor to hide the implicit public one","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    private DateTimeParser() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"     * Parses a date-time string in the format \"yyyy-MM-dd HHmm\" and returns a {@link LocalDateTime} object.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"     * Convert \"yyyy-MM-dd HHmm\" in String to \"MMM dd yyyy HHmm\" in LocalDateTime","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"     * @param input represents the date-time string to parse.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"     * @return the parsed LocalDateTime object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the input string is not in the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"    public static LocalDateTime parseOutputDateTime(String input) throws CommandException {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"            return LocalDateTime.parse(input, OUTPUT_DATETIME_FORMAT);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(Messages.ERROR_INVALID_DATETIME_FORMAT);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"     * Parses a deadline date-time string and returns a {@link LocalDateTime} object.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"     * The time is optional and defaults to midnight if not provided.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"     * For adding deadline tasks","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"     * @param input represents the deadline date-time string to parse.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"     * @return the parsed LocalDateTime object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the input string is not in the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"    public static LocalDateTime parseInputDeadlineDateTime(String input) throws CommandException {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"            return LocalDateTime.parse(input, deadlineFormatter);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"            // return LocalDateTime.parse(input, INPUT_DATETIME_FORMAT);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"            // System.out.println(e.getMessage());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(Messages.ERROR_INVALID_DATETIME_FORMAT,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Received `%s`\", input),","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Expected format: %s. Example: 2019-10-15 [1800]\", INPUT_DATETIME_PATTERN)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"     * Parses an event date-time string and returns a {@link LocalDateTime} object.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"     * For adding event tasks","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"     * @param input represents the event date-time string to parse.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"     * @return the parsed LocalDateTime object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the input string is not in the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"    public static LocalDateTime parseInputEventDateTime(String input) throws CommandException {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"            return LocalDateTime.parse(input, INPUT_DATETIME_FORMAT);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"            // System.out.println(e.getMessage());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(Messages.ERROR_INVALID_DATETIME_FORMAT,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Received `%s`\", input),","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Expected format: %s. Example: 2019-10-15 1800\", INPUT_DATETIME_PATTERN)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"     * Parses a date string for Show command and returns a {@link LocalDate} object.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"     * @param input represents the date String passed to the Show command.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"     * @return the parsed LocalDate object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the input string is not in the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"    public static LocalDate parseInputShowDate(String input) throws CommandException {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"            return LocalDate.parse(input, INPUT_DATE_FORMAT);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"            // System.out.println(e.getMessage());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(Messages.ERROR_INVALID_DATETIME_FORMAT,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Received `%s`\", input),","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Expected format: %s. Example: 2019-10-15 1800\", INPUT_DATETIME_PATTERN)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"     * Formats a {@link LocalDateTime} object into a String in the format \"MMM dd yyyy HHmm\".","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"     * For listing tasks in \"MMM dd yyyy HHmm\" format","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"     * @param dateTime represents the LocalDateTime object to format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"     * @return the formatted String.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"        // if (dateTime \u003d\u003d null) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"        //     throw new DateTimeParserException(\"Date/time cannot be null\");","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"        // }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(\"formatDateTime: dateTime is \" + dateTime);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"        return dateTime.format(OUTPUT_DATETIME_FORMAT);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-03","isFullCredit":false}],"authorContributionMap":{"ameliadevs":141}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package parser;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"// deals with making sense of the user command","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import commands.Command;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import commands.ByeCommand;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import commands.ListCommand;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import commands.MarkCommand;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import commands.ShowCommand;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import commands.FindCommand;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import commands.ArchiveCommand;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"import commands.add.DeadlineCommand;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"import commands.add.EventCommand;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"import commands.add.FixedDurationCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"import commands.add.TodoCommand;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":" * Parses user input commands.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":" * The Parser class provides methods to interpret user input commands and arguments,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":" * validate their formats, and create corresponding command objects.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":" * It uses regular expressions to validate user input strings by matching command patterns and extract arguments.","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":" * This ensures that the input adheres to the expected formats for various commands.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"public class Parser {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    // Regex below generated with the help of ChatGPT","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    private static final String BASIC_COMMAND_REGEX \u003d \"^(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(BASIC_COMMAND_REGEX);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    // Regex used for \"mark\", \"unmark\", \"delete\"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    private static final String TASK_NUMBER_ARGS_REGEX \u003d \"^(?\u003ctaskNumber\u003e\\\\d+)$\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    private static final Pattern TASK_NUMBER_ARGS_FORMAT \u003d Pattern.compile(TASK_NUMBER_ARGS_REGEX);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    private static final String TODO_COMMAND_ARGS_REGEX \u003d \"^(?\u003cdescription\u003e.+)$\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    private static final Pattern TODO_COMMAND_ARGS_FORMAT \u003d Pattern.compile(TODO_COMMAND_ARGS_REGEX);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    private static final String DEADLINE_COMMAND_ARGS_REGEX \u003d \"^(?\u003cdescription\u003e.+) /by (?\u003cdue\u003e.+)$\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    private static final Pattern DEADLINE_COMMAND_ARGS_FORMAT \u003d Pattern.compile(DEADLINE_COMMAND_ARGS_REGEX);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    private static final String EVENT_COMMAND_ARGS_REGEX \u003d \"^(?\u003cdescription\u003e.+) /from (?\u003cstart\u003e.+) /to (?\u003cend\u003e.+)$\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    private static final Pattern EVENT_COMMAND_ARGS_FORMAT \u003d Pattern.compile(EVENT_COMMAND_ARGS_REGEX);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    private static final String FD_COMMAND_ARGS_REGEX \u003d \"^(?\u003cdescription\u003e.+?) /duration (?\u003cduration\u003e\\\\d+(\\\\.\\\\d+)?)\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    private static final Pattern FD_COMMAND_ARGS_FORMAT \u003d Pattern.compile(FD_COMMAND_ARGS_REGEX);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"    private static final String FIND_COMMAND_ARGS_REGEX \u003d TODO_COMMAND_ARGS_REGEX;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    private static final Pattern FIND_COMMAND_ARGS_FORMAT \u003d Pattern.compile(FIND_COMMAND_ARGS_REGEX);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"    private static final String ARCHIVE_COMMAND_ARGS_REGEX \u003d \"^(?\u003cargument\u003eall|\\\\d+)$\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"    // private static final String ARCHIVE_COMMAND_ARGS_REGEX \u003d \"^(?P\u003ctarget\u003eall|\\\\d+)$\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    private static final Pattern ARCHIVE_COMMAND_ARGS_FORMAT \u003d Pattern.compile(ARCHIVE_COMMAND_ARGS_REGEX);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    private static final String DOT \u003d Constants.DOT;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    private static final String MESSAGE_THE_TASK_IS_MISSING_A \u003d \"The task is missing a\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    private static final String RECEIVED \u003d \"Received `%s %s`\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    private static final String EXAMPLE_USAGE \u003d \"Example usage: `%s`\";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"    // Add a private constructor to hide the implicit public one","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"    private Parser() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"     * Parses the user input and returns the corresponding Command object. This creates the Command object.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"     * @param userInput represents the input string from the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"     * @return a Command object corresponding to the parsed user input.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the input string is not in the expected format,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"     *                          i.e. invalid input string, or cannot be parsed into a command.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"    public static Command parse(String userInput) throws CommandException {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"                String.format(Constants.PERCENT + Constants.S, Messages.ERROR_INVALID_COMMAND_FORMAT)","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"        String cleanArgs \u003d arguments.trim();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"        /*","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"         * By https://se-education.org/guides/conventions/java/basic.html,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"         * The explicit //Fallthrough comment should be included whenever","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"         * there is a case statement without a break statement.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"         * Here, I do not explicitly include the //Fallthrough comment because","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"         * each case statement ends with a return statement.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"         */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"        return switch (commandWord) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"            case ByeCommand.COMMAND_WORD -\u003e new ByeCommand();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"            case ListCommand.COMMAND_WORD -\u003e new ListCommand();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"            case MarkCommand.COMMAND_WORD -\u003e prepareMark(cleanArgs);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"            case UnmarkCommand.COMMAND_WORD -\u003e prepareUnmark(cleanArgs);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"            case DeleteCommand.COMMAND_WORD -\u003e prepareDelete(cleanArgs);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"            case TodoCommand.COMMAND_WORD -\u003e prepareTodo(cleanArgs);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"            case DeadlineCommand.COMMAND_WORD -\u003e prepareDeadline(cleanArgs);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"            case EventCommand.COMMAND_WORD -\u003e prepareEvent(cleanArgs);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"            case ShowCommand.COMMAND_WORD -\u003e prepareShow(cleanArgs);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"            case FixedDurationCommand.COMMAND_WORD -\u003e prepareFixedDuration(cleanArgs);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"            case FindCommand.COMMAND_WORD -\u003e prepareFind(cleanArgs);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"            case ArchiveCommand.COMMAND_WORD -\u003e prepareArchive(cleanArgs);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"            default -\u003e throw new CommandException(Messages.ERROR_INVALID_COMMAND,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Command\u003d`%s`\", commandWord), Messages.VALID_COMMANDS","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"        };","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"     * Prepares the task number for commands that require it, i.e. mark, unmark, and delete.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"     * @param commandWord  represents the command word being processed, e.g. mark.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"     * @param args         represents the arguments string containing the task number.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"     * @param messageUsage represents the usage instructions for the command.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"     *                     It is part of the message displayed when an error occurs.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"     * @return the parsed task number.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the task number is invalid, i.e. the arguments do not match the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"    private static int prepareTaskNumberForCommand","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"        (String commandWord, String args, String messageUsage) throws CommandException {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"        final Matcher matcher \u003d TASK_NUMBER_ARGS_FORMAT.matcher(args);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"%s%s\", Messages.ERROR_INVALID_COMMAND_FORMAT, commandWord),","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"                String.format(RECEIVED, commandWord, args),","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"                String.format(EXAMPLE_USAGE, messageUsage)","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ameliadevs"},"content":"        return Integer.parseInt(matcher.group(\"taskNumber\"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ameliadevs"},"content":"     * Prepares a MarkCommand based on the provided arguments.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ameliadevs"},"content":"     * @param args represents the arguments string that contains the task number.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ameliadevs"},"content":"     * @return a MarkCommand object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the task number is invalid, i.e. the arguments do not match the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ameliadevs"},"content":"    private static Command prepareMark(String args) throws CommandException {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ameliadevs"},"content":"        int taskNumber \u003d prepareTaskNumberForCommand(MarkCommand.COMMAND_WORD, args, MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ameliadevs"},"content":"        return new MarkCommand(taskNumber);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ameliadevs"},"content":"     * Prepares an UnmarkCommand based on the provided arguments.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ameliadevs"},"content":"     * @param args represents the arguments string that contains the task number.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ameliadevs"},"content":"     * @return an UnmarkCommand object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the task number is invalid, i.e. the arguments do not match the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ameliadevs"},"content":"    private static Command prepareUnmark(String args) throws CommandException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ameliadevs"},"content":"        int taskNumber \u003d prepareTaskNumberForCommand(UnmarkCommand.COMMAND_WORD, args, UnmarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ameliadevs"},"content":"        return new UnmarkCommand(taskNumber);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ameliadevs"},"content":"     * Prepares a DeleteCommand based on the provided arguments.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ameliadevs"},"content":"     * @param args represents the arguments string that contains the task number.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ameliadevs"},"content":"     * @return a DeleteCommand object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the task number is invalid, i.e. the arguments do not match the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ameliadevs"},"content":"    private static Command prepareDelete(String args) throws CommandException {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ameliadevs"},"content":"        int taskNumber \u003d prepareTaskNumberForCommand(DeleteCommand.COMMAND_WORD, args, DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ameliadevs"},"content":"        return new DeleteCommand(taskNumber);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ameliadevs"},"content":"     * Checks if the description for a task command is empty.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ameliadevs"},"content":"     * @param args         represents the arguments string that contains the description.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ameliadevs"},"content":"     * @param commandWord  represents the command word that is being processed, e.g. mark.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ameliadevs"},"content":"     * @param messageUsage represents the usage instructions for the command when an error occurs.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the description is empty.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ameliadevs"},"content":"    private static void checkEmptyDescription(String args, String commandWord, String messageUsage)","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ameliadevs"},"content":"        throws CommandException {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ameliadevs"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ameliadevs"},"content":"                Messages.ERROR_INVALID_COMMAND_FORMAT + commandWord + DOT,","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ameliadevs"},"content":"                Messages.MESSAGE_EMPTY_DESCRIPTION_PRE,","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ameliadevs"},"content":"                String.format(EXAMPLE_USAGE, messageUsage)","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ameliadevs"},"content":"     * Validates the format of the arguments string using regular expression matcher.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ameliadevs"},"content":"     * @param matcher      represents the Matcher object that is used to validate the arguments.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ameliadevs"},"content":"     *                     It contains the result of matching the command arguments.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ameliadevs"},"content":"     * @param commandWord  represents the command word being processed.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ameliadevs"},"content":"     * @param args         represents the arguments string that was provided by the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ameliadevs"},"content":"     * @param messageUsage represents the usage message to display for the command,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ameliadevs"},"content":"     *                     providing an example of correct usage. It is shown when an error occurs.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the arguments string do not match the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ameliadevs"},"content":"    private static void validateArgsFormat(Matcher matcher, String commandWord, String args, String messageUsage)","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ameliadevs"},"content":"        throws CommandException {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ameliadevs"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ameliadevs"},"content":"                Messages.ERROR_INVALID_COMMAND_FORMAT + commandWord + DOT,","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ameliadevs"},"content":"                String.format(RECEIVED, commandWord, args),","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ameliadevs"},"content":"                String.format(EXAMPLE_USAGE, messageUsage)","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ameliadevs"},"content":"     * Prepares a TodoCommand object based on the provided arguments.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ameliadevs"},"content":"     * @param args represents the arguments string that contains the description.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ameliadevs"},"content":"     * @return a TodoCommand object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the arguments string (description) is invalid (empty),","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ameliadevs"},"content":"     *                          i.e. the arguments do not match the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ameliadevs"},"content":"    private static Command prepareTodo(String args) throws CommandException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ameliadevs"},"content":"        // Check if args (description) is empty","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ameliadevs"},"content":"        checkEmptyDescription(args, TodoCommand.COMMAND_WORD, TodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ameliadevs"},"content":"        final Matcher matcher \u003d TODO_COMMAND_ARGS_FORMAT.matcher(args);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ameliadevs"},"content":"        // Validate arg string format","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ameliadevs"},"content":"        validateArgsFormat(matcher, TodoCommand.COMMAND_WORD, args, TodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ameliadevs"},"content":"        String description \u003d matcher.group(Constants.DESCRIPTION).trim();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ameliadevs"},"content":"        return new TodoCommand(description.trim());","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ameliadevs"},"content":"     * Checks if the arguments contain a specific keyword (e.g. \"/by\", \"/from\", \"/to\")","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ameliadevs"},"content":"     * and throws an exception if it does not.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ameliadevs"},"content":"     * @param args         represents the arguments string to check.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ameliadevs"},"content":"     * @param keyword      represents the keyword to look for in the arguments.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ameliadevs"},"content":"     * @param commandWord  represents the command word being processed.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ameliadevs"},"content":"     * @param infoMessage  represents the message to display if the keyword is missing.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ameliadevs"},"content":"     * @param messageUsage represents the usage message to display in case of an error.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the keyword is not found in the arguments.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ameliadevs"},"content":"    private static void checkArgsContainsKeyword","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ameliadevs"},"content":"        (String args, String keyword, String commandWord, String infoMessage, String messageUsage)","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ameliadevs"},"content":"        throws CommandException {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ameliadevs"},"content":"        if (!args.contains(keyword)) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ameliadevs"},"content":"                Messages.ERROR_INVALID_COMMAND_FORMAT + commandWord + DOT,","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ameliadevs"},"content":"                infoMessage,","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ameliadevs"},"content":"                String.format(EXAMPLE_USAGE, messageUsage)","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"ameliadevs"},"content":"     * Prepares a DeadlineCommand object based on the provided arguments.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"ameliadevs"},"content":"     * @param args represents the arguments string that contains the description and due date of the task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"ameliadevs"},"content":"     * @return a DeadlineCommand object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the arguments string (description and due date received).","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"ameliadevs"},"content":"     *                          are invalid / missing, i.e. the arguments do not match the expected format.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ameliadevs"},"content":"    private static Command prepareDeadline(String args) throws CommandException {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_EMPTY_DUEDATE_PRE \u003d","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"ameliadevs"},"content":"            MESSAGE_THE_TASK_IS_MISSING_A + Constants.SPACE + Constants.DUE_DATE + DOT;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"ameliadevs"},"content":"        final String BY_KEYWORD \u003d Constants.SLASH_BY;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"ameliadevs"},"content":"        // Check if args (description) is empty","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ameliadevs"},"content":"        checkEmptyDescription(args, DeadlineCommand.COMMAND_WORD, DeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ameliadevs"},"content":"        checkArgsContainsKeyword(args, BY_KEYWORD, DeadlineCommand.COMMAND_WORD,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"ameliadevs"},"content":"            MESSAGE_EMPTY_DUEDATE_PRE, DeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"ameliadevs"},"content":"        final Matcher matcher \u003d DEADLINE_COMMAND_ARGS_FORMAT.matcher(args);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"ameliadevs"},"content":"        // Validate arg string format","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"ameliadevs"},"content":"        validateArgsFormat(matcher, DeadlineCommand.COMMAND_WORD, args, DeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"ameliadevs"},"content":"        String description \u003d matcher.group(Constants.DESCRIPTION).trim();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"ameliadevs"},"content":"        String dueString \u003d matcher.group(Constants.DUE).trim();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime due \u003d DateTimeParser.parseInputDeadlineDateTime(dueString);","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"ameliadevs"},"content":"        return new DeadlineCommand(description.trim(), due);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"ameliadevs"},"content":"     * Prepares an EventCommand object based on the provided arguments.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"ameliadevs"},"content":"     * @param args represents the arguments string that contains the","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"ameliadevs"},"content":"     *             description, start date/time, and end date/time of the event.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ameliadevs"},"content":"     * @return an EventCommand object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the arguments string (description, start date/time, and end date/time) are invalid,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ameliadevs"},"content":"     *                          i.e. the arguments do not match the expected format, or if the start date/time is after the end date/time.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"ameliadevs"},"content":"    private static Command prepareEvent(String args) throws CommandException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_EMPTY_STARTDATETIME_PRE \u003d","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"ameliadevs"},"content":"            MESSAGE_THE_TASK_IS_MISSING_A + Constants.SPACE + Constants.START_DATE_TIME + DOT;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"ameliadevs"},"content":"        // \"The task is missing an end date/time.\"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_EMPTY_ENDDATETIME_PRE \u003d","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"ameliadevs"},"content":"            MESSAGE_THE_TASK_IS_MISSING_A + \"n\" + Constants.SPACE + Constants.END_DATE_TIME + DOT;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"ameliadevs"},"content":"        final String FROM_KEYWORD \u003d Constants.SLASH_FROM;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"ameliadevs"},"content":"        final String TO_KEYWORD \u003d Constants.SLASH_TO;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"ameliadevs"},"content":"        // Check if args (description) is empty","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"ameliadevs"},"content":"        checkEmptyDescription(args, EventCommand.COMMAND_WORD, EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"ameliadevs"},"content":"        checkArgsContainsKeyword(args, FROM_KEYWORD, EventCommand.COMMAND_WORD,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"ameliadevs"},"content":"            MESSAGE_EMPTY_STARTDATETIME_PRE, EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"ameliadevs"},"content":"        checkArgsContainsKeyword(args, TO_KEYWORD, EventCommand.COMMAND_WORD,","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"ameliadevs"},"content":"            MESSAGE_EMPTY_ENDDATETIME_PRE, EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"ameliadevs"},"content":"        final Matcher matcher \u003d EVENT_COMMAND_ARGS_FORMAT.matcher(args);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"ameliadevs"},"content":"        // Validate arg string format","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"ameliadevs"},"content":"        validateArgsFormat(matcher, EventCommand.COMMAND_WORD, args, EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"ameliadevs"},"content":"        String description \u003d matcher.group(Constants.DESCRIPTION).trim();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"ameliadevs"},"content":"        String startDateTimeString \u003d matcher.group(Constants.START).trim();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime startDateTime \u003d DateTimeParser.parseInputEventDateTime(startDateTimeString);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"ameliadevs"},"content":"        String endDateTimeString \u003d matcher.group(Constants.END).trim();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime endDateTime \u003d DateTimeParser.parseInputEventDateTime(endDateTimeString);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"ameliadevs"},"content":"        if (endDateTime.isBefore(startDateTime)) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(Messages.ERROR_END_BEFORE_START);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"ameliadevs"},"content":"        return new EventCommand(description, startDateTime, endDateTime);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"ameliadevs"},"content":"     * Prepares a ShowCommand object based on the provided arguments.","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"ameliadevs"},"content":"     * @param args represents the arguments string that contains the date","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"ameliadevs"},"content":"     *             for which the user wishes to list the deadlines and events.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"ameliadevs"},"content":"     * @return a ShowCommand object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if the date is invalid, or cannot be parsed.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-07","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"ameliadevs"},"content":"    private static Command prepareShow(String args) throws CommandException {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"ameliadevs"},"content":"        LocalDate date \u003d DateTimeParser.parseInputShowDate(args);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"ameliadevs"},"content":"        return new ShowCommand(date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"ameliadevs"},"content":"     * Prepares a FixedCommand object based on the provided arguments.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"ameliadevs"},"content":"     * @param args represents the arguments string that contains the duration that the task requires.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"ameliadevs"},"content":"     * @return a FixedDurationCommand object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if there are missing components, or the command cannot be parsed.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"ameliadevs"},"content":"    private static Command prepareFixedDuration(String args) throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_EMPTY_DURATION_PRE \u003d \"The task is missing a duration.\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"ameliadevs"},"content":"        final String DURATION_KEYWORD \u003d Constants.SLASH_DURATION;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"ameliadevs"},"content":"        // Check if args (description) is empty","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"ameliadevs"},"content":"        checkEmptyDescription(args, FixedDurationCommand.COMMAND_WORD, FixedDurationCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"ameliadevs"},"content":"        final Matcher matcher \u003d FD_COMMAND_ARGS_FORMAT.matcher(args);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"ameliadevs"},"content":"        checkArgsContainsKeyword(args, DURATION_KEYWORD, FixedDurationCommand.COMMAND_WORD,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"ameliadevs"},"content":"            MESSAGE_EMPTY_DURATION_PRE, FixedDurationCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"ameliadevs"},"content":"        // Validate arg string format","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"ameliadevs"},"content":"        validateArgsFormat(matcher, FixedDurationCommand.COMMAND_WORD, args, FixedDurationCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"ameliadevs"},"content":"        String description \u003d matcher.group(Constants.DESCRIPTION).trim();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"ameliadevs"},"content":"        String durationString \u003d matcher.group(Constants.DURATION).trim();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"ameliadevs"},"content":"        double duration \u003d Double.parseDouble(durationString);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"ameliadevs"},"content":"        return new FixedDurationCommand(description, duration);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"ameliadevs"},"content":"     * Prepares a FindCommand object based on the provided arguments.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"ameliadevs"},"content":"     * @param args represents the arguments string that contains the task description keyword to search for.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"ameliadevs"},"content":"     * @return a FindCommand object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException if there are missing components, or the command cannot be parsed.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"ameliadevs"},"content":"    private static Command prepareFind(String args) throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"ameliadevs"},"content":"        // Check if args (description) is empty","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"ameliadevs"},"content":"        checkEmptyDescription(args, FindCommand.COMMAND_WORD, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"ameliadevs"},"content":"        final Matcher matcher \u003d FIND_COMMAND_ARGS_FORMAT.matcher(args);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"ameliadevs"},"content":"        // Validate arg string format","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"ameliadevs"},"content":"        validateArgsFormat(matcher, FindCommand.COMMAND_WORD, args, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"ameliadevs"},"content":"        String description \u003d matcher.group(Constants.DESCRIPTION).trim();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"ameliadevs"},"content":"        return new FindCommand(description);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"ameliadevs"},"content":"    private static Command prepareArchive(String args) throws CommandException {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"ameliadevs"},"content":"        final Matcher matcher \u003d ARCHIVE_COMMAND_ARGS_FORMAT.matcher(args);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"ameliadevs"},"content":"        validateArgsFormat(matcher, ArchiveCommand.COMMAND_WORD, args, ArchiveCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"ameliadevs"},"content":"        return new ArchiveCommand(args);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-30","isFullCredit":false}],"authorContributionMap":{"ameliadevs":421}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package storage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import exception.FileContentException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import exception.TaskListDecoderException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import java.io.File;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"import java.util.List;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"// Reference: https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/StorageFile.java","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":" * Represents the storage file used to manage storage of tasks data.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":" * Handles the creation, verification, and management of the task file and its directory {@code data}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":" * Deals with loading tasks from the task file and saving tasks in the task file.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"public class Storage {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"java.class.path: \" + System.getProperty(\"java.class.path\"));","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"user.dir: \" + System.getProperty(\"user.dir\") + \"/data/tasks.txt\");","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"user.home: \" + System.getProperty(\"user.home\"));","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"storage: \" + System.getProperty(\"storage\"));","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"//    private static final String BASE_FILEPATH \u003d System.getProperty(\"user.dir\") + \"/data/\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    // Default file path used if the user doesn\u0027t provide the file name.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"//    private static final String DEFAULT_STORAGE_FILEPATH \u003d BASE_FILEPATH + \"tasks.txt\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"//    private static final String DEFAULT_STORAGE_FILEPATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"//    private static final String DEFAULT_STORAGE_FILEPATH \u003d \"./src/main/java/data/tasks.txt\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"//    private static final String DEFAULT_STORAGE_FILEPATH \u003d \"../data/tasks.txt\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    private static final String DEFAULT_STORAGE_FILEPATH \u003d System.getProperty(\"storage.file\", \"./data/tasks.txt\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"//    private static final String ARCHIVE_STORAGE_FILEPATH \u003d \"../data/archive.txt\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"//    private static final String ARCHIVE_STORAGE_FILEPATH \u003d BASE_FILEPATH + \"archive.txt\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    private static final String ARCHIVE_STORAGE_FILEPATH \u003d System.getProperty(\"storage.file\", \"./data/archive.txt\");","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    private final Path tasksFilePath;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    private final Path archiveTasksFilePath;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"     * Constructs an instance of Storage and initializes the file path to the default value.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"     * The constructor checks for the existence of the data folder and task file, and creates them if they don\u0027t exist.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"     * @throws StorageOperationException if an error occurs while creating the data folder or task file.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"    public Storage() throws StorageOperationException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"java.class.path: \" + System.getProperty(\"java.class.path\"));","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"project root: \" + System.getProperty(\"user.dir\"));","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"user.dir: \" + System.getProperty(\"user.dir\") + \"/data/tasks.txt\");","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"user.home: \" + System.getProperty(\"user.home\"));","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"storage: \" + System.getProperty(\"storage.file\"));","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"test: \" + Paths.get(\"src\", \"main\", \"java\", \"data\"));","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        this.tasksFilePath \u003d Paths.get(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        this.archiveTasksFilePath \u003d Paths.get(ARCHIVE_STORAGE_FILEPATH);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        checkDataFolderExists();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"        checkTaskFileExists();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"        checkArchiveFileExists();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"     * Retrieves the file path for the storage, i.e. the task file.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"     * @return the file path of the task file as a Path object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"    public Path getTasksFilePath() {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"        return tasksFilePath;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"    public Path getArchiveTasksFilePath() {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"        return archiveTasksFilePath;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"     * Retrieves the task file associated with the storage.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"     * @return the file object of the task file as a File object","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"    public File getTasksFile() {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"        return getTasksFilePath().toFile();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"    public File getArchiveTasksFile() {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"        return getArchiveTasksFilePath().toFile();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"    private StorageOperationException throwStorageOperationException","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"        (String errorMessagePre, String filePathString, String errorMessagePost) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"        return new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s at %s\", errorMessagePre, filePathString),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"            errorMessagePost","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"        /*","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"        // checkDataFolderExists()","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"        throw new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s at %s\", Messages.ERROR_CREATE_FOLDER_PRE, dataFolderPathString),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"            Messages.ERROR_CREATE_FOLDER_POST","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"        // checkFileExists - if file not created","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"        throw new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s at %s\", Messages.ERROR_CREATE_FILE_PRE, filePathString),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"            Messages.ERROR_CREATE_FILE_POST","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"        // checkFileExists - IOException","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"        throw new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s at %s\", Messages.ERROR_CREATE_FILE_PRE, filePathString),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"            Messages.ERROR_IO_CREATE_FILE","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"        // checkFileExists - SecurityException","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"        throw new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s at %s due to %s\", Messages.ERROR_CREATE_FILE_PRE,","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"                filePathString, Messages.ERROR_SECURITY_CREATE_FILE),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s create a new file.\", Messages.MESSAGE_INSUFFICIENT_PERMISSIONS_PRE)","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"        // appendEncodedTaskToFile","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"        throw new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s at %s\", Messages.ERROR_WRITE_FILE, filePath.toString()),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s write to the task file\", Messages.MESSAGE_INSUFFICIENT_PERMISSIONS_PRE)","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"        // writeEncodedTaskToFile","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"        throw new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s at %s\", Messages.ERROR_WRITE_FILE, filePath.toString()),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s write to the task file\", Messages.MESSAGE_INSUFFICIENT_PERMISSIONS_PRE)","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ameliadevs"},"content":"        */","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ameliadevs"},"content":"     * Checks if the data folder exists. Handles missing data folder by creating it.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ameliadevs"},"content":"     * The data folder is expected to be in the `/data` directory. It must match the file path exactly.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ameliadevs"},"content":"     * @throws StorageOperationException if an error occurs while checking or creating the data folder,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ameliadevs"},"content":"     *                                   e.g. folder cannot be created","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ameliadevs"},"content":"    public void checkDataFolderExists() throws StorageOperationException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ameliadevs"},"content":"        // https://stackoverflow.com/questions/15571496/how-to-check-if-a-folder-exists","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ameliadevs"},"content":"        // Check if \"data\" directory exists in current folder","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ameliadevs"},"content":"        Path dataFolderPath \u003d getTasksFilePath().getParent();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ameliadevs"},"content":"        String dataFolderPathString \u003d dataFolderPath.toString();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ameliadevs"},"content":"        File dataFolder \u003d new File(dataFolderPathString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ameliadevs"},"content":"        boolean isDataFolderExists \u003d dataFolder.exists() \u0026\u0026 dataFolder.isDirectory();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ameliadevs"},"content":"        // Create the directory if it does not exist","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ameliadevs"},"content":"        if (!isDataFolderExists) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ameliadevs"},"content":"            // https://tutorialspoint.com/java/java_directories.htm","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ameliadevs"},"content":"            // The mkdir() method creates a directory, returning true on success and false on failure.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ameliadevs"},"content":"            // Failure indicates that the path specified in the File object already exists,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ameliadevs"},"content":"            // or that the directory cannot be created because the entire path does not exist yet.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ameliadevs"},"content":"            boolean isDataFolderCreated \u003d dataFolder.mkdir();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ameliadevs"},"content":"            if (!isDataFolderCreated) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ameliadevs"},"content":"                // Error: Failed to create the data directory at ./data","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ameliadevs"},"content":"                //     Please check your folder path and permissions.","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ameliadevs"},"content":"                throw throwStorageOperationException(Messages.ERROR_CREATE_FOLDER_PRE, dataFolderPathString,","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ameliadevs"},"content":"                    Messages.ERROR_CREATE_FOLDER_POST);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ameliadevs"},"content":"    public void checkFileExists(File file) throws StorageOperationException {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ameliadevs"},"content":"        // Note: It is intentional that I do not check that the file ends with txt.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ameliadevs"},"content":"        // The file.exists() method checks for the existence of the exact file specified by the full path,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ameliadevs"},"content":"        // including the filename and its extension. It is looking for a file named \"tasks.txt\" specifically.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ameliadevs"},"content":"        boolean isFileExists \u003d file.exists();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ameliadevs"},"content":"//        System.out.println(\"is \" + file.toString() + \" exists: \" + isFileExists);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ameliadevs"},"content":"        String filePathString \u003d file.getPath();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ameliadevs"},"content":"        if (!isFileExists) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ameliadevs"},"content":"            try {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ameliadevs"},"content":"                boolean isFileCreated \u003d file.createNewFile();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ameliadevs"},"content":"                if (!isFileCreated) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ameliadevs"},"content":"                    // Error: Failed to create the task file at ./data/tasks.txt","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ameliadevs"},"content":"                    // Please check your file path and permissions.","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ameliadevs"},"content":"                    throw throwStorageOperationException(Messages.ERROR_CREATE_FILE_PRE, filePathString,","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ameliadevs"},"content":"                        Messages.ERROR_CREATE_FILE_POST);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ameliadevs"},"content":"                }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ameliadevs"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ameliadevs"},"content":"                throw throwStorageOperationException(Messages.ERROR_CREATE_FILE_PRE, filePathString,","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ameliadevs"},"content":"                    Messages.ERROR_IO_CREATE_FILE);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ameliadevs"},"content":"//                throw new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ameliadevs"},"content":"//                    String.format(\"%s at %s\", Messages.ERROR_CREATE_FILE_PRE, filePathString),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ameliadevs"},"content":"//                    Messages.ERROR_IO_CREATE_FILE","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ameliadevs"},"content":"//                );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ameliadevs"},"content":"            } catch (SecurityException e) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ameliadevs"},"content":"                String modifiedFilePathString \u003d filePathString + Constants.SPACE + \"due to\" +","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ameliadevs"},"content":"                    Constants.SPACE + Messages.ERROR_SECURITY_CREATE_FILE;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ameliadevs"},"content":"                String errorMessagePost \u003d Messages.MESSAGE_INSUFFICIENT_PERMISSIONS_PRE +","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ameliadevs"},"content":"                    Constants.SPACE + \"create a new file.\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ameliadevs"},"content":"                throw throwStorageOperationException(Messages.ERROR_CREATE_FILE_PRE, modifiedFilePathString,","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ameliadevs"},"content":"                    errorMessagePost);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ameliadevs"},"content":"//                throw new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ameliadevs"},"content":"//                    String.format(\"%s at %s due to %s\", Messages.ERROR_CREATE_FILE_PRE,","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ameliadevs"},"content":"//                        filePathString, Messages.ERROR_SECURITY_CREATE_FILE),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ameliadevs"},"content":"//                    String.format(\"%s create a new file.\", Messages.MESSAGE_INSUFFICIENT_PERMISSIONS_PRE)","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ameliadevs"},"content":"//                );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ameliadevs"},"content":"     * Checks if the task file exists and creates it if it does not.","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ameliadevs"},"content":"     * @throws StorageOperationException if an error occurs while creating the task file.","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ameliadevs"},"content":"    // Handles missing data file by creating it","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ameliadevs"},"content":"    public void checkTaskFileExists() throws StorageOperationException {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ameliadevs"},"content":"        File tasksFile \u003d getTasksFile();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ameliadevs"},"content":"        checkFileExists(tasksFile);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ameliadevs"},"content":"    public void checkArchiveFileExists() throws StorageOperationException {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ameliadevs"},"content":"        File archiveFile \u003d getArchiveTasksFile();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ameliadevs"},"content":"        checkFileExists(archiveFile);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ameliadevs"},"content":"     * Reads all lines from the task file.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ameliadevs"},"content":"     * @return a list of strings representing the lines in the task file.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ameliadevs"},"content":"     * @throws IOException if an error occurs while reading the file.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ameliadevs"},"content":"    public List\u003cString\u003e getAllLines() throws IOException {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ameliadevs"},"content":"        Path filePath \u003d getTasksFilePath();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ameliadevs"},"content":"        List\u003cString\u003e lines;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ameliadevs"},"content":"        lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ameliadevs"},"content":"        return lines;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ameliadevs"},"content":"     * Loads all tasks from the task file into a {@code TaskList} object.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ameliadevs"},"content":"     * @return a TaskList containing the loaded tasks.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ameliadevs"},"content":"     * @throws IOException              if an error occurs while reading the file.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ameliadevs"},"content":"     * @throws FileContentException     if the content of the file is invalid.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ameliadevs"},"content":"     * @throws TaskListDecoderException if an error occurs while decoding the task list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException         if an error occurs while processing the command.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ameliadevs"},"content":"    // Write all lines in tasks.txt into TaskList","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ameliadevs"},"content":"    public TaskList loadTasks() throws IOException, FileContentException, TaskListDecoderException, CommandException {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ameliadevs"},"content":"        TaskList taskList;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ameliadevs"},"content":"        List\u003cString\u003e lines;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ameliadevs"},"content":"            lines \u003d getAllLines();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ameliadevs"},"content":"            taskList \u003d TaskListDecoder.decodeTaskList(lines);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ameliadevs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ameliadevs"},"content":"            throw new IOException(Messages.ERROR_READ_FILE);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"ameliadevs"},"content":"        return taskList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"ameliadevs"},"content":"    public void appendEncodedTaskToFile(Task task, Path filePath) throws StorageOperationException {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"ameliadevs"},"content":"            String encodedTask \u003d TaskListEncoder.encodeTaskToString(task);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"ameliadevs"},"content":"            // https://stackoverflow.com/questions/1625234/how-to-append-text-to-an-existing-file-in-java","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"ameliadevs"},"content":"            encodedTask +\u003d System.lineSeparator();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ameliadevs"},"content":"            Files.write(filePath, encodedTask.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"ameliadevs"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ameliadevs"},"content":"            String filePathString \u003d filePath.toString();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"ameliadevs"},"content":"            String fileName \u003d new File(filePathString).getName();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"ameliadevs"},"content":"            String errorMessagePost \u003d Messages.MESSAGE_INSUFFICIENT_PERMISSIONS_PRE +","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"ameliadevs"},"content":"                \"write to \" + fileName;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ameliadevs"},"content":"            throw throwStorageOperationException(Messages.ERROR_WRITE_FILE, filePathString, errorMessagePost);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ameliadevs"},"content":"//            throw new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"ameliadevs"},"content":"//                String.format(\"%s at %s\", Messages.ERROR_WRITE_FILE, filePath.toString()),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"ameliadevs"},"content":"//                String.format(\"%s write to the task file\", Messages.MESSAGE_INSUFFICIENT_PERMISSIONS_PRE)","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"ameliadevs"},"content":"//            );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"ameliadevs"},"content":"    public void writeEncodedTasksToFile(TaskList taskList, Path filePath) throws StorageOperationException {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"ameliadevs"},"content":"        final String TASKS_FILE \u003d \"tasks.txt\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"ameliadevs"},"content":"        final String ARCHIVE_FILE \u003d \"archive.txt\";","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"ameliadevs"},"content":"        boolean isEndsWithTasks \u003d filePath.endsWith(TASKS_FILE);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"ameliadevs"},"content":"        boolean isEndsWithArchive \u003d filePath.endsWith(ARCHIVE_FILE);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"ameliadevs"},"content":"            List\u003cString\u003e encodedTaskList \u003d TaskListEncoder.encodeTaskList(taskList);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ameliadevs"},"content":"            if (isEndsWithArchive) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ameliadevs"},"content":"                Files.write(filePath, encodedTaskList, StandardOpenOption.APPEND);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ameliadevs"},"content":"            } else if (isEndsWithTasks) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"ameliadevs"},"content":"                Files.write(filePath, encodedTaskList);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"ameliadevs"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"ameliadevs"},"content":"            String filePathString \u003d filePath.toString();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ameliadevs"},"content":"            String fileName \u003d new File(filePathString).getName();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ameliadevs"},"content":"            String errorMessagePost \u003d Messages.MESSAGE_INSUFFICIENT_PERMISSIONS_PRE +","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ameliadevs"},"content":"                \"write to \" + fileName;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"ameliadevs"},"content":"            throw throwStorageOperationException(Messages.ERROR_WRITE_FILE, filePathString, errorMessagePost);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"ameliadevs"},"content":"//            throw new StorageOperationException(","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"ameliadevs"},"content":"//                String.format(\"%s at %s\", Messages.ERROR_WRITE_FILE, filePath.toString()),","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"ameliadevs"},"content":"//                String.format(\"%s write to %s\", Messages.MESSAGE_INSUFFICIENT_PERMISSIONS_PRE, fileName)","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"ameliadevs"},"content":"//            );","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"ameliadevs"},"content":"     * Writes and saves all tasks from the {@code TaskList} object into the task file (tasks.txt).","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents the task list object to be saved.","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"ameliadevs"},"content":"     * @throws StorageOperationException if an error occurs while writing to the file.","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"ameliadevs"},"content":"    public void saveTasks(TaskList taskList) throws StorageOperationException {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"ameliadevs"},"content":"        writeEncodedTasksToFile(taskList, getTasksFilePath());","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"ameliadevs"},"content":"    public void archiveTask(Task task) throws StorageOperationException {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"ameliadevs"},"content":"        appendEncodedTaskToFile(task, getArchiveTasksFilePath());","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"ameliadevs"},"content":"    public void archiveTasks(TaskList taskList) throws StorageOperationException {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"ameliadevs"},"content":"        writeEncodedTasksToFile(taskList, getArchiveTasksFilePath());","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":337}},{"path":"src/main/java/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package storage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import exception.FileContentException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import exception.TaskListDecoderException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import task.TaskType;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import task.CompletionStatus;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import task.Todo;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"import task.Deadline;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"import task.Event;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"import task.FixedDuration;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"import java.util.List;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":" * Decodes a list of encoded tasks into a {@code TaskList} object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":" * This class interprets the specific format of each task and decodes the task","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":" * in different formats before creating the corresponding {@code Task} objects.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"public class TaskListDecoder {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    private static final String EXPECTED_FORMAT_TODO \u003d \"T | 0 | \u003ctask description\u003e\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    private static final String EXPECTED_FORMAT_DEADLINE \u003d \"D | 0 | \u003ctask description\u003e | \u003ctask deadline\u003e\";","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    private static final String EXPECTED_FORMAT_EVENT \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        \"E | 0 | \u003ctask description\u003e | \u003cevent start date/time\u003e | \u003cevent end date/time\u003e\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    private static final String EXPECTED_FORMAT_FD \u003d \"FD | 0 | \u003ctask description\u003e | \u003crequired duration in hours\u003e\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    // Add a private constructor to hide the implicit public one.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    private TaskListDecoder() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"     * Decodes a list of encoded tasks into a {@code TaskList} object, which will contain the decoded tasks.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"     * @param encodedTaskList represents a list of strings that contain the encoded tasks.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     * @return a {@code TaskList} object that contains the decoded tasks.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"     * @throws FileContentException     if an error occurs while decoding the task on a specific line,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     *                                  i.e. the file content is invalid.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     * @throws TaskListDecoderException if an error occurs while decoding the task on a specific line.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException         if an error occurs while processing the command.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    // Solution below referenced from https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/AddressBookDecoder.java#L34","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    protected static TaskList decodeTaskList(List\u003cString\u003e encodedTaskList)","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        throws FileContentException, TaskListDecoderException, CommandException {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        TaskList decodedTasks \u003d new TaskList();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"        for (String encodedTask : encodedTaskList) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"            // System.out.println(\"encodedTask: \" + encodedTask);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"            Task decodedTask \u003d decodeTaskFromString(encodedTask);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"            // System.out.println(\"Decoded task: \" + task);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"            decodedTasks.addTask(decodedTask);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"        return decodedTasks;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    private static void validateEncodedTask(String encodedTask) throws FileContentException {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        if (encodedTask.isEmpty()) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"            throw new FileContentException(","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"%s. %s.\", Messages.MESSAGE_EMPTY_LINE, Messages.MESSAGE_INVALID_TASKS_DATA),","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Received `%s`\", encodedTask),","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Expected format: `%s` or `%s` or `%s` or `%s`\", EXPECTED_FORMAT_TODO,","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"                    EXPECTED_FORMAT_DEADLINE, EXPECTED_FORMAT_EVENT, EXPECTED_FORMAT_FD)","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"    private static String[] splitEncodedTask(String encodedTask) throws FileContentException {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"        String[] taskData \u003d encodedTask.split(\" \\\\| \");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(\"taskData is \" + Arrays.toString(taskData));","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"        if (taskData.length \u003c 3) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"            throw new FileContentException(","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"%s. %s.\", Messages.MESSAGE_TASK_MISSING_COMPONENTS,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"                    Messages.MESSAGE_INVALID_TASKS_DATA),","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Received `%s`\", Arrays.toString(taskData)),","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Expected format: `%s` or `%s` or `%s`\", EXPECTED_FORMAT_TODO,","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"                    EXPECTED_FORMAT_DEADLINE, EXPECTED_FORMAT_EVENT)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"        return taskData;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"    private static TaskType getTaskType(String taskTypeString) throws FileContentException {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"        final String ERROR_GET_TASKTYPE \u003d \"Error: Unknown task type.\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"        final String VALID_TASK_TYPE \u003d TaskType.getValidTaskType();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"        TaskType taskType;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"            taskType \u003d TaskType.getTaskType(taskTypeString);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"            // throw new FileContentException(\"Unknown task type: \" + taskData[0].trim());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"            throw new FileContentException(ERROR_GET_TASKTYPE,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Received `%s`\", taskTypeString.trim()),","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Expected `%s`\", VALID_TASK_TYPE)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"        return taskType;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"    private static boolean getIsDone(String isDoneString) throws FileContentException {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"        CompletionStatus isDone;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"        final String MESSAGE_INVALID_COMPLETION_STATUS \u003d \"Task has invalid completion status\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"            isDone \u003d CompletionStatus.getStatus(isDoneString);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"            throw new FileContentException(MESSAGE_INVALID_COMPLETION_STATUS);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"        final String VALID_COMPLETION_STATUS \u003d CompletionStatus.getValidStatus();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"        return isDone \u003d\u003d CompletionStatus.DONE;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"    private static void validateTaskDataLength(int taskDataLength, TaskType taskType,","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"                                               String[] taskData) throws TaskListDecoderException {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"        int expectedTaskDataLength \u003d 0;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"        String expectedFormat \u003d null;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"        if (taskType.equals(TaskType.DEADLINE)) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"            expectedTaskDataLength \u003d Constants.FOUR;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"            expectedFormat \u003d EXPECTED_FORMAT_DEADLINE;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"        } else if (taskType.equals(TaskType.EVENT)) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"            expectedTaskDataLength \u003d Constants.FIVE;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"            expectedFormat \u003d EXPECTED_FORMAT_EVENT;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"        } else if (taskType.equals(TaskType.FIXED_DURATION)) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"            expectedTaskDataLength \u003d Constants.FOUR;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"            expectedFormat \u003d EXPECTED_FORMAT_FD;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ameliadevs"},"content":"        if (taskDataLength \u003c expectedTaskDataLength) {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ameliadevs"},"content":"            throw new TaskListDecoderException(Messages.ERROR_INVALID_TASK_FORMAT,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Received `%s`\", Arrays.toString(taskData)),","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ameliadevs"},"content":"                String.format(\"Expected format: `%s`\", expectedFormat));","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ameliadevs"},"content":"     * Decodes a single line of {@code encodedTask} String (from tasks file) into a {@code Task} object.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ameliadevs"},"content":"     * @param encodedTask represents a String containing the encoded task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ameliadevs"},"content":"     * @return a {@code Task} object that corresponds to the {@code encodedTask} String.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ameliadevs"},"content":"     * @throws FileContentException     if the encoded task format is invalid.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ameliadevs"},"content":"     * @throws TaskListDecoderException if an error occurs while decoding the task list,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ameliadevs"},"content":"     *                                  i.e. format of the encoded task (String) is invalid.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException         if an error related to command processing occurs,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ameliadevs"},"content":"     *                                  i.e. there is an issue while parsing date/time.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ameliadevs"},"content":"    // Example encodedTask: T | 1 | read book","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ameliadevs"},"content":"    private static Task decodeTaskFromString(String encodedTask)","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ameliadevs"},"content":"        throws FileContentException, TaskListDecoderException, CommandException {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ameliadevs"},"content":"        validateEncodedTask(encodedTask);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ameliadevs"},"content":"        String[] taskData \u003d splitEncodedTask(encodedTask);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ameliadevs"},"content":"        Task task;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ameliadevs"},"content":"        TaskType taskType \u003d getTaskType(taskData[0].trim());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ameliadevs"},"content":"        boolean isDone \u003d getIsDone(taskData[1].trim());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ameliadevs"},"content":"        String description \u003d taskData[2].trim();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ameliadevs"},"content":"        validateTaskDataLength(taskData.length, taskType, taskData);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ameliadevs"},"content":"        switch (taskType) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ameliadevs"},"content":"            case TODO:","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ameliadevs"},"content":"                task \u003d new Todo(description, isDone);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ameliadevs"},"content":"                break;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ameliadevs"},"content":"            case DEADLINE:","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ameliadevs"},"content":"                // The tasks file contains a String representation of the time.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ameliadevs"},"content":"                // To create a deadline task, we need to parse the String into a LocalDateTime object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ameliadevs"},"content":"                LocalDateTime due \u003d DateTimeParser.parseOutputDateTime(taskData[3].trim());","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ameliadevs"},"content":"                task \u003d new Deadline(description, isDone, due);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ameliadevs"},"content":"                break;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ameliadevs"},"content":"            case EVENT:","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ameliadevs"},"content":"                LocalDateTime startDateTime \u003d DateTimeParser.parseOutputDateTime(taskData[3].trim());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ameliadevs"},"content":"                LocalDateTime endDateTime \u003d DateTimeParser.parseOutputDateTime(taskData[4].trim());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ameliadevs"},"content":"                task \u003d new Event(description, isDone, startDateTime, endDateTime);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ameliadevs"},"content":"                break;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ameliadevs"},"content":"            case FIXED_DURATION:","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ameliadevs"},"content":"                 String[] durationString \u003d taskData[3].split(Constants.EMPTY_STRING);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ameliadevs"},"content":"                 double duration \u003d Double.parseDouble(durationString[0].trim());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ameliadevs"},"content":"                // double duration \u003d Double.parseDouble(taskData[3]);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ameliadevs"},"content":"                task \u003d new FixedDuration(description, isDone, duration);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ameliadevs"},"content":"                break;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ameliadevs"},"content":"            default:","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ameliadevs"},"content":"                throw new TaskListDecoderException(\"Invalid task type: \" + taskType);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ameliadevs"},"content":"        task.setDone(isDone);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ameliadevs"},"content":"        return task;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":210}},{"path":"src/main/java/storage/TaskListEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package storage;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import java.util.List;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * Encodes a {@code TaskList} into a list of strings.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * The list represents the tasks in a format that is suitable for storage, i.e. writing / saving to the tasks file.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"public class TaskListEncoder {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    // Add a private constructor to hide the implicit public one.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    private TaskListEncoder() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"     * Encodes the given {@code TaskList} into a list of strings, where each string represents an encoded task.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     * @param taskList represents the {@code TaskList} to be encoded.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"     * @return a list of strings representing the encoded tasks.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    protected static List\u003cString\u003e encodeTaskList(TaskList taskList) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"        final List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"        for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"            encodedTasks.add(encodeTaskToString(task));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        return encodedTasks;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"     * Encodes a single {@code Task} into its string representation.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"     * @param task represents the {@code Task} to be encoded.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     * @return a string representation of the encoded {@code Task}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    protected static String encodeTaskToString(Task task) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        return task.encodeTask();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":44}},{"path":"src/main/java/task/CompletionStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"public enum CompletionStatus {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"    DONE(\"1\"),","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"    NOT_DONE(\"0\");","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"    private final String status;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"    CompletionStatus(String status) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    private String getStatus() {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"        return status;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public static CompletionStatus getStatus(String status) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        for (CompletionStatus completionStatus : CompletionStatus.values()) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"            if (completionStatus.getStatus().equals(status)) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"                return completionStatus;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        throw new IllegalArgumentException();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    public static String getValidStatus() {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"        StringBuilder completionStatus \u003d new StringBuilder();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        for (CompletionStatus status : CompletionStatus.values()) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"            completionStatus.append(Constants.BACKTICK).append(status.status)","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"                .append(Constants.BACKTICK).append(Constants.COMMA);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        if (!completionStatus.isEmpty()) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"            completionStatus.setLength(completionStatus.length() - 1);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        return completionStatus.toString();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-12","isFullCredit":false}],"authorContributionMap":{"ameliadevs":41}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * Represents a task with a specific due date and time.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * Deadlines are tasks that need to be done before a specific date/time, e.g., submit report by 11/10/2019 5pm.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" * It extends from the {@code Task} class and provides additional functionality for managing deadlines.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * It encapsulates the task description, completion status, and due date.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    private final LocalDateTime due;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a {@code Deadline} task with the specified description, completion status, and due date / time.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description of the {@code Deadline} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     * @param isDone      represents the completion status of the {@code Deadline} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"     * @param due         represents the due date / time of the {@code Deadline} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime due) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"        this.due \u003d due;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a {@code Deadline} task with the specified description and due date / time.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description of the {@code Deadline} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"     * @param due         represents the due date / time of the {@code Deadline} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    public Deadline(String description, LocalDateTime due) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        super(description);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        this.due \u003d due;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"     * Returns the due date / time of the {@code Deadline} task as a LocalDateTime object.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    public LocalDateTime getDue() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        return due;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"     * Returns the formatted due date / time as a String","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    public String getFormattedDue() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        return DateTimeParser.formatDateTime(due);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"     * Returns a String representation of the {@code Deadline} task object.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"     * The format includes the task type (Deadline), description, completion status, and due date / time.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        return OPEN_SQUARE_BRACKET + TaskType.DEADLINE + CLOSE_SQUARE_BRACKET + super.toString() + SPACE +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"            OPEN_ROUND_BRACKET + Constants.BY + Constants.COLON + SPACE + getFormattedDue() + CLOSE_ROUND_BRACKET;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"     * Encodes the {@code Deadline} task into a String format that is suitable for storage.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"     * The format includes the task type (Deadline), completion status, description, and due date / time.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"     * @return a String representation of the encoded {@code Deadline} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"    public String encodeTask() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"        // Construct the final encoded task without leading or trailing spaces","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"        return TaskType.DEADLINE + super.encodeTask() + SEPARATOR + getFormattedDue();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"     * Checks if the task is due on a specified date.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"     * @param date the date to check against.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"     * @return true if the task is due on the specified date, false otherwise.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"    // https://www.geeksforgeeks.org/compare-dates-in-java/","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"        LocalDate dueDate \u003d getDue().toLocalDate();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"        return dueDate !\u003d null \u0026\u0026 dueDate.isEqual(date);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"ameliadevs":91}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * Extends from the Task class. It encapsulates the task description,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * completion status, start date and time, and end date and time.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" * Events are tasks that occur over a period of time,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":" * starting at a specific date and time and ending at a specific date and time.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" * e.g., (a) team project meeting 2/10/2019 2-4pm (b) orientation week 4/10/2019 to 11/10/2019","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"     * Constructs an {@code Event} task with the specified description,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     * completion status, start date and time, and end date and time","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"     * The {@code Event} task is initially marked as not done.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"     * @param description   represents the description of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     * @param isDone        represents the completion status of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * @param startDateTime represents the start date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     * @param endDateTime   represents the end date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    public Event(String description, boolean isDone, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     * Constructs an {@code Event} task with the specified description, start date and time, and end date and time.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"     * @param description   represents the description of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"     * @param startDateTime represents the start date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"     * @param endDateTime   represents the end date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        super(description);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"     * Returns the start date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"        return startDateTime;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"     * Returns the formatted start date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"     * The format is determined by the {@link DateTimeParser#formatDateTime(LocalDateTime)} method.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    public String getFormattedStartDateTime() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        return DateTimeParser.formatDateTime(getStartDateTime());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"     * Retrieves the end date and time of the {@code Event} task.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"     * @return the end date and time as a {@code LocalDateTime} object.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"        return endDateTime;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"     * Returns the formatted end date and time of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"     * The format is determined by the {@link DateTimeParser#formatDateTime(LocalDateTime)} method.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"    public String getFormattedEndDateTime() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"        return DateTimeParser.formatDateTime(getEndDateTime());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"     * Returns a string representation of the {@code Event} task.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"     * This includes the task type (Event), completion status, description, start date and time, and end date and time.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"        return OPEN_SQUARE_BRACKET + TaskType.EVENT + CLOSE_SQUARE_BRACKET + super.toString() + SPACE +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"            OPEN_ROUND_BRACKET + Constants.FROM + COLON + SPACE + getFormattedStartDateTime() + SPACE +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"            Constants.TO + COLON + SPACE + getFormattedEndDateTime() + CLOSE_ROUND_BRACKET;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"     * Encodes the {@code Event} task into a string for storage, i.e. writing to the tasks file.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"     * @return encoded string representation of the {@code Event} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"    public String encodeTask() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"        return TaskType.EVENT + super.encodeTask() + SEPARATOR +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"            getFormattedStartDateTime() + SEPARATOR + getFormattedEndDateTime();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"     * Checks if the {@code Event} task occurs on a specified date","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"     * The Event is considered to occur on a specific date if its","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"     * start date and time or end date and time matches the specified date.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"     * @param date represents the date to check against.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"     * @return true if the {@code Event} task occurs on a specific date; false otherwise.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"        boolean isStartDateOnDate \u003d getStartDateTime().toLocalDate().isEqual(date);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"        boolean isEndDateOnDate \u003d getEndDateTime().toLocalDate().isEqual(date);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"        return isStartDateOnDate || isEndDateOnDate;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"ameliadevs":120}},{"path":"src/main/java/task/FixedDuration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" * Represents a task with a fixed duration.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * Extends from the {@link Task} class and includes a duration attribute","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * that specifies how long the task is expected to take.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"public class FixedDuration extends Task {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    private final double duration;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    private static final String HOURS \u003d Constants.HOURS;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a FixedDuration task with the specified description, completion status, and duration.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents a brief description of the task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"     * @param isDone      indicates whether the task is completed.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     * @param duration    represents the amount of time that the task requires, in hours.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    public FixedDuration(String description, boolean isDone, double duration) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        super(description, isDone);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a FixedDuration task with the specified description and duration.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents a brief description of the task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"     * @param duration    represents the amount of time that the task requires, in hours.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    public FixedDuration(String description, double duration) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        super(description);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"     * Returns the duration of the task in hours.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    public double getDuration() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        return duration;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"     * Returns a string representation of the FixedDuration task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"     * The string includes the task type (FD), description, completion status, and duration.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        return OPEN_SQUARE_BRACKET + TaskType.FIXED_DURATION + CLOSE_SQUARE_BRACKET +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"            super.toString() + SPACE + OPEN_ROUND_BRACKET + Constants.DURATION + COLON +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"            SPACE + getDuration() + SPACE + HOURS + CLOSE_ROUND_BRACKET;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"     * Encodes the FixedDuration task into a string format suitable for storage.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"     * The encoded string includes the task type, description, completion status, and duration.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"     * @return a string encoding of the FixedDuration task","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"    public String encodeTask() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"        return TaskType.FIXED_DURATION + super.encodeTask() + SEPARATOR + getDuration() + SPACE + HOURS;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"     * Determines whether the task is scheduled for a specific date.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"     * For FixedDuration tasks, this method always returns false as they do not have a specific date.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"     * @param date represents the date to check against.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"     * @return false, indicating that the task is not scheduled for any specific date.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"        return false;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":83}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * Represents the base class for all tasks. ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * Subclasses like Todo, Deadline, Event, and Fixed Duration will extend from this abstract class.","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" * The Task class contains a description and completion status, which is common to all tasks.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    protected String description;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    // Aliases from Constants","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    protected static final String SPACE \u003d Constants.SPACE;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    protected static final String SEPARATOR \u003d Constants.ENCODE_TASK_SEPARATOR;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    protected static final String COLON \u003d Constants.COLON;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    protected static final String OPEN_SQUARE_BRACKET \u003d Constants.OPEN_SQUARE_BRACKET;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    protected static final String CLOSE_SQUARE_BRACKET \u003d Constants.CLOSE_SQUARE_BRACKET;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    protected static final String OPEN_ROUND_BRACKET \u003d Constants.OPEN_ROUND_BRACKET;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    protected static final String CLOSE_ROUND_BRACKET \u003d Constants.CLOSE_ROUND_BRACKET;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a Task with the specified description and completion status.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description of the {@code Task}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     * @param isDone      represents the completion status of the {@code Task}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    public Task(String description) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     * Initializes the task with empty string description and set the task to be not done. Default constructor.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    public Task() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"        description \u003d Constants.EMPTY_STRING;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"     * Returns the description of the {@code Task}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        return description;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"     * Retrieves the completion status of the {@code Task}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"     * @return true if the {@code Task} is done; false otherwise.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        return isDone;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"     * Returns an integer value that corresponds to the completion status of the {@code Task}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"     * @return 1 if the {@code Task} is done; 0 otherwise.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"    public int getIsDoneValue() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"        int doneValue \u003d Constants.ZERO;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"        if (getIsDone()) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"            doneValue \u003d Constants.ONE;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"        return doneValue;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"     * Sets the isDone field (completion status of the {@code Task}).","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"     * @param isDone represents the new completion status of the {@code Task}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"     * Returns a string representation of the completion status (status icon) of the {@code Task}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"     * @return \"X\" if the {@code Task} is done; otherwise it returns a space.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"        if (getIsDone()) {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"            return Constants.X;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"            return Constants.SPACE;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"     * Returns a string representation of the {@code Task}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"     * This includes its status icon and the description of the {@code Task}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"     * @return a string representation of the {@code Task} object.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"    // Equivalent to \u0027decoded\u0027 task, i.e. tasks present in TaskList","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"        return OPEN_SQUARE_BRACKET + getStatusIcon() + CLOSE_SQUARE_BRACKET + SPACE + getDescription();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"     * Generates a formatted string to encode the task for writing / saving / storing to the tasks file.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"     * The encoded string includes the integer representation of ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"     * the completion status and the description of the {@code Task}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"     * @return encoded string representation of the {@code Task}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"    public String encodeTask() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"        String separator \u003d Constants.ENCODE_TASK_SEPARATOR;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"        return separator + getIsDoneValue() + separator + getDescription().trim();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"     * Determines if the task occurs on a specified date.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"     * Abstract method to be implemented by the subclasses.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"     * @param date represents the date to check against.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"     * @return true if the task occurs on a specified date; false otherwise.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"    public abstract boolean isOnDate(LocalDate date);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"    public LocalDateTime getTaskDateTime() {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"        Task task \u003d this;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"            return ((Deadline) task).getDue();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"            return ((Event) task).getStartDateTime();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ameliadevs"},"content":"        return null;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-14","isFullCredit":false}],"authorContributionMap":{"ameliadevs":144}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import java.util.List;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" * It provides methods to manage, manipulate, and do operations on the tasks list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":" * Functionalities include adding, deleting, marking, unmarking and retrieving tasks in the list.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":" * It can also check tasks on specific dates and retrieve the size of the {@code TaskList}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"public class TaskList {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    // https://stackoverflow.com/questions/2279030/type-list-vs-type-arraylist-in-java","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    private static final String SPACE \u003d Constants.SPACE;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"     * Initializes / constructs the {@code TaskList} as an empty list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    public TaskList() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"     * Returns the list of tasks in the {@code TaskList}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        return taskList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     * Retrieves the size of the {@code TaskList}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     * @return the total number of tasks in the {@code TaskList}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    public int getSize() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"        return getTaskList().size();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"     * Checks if the {@code TaskList} is empty.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"     * @return true if the {@code TaskList} is empty; false otherwise.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        return getTaskList().isEmpty();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        return getTaskList().contains(task);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"     * Retrieves the task at a specific index in the {@code TaskList}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"     * @param index represents the index of the task to retrieve.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"        return getTaskList().get(index);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"     * Adds a new task to the {@code TaskList}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"     * @param task represents the task to be added. If it is null, the task will not be added.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"    // Adds a new task","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"            getTaskList().add(task);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"     * Removes a task from the list.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"     * @param task represents the task to be removed from the {@code TaskList}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"     * @return true if the task is removed successfully; false otherwise.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"    public boolean removeTask(Task task) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"        if (getTaskList().contains(task)) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"            return getTaskList().remove(task);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"            return false;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"    } ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"     * Makes a task at a specified index as done. ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"     * Returns false if the task has already been marked done before this method is called.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"     * @param taskToMark represents the task to mark.","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"     * @return true if the task is marked successfully; false otherwise.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"    public boolean markTask(Task taskToMark) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"        if (taskToMark.getIsDone()) {       // Task has already been marked as done","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"            return false;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"            taskToMark.setDone(true);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"            return true;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"     * Marks a task at a specified index as not done.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"     * Returns false if the task has already been marked as not done before this method is called.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"     * @param taskToUnmark represents the task to unmark.","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"     * @return true if the task is unmarked successfully; false otherwise.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"    public boolean unmarkTask(Task taskToUnmark) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"        if (!taskToUnmark.getIsDone()) {        // Task has already been marked as not done","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"            return false;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"            taskToUnmark.setDone(false);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"            return true;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"    // Common helper function for execute method of MarkCommand, UnmarkCommand, and DeleteCommand","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"    public Task getTaskForOperation(int taskNumber) throws CommandException {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"        if (isEmpty()) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(Messages.MESSAGE_EMPTY_TASKLIST);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"        Task task;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ameliadevs"},"content":"        String MESSAGE_NONEXISTENT_TASK \u003d Messages.MESSAGE_NONEXISTENT_TASK_PRE + SPACE +","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ameliadevs"},"content":"            taskNumber + SPACE + Messages.MESSAGE_NONEXISTENT_TASK_POST;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ameliadevs"},"content":"        String MESSAGE_USAGE \u003d Messages.MESSAGE_ENTER_VALID_TASK_NUMBER + SPACE + getSize() + Constants.DOT;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ameliadevs"},"content":"        try {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ameliadevs"},"content":"            task \u003d getTask(taskNumber - 1);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ameliadevs"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(Messages.ERROR_TASK_NONEXISTENT, MESSAGE_NONEXISTENT_TASK, MESSAGE_USAGE);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ameliadevs"},"content":"        return task;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ameliadevs"},"content":"     * Returns the appropriate word for \"task\" based on the number of tasks in the {@code TaskList}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ameliadevs"},"content":"     * @return \"task\" if there is only one task in the {@code TaskList}; \"tasks\" if there are multiple.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ameliadevs"},"content":"    public String getTaskWord() {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ameliadevs"},"content":"        StringBuilder taskWordStringBuilder \u003d new StringBuilder(SPACE + Constants.TASK);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ameliadevs"},"content":"        if (getSize() !\u003d 1) {       // Only 1 is singular","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ameliadevs"},"content":"            taskWordStringBuilder.append(Constants.S);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ameliadevs"},"content":"        return taskWordStringBuilder.toString();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ameliadevs"},"content":"    public TaskList getScheduledTasks(LocalDate date) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ameliadevs"},"content":"        // Retrieve all tasks scheduled on the specified date","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ameliadevs"},"content":"        List\u003cTask\u003e tasksOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ameliadevs"},"content":"        // Add tasks that satisfy the date into the tasksOnDate list","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ameliadevs"},"content":"        for (Task task : getTaskList()) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ameliadevs"},"content":"            if (task.isOnDate(date)) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ameliadevs"},"content":"                tasksOnDate.add(task);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ameliadevs"},"content":"        // Sort the tasks by their LocalDateTime","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ameliadevs"},"content":"        // https://stackoverflow.com/questions/2784514/sort-arraylist-of-custom-objects-by-property","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ameliadevs"},"content":"        tasksOnDate.sort(new Comparator\u003cTask\u003e() {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ameliadevs"},"content":"            @Override","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ameliadevs"},"content":"            public int compare(Task taskA, Task taskB) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ameliadevs"},"content":"                LocalDateTime dateTimeA \u003d taskA.getTaskDateTime();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ameliadevs"},"content":"                LocalDateTime dateTimeB \u003d taskB.getTaskDateTime();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ameliadevs"},"content":"                // https://www.javatpoint.com/compare-time-in-java","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ameliadevs"},"content":"                // If dateTimeA.compareTo(dateTimeB) \u003e 0, then dateTimeA \u003e dateTimeB, i.e. dateTimeA is after dateTimeB","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ameliadevs"},"content":"                // Handle null values. Deadlines can have no time.","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ameliadevs"},"content":"                if (dateTimeA \u003d\u003d null \u0026\u0026 dateTimeB \u003d\u003d null) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ameliadevs"},"content":"                    return 0;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ameliadevs"},"content":"                } else if (dateTimeA \u003d\u003d null) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ameliadevs"},"content":"                    return 1;       // Put dateTimeA before dateTimeB","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ameliadevs"},"content":"                } else if (dateTimeB \u003d\u003d null) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ameliadevs"},"content":"                    return -1;      // Put dateTimeB after dateTimeA","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ameliadevs"},"content":"                }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ameliadevs"},"content":"                return dateTimeA.compareTo(dateTimeB);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ameliadevs"},"content":"        });","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ameliadevs"},"content":"        return new TaskList(tasksOnDate);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ameliadevs"},"content":"     * Retrieves all tasks that matches the specified description.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ameliadevs"},"content":"     * ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description to check against.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ameliadevs"},"content":"     * @return a list of tasks that has the same description as the specified one.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ameliadevs"},"content":"    public TaskList getAllTasksWithMatchingDescription(String description) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ameliadevs"},"content":"        TaskList tasksWithMatchingDescription \u003d new TaskList();","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ameliadevs"},"content":"        for (Task task : getTaskList()) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ameliadevs"},"content":"            String taskDescription \u003d task.getDescription();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ameliadevs"},"content":"            if (taskDescription.contains(description)) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ameliadevs"},"content":"                tasksWithMatchingDescription.addTask(task);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ameliadevs"},"content":"        return tasksWithMatchingDescription;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ameliadevs":224}},{"path":"src/main/java/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":" * Represents the different types of tasks that can be created.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":" * Each task has a corresponding code,","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" * i.e. TODO is represented by \"T\", DEADLINE is represented by \"D\",","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * EVENT is represented by \"E\" and FIXED_DURATION is represented by \"FD\".","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"public enum TaskType {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"    TODO(Constants.T),","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"    DEADLINE(Constants.D),","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    EVENT(Constants.E),","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    FIXED_DURATION(Constants.FD);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    private final String code;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"     * Constructs the {@code TaskType} enum.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a {@code TaskType} with the specified code.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     * @param code represents the string code that represents the {@code TaskType}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    TaskType(String code) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        this.code \u003d code;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * Returns the string code representing the {@code TaskType}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        return code;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     * Retrieves the corresponding {@code TaskType} based on the given string code.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"     * @param code represents the string code that corresponds to the {@code TaskType}, i.e. \"T\", \"D\", or \"E\".","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"     * @return the {@code TaskType} that is associated with the given code.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"     * @throws IllegalArgumentException if the given code does not match an existing {@code TaskType}.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    // Solution below adapted from https://stackoverflow.com/questions/604424/how-to-get-an-enum-value-from-a-string-value-in-java","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    public static TaskType getTaskType(String code) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        for (TaskType taskType : TaskType.values()) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"            if (taskType.code.equals(code)) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"                return taskType;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"        throw new IllegalArgumentException(\"No constant with text \" + code + \" found\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"     * Retrieves the valid types of task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"     * @return a String representation of the list of the types of tasks.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"    public static String getValidTaskType() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"        StringBuilder validTaskTypes \u003d new StringBuilder();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"        for (TaskType taskType : TaskType.values()) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"            validTaskTypes.append(Constants.BACKTICK).append(taskType.code)","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"                .append(Constants.BACKTICK).append(Constants.COMMA);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        if (!validTaskTypes.isEmpty()) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"            validTaskTypes.setLength(validTaskTypes.length() - 1);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"        return validTaskTypes.toString();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-28","isFullCredit":false}],"authorContributionMap":{"ameliadevs":70}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":" * Represents a {@code Todo} task, which is a subclass of {@link Task}, i.e. a specific type of {@link Task}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":" * Todos are tasks without any date/time attached to it, e.g., visit new theme park.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":" * A {@code Todo} task has a description and completion status.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a {@code Todo} task with the specified description.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description of the {@code Todo} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        super(description);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a Todo task with the specified description and completion status.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"     * @param description represents the description of the {@code Todo} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"     * @param isDone      represents the completion status of the {@code Todo} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"     * Returns a string representation of the {@code Todo} task.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"     * This includes its task type (Todo), which is represented by \"T\", and the description of the {@code Todo} task.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"     * @return a string representation of the {@code Todo} task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    public String toString() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        return Constants.OPEN_SQUARE_BRACKET + TaskType.TODO + Constants.CLOSE_SQUARE_BRACKET + super.toString();","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     * Generates a formatted string to encode the {@code Todo} task suitable for {@link storage.Storage}.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     * The encoded string includes the task type, completion status, and description of the {@code Todo} task.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"     * @return the encoded string representation of the {@code Todo} task,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    public String encodeTask() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        return TaskType.TODO + super.encodeTask();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"     * Checks if the {@code Todo} task occurs on a specified date.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"     * For a {@code Todo} task, this method must always return false because it does not have any date attached to it.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"     * @param date represents the date to check against.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"     * @return false as {@code Todo} tasks do not have a specific date.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        return false;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"ameliadevs":68}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package ui;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import java.util.List;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"/**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":" * Represents the user interface that is responsible for handling interactions with the user.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":" * It handles reading the user input and displaying messages to the user.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":" */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"public class Ui {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    private final Scanner in;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"     * Constructs a new Ui instance with a Scanner for reading user input.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    public Ui() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"     * Formats a string to create a specified number of leading spaces.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"     * @param numberOfSpaces the number of spaces to format.","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"     * @return a string containing the specified number of leading spaces.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    // Solution below adapted from https://stackoverflow.com/questions/1073787/print-spaces-with-string-format","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    // https://stackoverflow.com/questions/69576641/why-would-you-use-a-stringbuilder-method-over-a-string-in-java","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    public String formatSpace(int numberOfSpaces) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        String format \u003d Constants.PERCENT + numberOfSpaces + Constants.S;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        return String.format(format, Constants.EMPTY_STRING);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"     * Determines the appropriate number of spaces to insert before text or lines.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"     * This is dependent on the context of the output, i.e. whether the space is for a horizontal line or for tasks.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"     * It is used to align the output in the command-line.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"     * @param isLine indicates whether the space is to come before a horizontal line.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"     * @param isTask indicates whether the space is to come before a a line of text representing a task.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"     * @return a string containing the appropriate number of leading spaces.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    public String getSpace(boolean isLine, boolean isTask) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        // If space is to come before a horizontal line, use \"    \"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        if (isLine \u0026\u0026 !isTask) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"            return formatSpace(Constants.FOUR);      // Space before horizontal line","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        } else if (!isLine \u0026\u0026 isTask) {        // If space is to come before a line of text, use \"     \"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"            // For printing task","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"            return formatSpace(Constants.TWO);      // Space before task text","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        } else if (!isLine) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"            return formatSpace(Constants.FIVE);      // General space","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"            return Constants.EMPTY_STRING;      // No space","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"     * Creates a horizontal line with the appropriate number of leading spaces before the horizontal line.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"     * @return a formatted string representing the horizontal line with leading spaces.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"    public String getLine() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"        String space \u003d getSpace(true, false);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"        // Inspired by https://www.baeldung.com/java-string-of-repeated-characters","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"        String line \u003d Constants.UNDERSCORE.repeat(Constants.SIXTY);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"        return space + line;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"     * Prints a horizontal line, followed by the message(s), and ends with another horizontal line.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"     * There will be spaces before each line.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"     * @param \u003cT\u003e      represents the type of the messages.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"     * @param messages represents the list of message(s) to print. It can be an array or ArrayList.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"    // Solution below inspired by https://stackoverflow.com/questions/2914695/how-can-you-write-a-function-that-accepts-multiple-types","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"    public \u003cT\u003e void printMessage(T messages) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(\"In printMessage\");","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"        String line \u003d getLine();        // includes space before line","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"        String space \u003d getSpace(false, false);          // formatSpace(5)","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"        // StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder().append(line).append(Constants.NEW_LINE);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"        // System.out.println(messageList.getClass());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"        // Checks if the messageList is an array. Iterates and appends each item to the StringBuilder","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"        // https://stackoverflow.com/questions/40899820/arrays-check-if-object-is-an-array","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"        if (messages.getClass().isArray()) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"            for (int i \u003d 0; i \u003c Array.getLength(messages); i++) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"                stringBuilder.append(space).append(Array.get(messages, i)).append(Constants.NEW_LINE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"        } else if (messages instanceof ArrayList\u003c?\u003e) {        // Checks if the messageList is an ArrayList. Iterates and appends each item to the StringBuilder. Reference: https://stackoverflow.com/questions/14674027/checking-if-object-is-instance-of-listobject","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"            for (int i \u003d 0; i \u003c ((ArrayList\u003c?\u003e) messages).size(); i++) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"                stringBuilder.append(space).append(((ArrayList\u003c?\u003e) messages).get(i)).append(Constants.NEW_LINE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"        // Append the closing line after the message","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"        String text \u003d stringBuilder.append(line).toString();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"        // Print out the final formatted message to the command line","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"        System.out.println(text);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"     * Prints a greeting message to the command-line (when the application starts).","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"        String[] messages \u003d {Messages.MESSAGE_WELCOME};","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"        printMessage(messages);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"     * Prints an exit message to the command-line to indicate that the chatbot is exiting.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"    public void showBye() {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"        String[] messages \u003d {Messages.MESSAGE_GOODBYE};","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"        printMessage(messages);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"     * Reads a line of input from the user and trims any leading or trailing whitespace.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"     * It ensures that the input is not empty.","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"     * When the user provides an empty input, it will display an error message,","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"     * requesting for the user to enter a non-empty input.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"     * It will continue to prompt the user until a valid input (non-empty string) is received.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"     * @return the trimmed user input (without any leading whitespaces).","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"     * @throws CommandException when the user inputs an invalid string.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"    // https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/ui/TextUi.java#L80","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ameliadevs"},"content":"    public String readInput() throws CommandException {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ameliadevs"},"content":"        String userInput;","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ameliadevs"},"content":"        // Keep asking for input until a non-empty string is entered","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ameliadevs"},"content":"        userInput \u003d in.nextLine().trim(); // Read and trim the input","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ameliadevs"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ameliadevs"},"content":"            throw new CommandException(","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ameliadevs"},"content":"                Messages.ERROR_EMPTY_INPUT,","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ameliadevs"},"content":"                Messages.VALID_COMMANDS","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ameliadevs"},"content":"            );","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ameliadevs"},"content":"        return userInput;       // Return the valid non-empty user input","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ameliadevs"},"content":"    /**","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ameliadevs"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ameliadevs"},"content":"     *","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ameliadevs"},"content":"     * @param errorMessage represents a list of error messages to display.","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ameliadevs"},"content":"     */","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ameliadevs"},"content":"    public void showError(ArrayList\u003cString\u003e errorMessage) {","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ameliadevs"},"content":"        printMessage(errorMessage);","lastModifiedDate":"2024-11-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ameliadevs"},"content":"    // Print empty list message when given task list is empty","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ameliadevs"},"content":"    public void printTaskListMessage(TaskList taskList, String emptyListMessage, String successMessage) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ameliadevs"},"content":"        // Check if there are no tasks in the given task list. The given task list is already filtered for the required criteria","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ameliadevs"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ameliadevs"},"content":"            String[] message \u003d {emptyListMessage};","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ameliadevs"},"content":"            printMessage(message);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ameliadevs"},"content":"            // Prepare the message to display to the user","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ameliadevs"},"content":"            // Iterate through the task list and add tasks scheduled on the specified date","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ameliadevs"},"content":"            ArrayList\u003cString\u003e messages \u003d getTaskMessages(successMessage, taskList);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ameliadevs"},"content":"            // Print the message list containing tasks scheduled on the specified date","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ameliadevs"},"content":"            printMessage(messages);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ameliadevs"},"content":"    public ArrayList\u003cString\u003e getTaskMessages(String preMessage, TaskList taskList) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ameliadevs"},"content":"        ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e(List.of(preMessage));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ameliadevs"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ameliadevs"},"content":"            Task current \u003d taskList.getTask(i);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ameliadevs"},"content":"            String index \u003d Integer.toString(i + 1);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ameliadevs"},"content":"            String line \u003d index + Constants.DOT_SPACE + current;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ameliadevs"},"content":"            messages.add(line);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ameliadevs"},"content":"        return messages;","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-10-28","isFullCredit":false}],"authorContributionMap":{"ameliadevs":189}},{"path":"src/test/java/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    private DeleteCommand deleteCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    private Ui ui;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    private Storage storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    public void setUp() throws StorageOperationException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_validTaskNumber_createsDeleteCommand() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        deleteCommand \u003d new DeleteCommand(1);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(deleteCommand);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(1, deleteCommand.getTaskNumber());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    public void execute_invalidTaskNumber_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        deleteCommand \u003d new DeleteCommand(99999);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        // Referenced from https://howtodoinjava.com/junit5/expected-exception-example/","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e deleteCommand.execute(taskList, ui, storage), \"CommandException expected\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"The task list is empty. Please add a task first.\", exception.getMessage());","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"//        assertEquals(Messages.ERROR_TASK_NONEXISTENT, exception.getMessage());","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":49}},{"path":"src/test/java/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"import task.Todo;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"import util.TypicalTasks;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    private MarkCommand markCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    private Ui ui;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    private Storage storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    private TypicalTasks typicalTasks;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public void setUp() throws StorageOperationException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        typicalTasks \u003d new TypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_validTaskNumber_createsMarkCommand() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        markCommand \u003d new MarkCommand(1);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(markCommand);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(1, markCommand.getTaskNumber());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    public TaskList initTypicalTasks() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        return typicalTasks.initDefaultTaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    public void execute_emptyTaskList_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"        markCommand \u003d new MarkCommand(0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e markCommand.execute(taskList, ui, storage), \"CommandException expected\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.MESSAGE_EMPTY_TASKLIST, exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    public void execute_invalidTaskNumber_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d initTypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        markCommand \u003d new MarkCommand(99999);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"        // Referenced from https://howtodoinjava.com/junit5/expected-exception-example/","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e markCommand.execute(taskList, ui, storage), \"CommandException expected\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_TASK_NONEXISTENT, exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"    public void execute_taskAlreadyMarked_showsAlreadyMarkedMessage() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d initTypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"        Todo sampleTodo \u003d typicalTasks.todo_doHomework;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(sampleTodo.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(taskList.markTask(sampleTodo));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"//        assertFalse(taskList.markTask(0));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"    public void execute_taskSuccessfullyMarked_showsSuccessMessage() ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"        throws CommandException, StorageOperationException {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d initTypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"        Todo sampleTodo \u003d typicalTasks.todo_buyGroceries;       // Index 1","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(sampleTodo.getIsDone(), \"The task should initially be marked as not done\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"        // Task number is 2 because taskNumber \u003d index of task + 1. User doesn\u0027t know that the list is 0-based index","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"        markCommand \u003d new MarkCommand(2);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"        markCommand.execute(taskList, ui, storage);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(sampleTodo.getIsDone(), \"After executing the mark command, the task should be marked as done\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":92}},{"path":"src/test/java/commands/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"import storage.Storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"import task.Todo;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"import ui.Ui;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"import util.TypicalTasks;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    private UnmarkCommand unmarkCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    private Ui ui;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    private Storage storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    private TypicalTasks typicalTasks;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public void setUp() throws StorageOperationException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        typicalTasks \u003d new TypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_validTaskNumber_createsUnmarkCommand() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        unmarkCommand \u003d new UnmarkCommand(1);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(unmarkCommand);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(1, unmarkCommand.getTaskNumber());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    public TaskList initTypicalTasks() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        return typicalTasks.initDefaultTaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    public void execute_emptyTaskList_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"        unmarkCommand \u003d new UnmarkCommand(0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e unmarkCommand.execute(taskList, ui, storage), \"CommandException expected\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.MESSAGE_EMPTY_TASKLIST, exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    public void execute_invalidTaskNumber_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d initTypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        unmarkCommand \u003d new UnmarkCommand(99999);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"        // Referenced from https://howtodoinjava.com/junit5/expected-exception-example/","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e unmarkCommand.execute(taskList, ui, storage), \"CommandException expected\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_TASK_NONEXISTENT, exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"    public void execute_taskAlreadyUnmarked_doesNotChangeIsDone() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d initTypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"        Todo sampleTodo \u003d typicalTasks.todo_buyGroceries;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(sampleTodo.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(taskList.unmarkTask(sampleTodo));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    public void execute_taskSuccessfullyMarked_showsSuccessMessage() ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"        throws CommandException, StorageOperationException {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d initTypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"        Todo sampleTodo \u003d typicalTasks.todo_doHomework;       // Index 1","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(sampleTodo.getIsDone(), \"The task should initially be marked as done\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"        // Task number is 2 because taskNumber \u003d index of task + 1. User doesn\u0027t know that the list is 0-based index","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"        unmarkCommand \u003d new UnmarkCommand(1);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"        unmarkCommand.execute(taskList, ui, storage);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(sampleTodo.getIsDone(), ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"            \"After executing the unmark command, the task should be marked as not done\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":92}},{"path":"src/test/java/commands/add/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands.add;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import task.Deadline;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    private DeadlineCommand deadlineCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    private final String TEST_DESCRIPTION \u003d \"This is a sample description of a Deadline task.\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    private final LocalDateTime TEST_DUE \u003d LocalDateTime.of(2024, 3, 16, 12, 0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    // Initializes a DeadlineCommand object with a valid description and due date before each test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    public void init() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"        deadlineCommand \u003d new DeadlineCommand(TEST_DESCRIPTION, TEST_DUE);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    // Tests that the constructor correctly initializes the DeadlineCommand with valid input","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_validInput_createDeadlineCommand() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_DESCRIPTION, deadlineCommand.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_DUE, deadlineCommand.getDueDate());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(deadlineCommand);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    // Tests that the createTask() method correctly creates a Deadline task with the given description and due date","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    public void createTask_validInput_createDeadlineTask() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"        Deadline deadline \u003d new Deadline(TEST_DESCRIPTION, TEST_DUE);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(deadline);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(Deadline.class, deadline);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_DESCRIPTION, deadline.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_DUE, deadline.getDue());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(DateTimeParser.formatDateTime(TEST_DUE), deadline.getFormattedDue());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":45}},{"path":"src/test/java/commands/add/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands.add;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import task.Event;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"public class EventCommandTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    private EventCommand eventCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    private final String TEST_DESCRIPTION \u003d \"This is a sample description of an Event task.\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    private final LocalDateTime TEST_STARTDATETIME \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime.of(2024, 4, 16, 12, 0);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    private final LocalDateTime TEST_ENDDATETIME \u003d LocalDateTime.of(2024, 5, 16, 12, 0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    // Initializes an EventCommand with valid description, start date and time, and end date and time","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    public void init() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        eventCommand \u003d new EventCommand(TEST_DESCRIPTION, TEST_STARTDATETIME, TEST_ENDDATETIME);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    // Tests that the constructor correctly initializes the EventCommand with valid parameters","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_validInput_createsEventCommand() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(eventCommand);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_DESCRIPTION, eventCommand.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_STARTDATETIME, eventCommand.getStartDateTime());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_ENDDATETIME, eventCommand.getEndDateTime());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    // Tests that the createTask() method correctly creates an Event task with the given description, start date and time, and end date and time","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    public void createTask_validInput_createsEventCommand() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        Event event \u003d new Event(TEST_DESCRIPTION, TEST_STARTDATETIME, TEST_ENDDATETIME);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(event);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(Event.class, event);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_DESCRIPTION, event.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_STARTDATETIME, event.getStartDateTime());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_ENDDATETIME, event.getEndDateTime());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(DateTimeParser.formatDateTime(TEST_STARTDATETIME), event.getFormattedStartDateTime());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(DateTimeParser.formatDateTime(TEST_ENDDATETIME), event.getFormattedEndDateTime());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":52}},{"path":"src/test/java/commands/add/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package commands.add;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import task.Todo;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"public class TodoCommandTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    private TodoCommand todoCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    private final String TEST_DESCRIPTION \u003d \"This is a sample description of a Todo task.\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    // Initialize with a valid description before each test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"        todoCommand \u003d new TodoCommand(TEST_DESCRIPTION);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    // Tests that the constructor correctly initializes the TodoCommand with a valid description.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_validDescription_createTodoCommand() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(todoCommand);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"        // Asset that the description is set correctly","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TEST_DESCRIPTION, todoCommand.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    // Tests that the createTask() method correctly creates a Todo task with the given description","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    public void createTodoTask_validDescription() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"        Task task \u003d todoCommand.createTask();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        // Asserts that the task is not null","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(task);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        // Asserts that the task must be a Todo task","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(Todo.class, task);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        // Asset that the description is set correctly","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        constructor_validDescription_createTodoCommand();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    // Tests that creating a task with an empty description does not throw an exception and that the task is created with an empty description","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    public void createTask_emptyDescription_createsTodoTaskWithEmptyDescription() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        todoCommand \u003d new TodoCommand(Constants.EMPTY_STRING);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        Task task \u003d todoCommand.createTask();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(task);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(Todo.class, task);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Constants.EMPTY_STRING, task.getDescription());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":59}},{"path":"src/test/java/parser/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package parser;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    public void parseOutputDateTime_validInput_returnsLocalDateTime() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 10, 1, 18, 0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime actual \u003d DateTimeParser.parseOutputDateTime(\"Oct 01 2023 1800\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    public void parseOutputDateTime_invalidFormat_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        CommandException commandException \u003d assertThrows(CommandException.class, () -\u003e DateTimeParser.parseOutputDateTime(\"01-10-2023 1800\"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_DATETIME_FORMAT, commandException.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public void parseInputDeadlineDateTime_validInput_returnsLocalDateTime() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 10, 1, 0, 0); // Default time is midnight","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime actual \u003d DateTimeParser.parseInputDeadlineDateTime(\"2023-10-01\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    public void parseInputDeadlineDateTime_validInputWithTime_returnsLocalDateTime() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 10, 1, 18, 0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime actual \u003d DateTimeParser.parseInputDeadlineDateTime(\"2023-10-01 1800\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    public void parseInputDeadlineDateTime_invalidDateFormat_throwsCommandException() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        CommandException commandException \u003d assertThrows(CommandException.class, () -\u003e DateTimeParser.parseInputDeadlineDateTime(\"2023/10/01\"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_DATETIME_FORMAT, commandException.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    public void parseInputEventDateTime_validInput_returnsLocalDateTime() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 10, 1, 18, 0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime actual \u003d DateTimeParser.parseInputEventDateTime(\"2023-10-01 1800\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    public void parseInputEventDateTime_invalidFormat_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        CommandException commandException \u003d assertThrows(CommandException.class, () -\u003e DateTimeParser.parseInputEventDateTime(\"01-10-2023 1800\"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_DATETIME_FORMAT, commandException.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    public void parseInputShowDate_validInput_returnsLocalDate() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        LocalDate expected \u003d LocalDate.of(2023, 10, 1);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        LocalDate actual \u003d DateTimeParser.parseInputShowDate(\"2023-10-01\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"    public void parseInputShowDate_invalidFormat_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"        CommandException commandException \u003d assertThrows(CommandException.class, () -\u003e DateTimeParser.parseInputShowDate(\"01-10-2023\"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_DATETIME_FORMAT, commandException.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"    public void formatDateTime_validInput_returnsFormattedString() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 10, 1, 18, 0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"        String expected \u003d \"Oct 01 2023 1800\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"        String actual \u003d DateTimeParser.formatDateTime(dateTime);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":83}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package parser;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import commands.Command;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import commands.MarkCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import commands.ShowCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import commands.add.DeadlineCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import commands.add.EventCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import commands.add.TodoCommand;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"public class ParserTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    public void parse_validTodoCommand_createsTodoCommand() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"        Command command \u003d Parser.parse(\"todo take a walk\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(TodoCommand.class, command);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"take a walk\", ((TodoCommand) command).getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public void parse_validDeadlineCommand_createsDeadlineCommand() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        Command command \u003d Parser.parse(\"deadline email clients for feedback /by 2023-10-01\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(DeadlineCommand.class, command);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"email clients for feedback\", ((DeadlineCommand) command).getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"2023-10-01\", ((DeadlineCommand) command).getDueDate().toLocalDate().toString());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    public void parse_validEventCommand_createsEventCommand() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        Command command \u003d Parser.parse(\"event baby shower /from 2023-10-01 1000 /to 2023-10-01 1200\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(EventCommand.class, command);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"baby shower\", ((EventCommand) command).getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"2023-10-01T10:00\", ((EventCommand) command).getStartDateTime().toString());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"2023-10-01T12:00\", ((EventCommand) command).getEndDateTime().toString());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    public void parse_validMarkCommand_createsMarkCommand() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"        Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(MarkCommand.class, command);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(1, ((MarkCommand) command).getTaskNumber());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    public void parse_validUnmarkCommand_createsUnmarkCommand() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        Command command \u003d Parser.parse(\"unmark 2\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(UnmarkCommand.class, command);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(2, ((UnmarkCommand) command).getTaskNumber());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    public void parse_validDeleteCommand_createsDeleteCommand() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        Command command \u003d Parser.parse(\"delete 3\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(DeleteCommand.class, command);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(3, ((DeleteCommand) command).getTaskNumber());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"    public void parse_invalidCommand_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e Parser.parse(\"invalidCommand\"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_COMMAND, exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"    public void parse_invalidTodoCommandFormat_throwsCommandException() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_COMMAND_FORMAT + \"todo.\", exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"    public void parse_invalidDeadlineCommandFormat_throwsCommandException() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e Parser.parse(\"deadline \"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_COMMAND_FORMAT + \"deadline.\", exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"    public void parse_invalidEventCommandFormat_throwsCommandException() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e Parser.parse(\"event \"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_COMMAND_FORMAT + \"event.\", exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"    public void parse_invalidDeadlineFormat_invalidDateFormat_throwsCommandException() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e Parser.parse(\"deadline email clients for feedback /by invalidDate\"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_DATETIME_FORMAT, exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"    public void parse_eventEndBeforeStart_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e Parser.parse(\"event baby shower /from 2023-10-01 12:00 /to 2023-10-01 10:00\"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_DATETIME_FORMAT, exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"    public void parse_validShowCommand_createsShowCommand() throws CommandException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"        Command command \u003d Parser.parse(\"show 2023-10-01\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(ShowCommand.class, command);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"2023-10-01\", ((ShowCommand) command).getDate().toString());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"    public void parse_invalidShowDate_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e Parser.parse(\"show invalidDate\"));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_DATETIME_FORMAT, exception.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"    public void parse_invalidTaskNumber_throwsCommandException(String command) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"        // Test Case: Invalid Task Number Format (not a number)","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"        CommandException commandException \u003d assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"            Parser.parse(command + \" abc\"); // Invalid task number format","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"        });","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"        // Check that the exception message matches the expected error message","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(Messages.ERROR_INVALID_COMMAND_FORMAT + command, commandException.getMessage());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"    public void parse_markInvalidTaskNumber_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"        parse_invalidTaskNumber_throwsCommandException(\"mark\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"    public void parse_unmarkInvalidTaskNumber_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"        parse_invalidTaskNumber_throwsCommandException(\"unmark\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"    public void parse_deleteInvalidTaskNumber_throwsCommandException() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"        parse_invalidTaskNumber_throwsCommandException(\"delete\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":140}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import java.io.File;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import java.util.List;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"import exception.CommandException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"import exception.FileContentException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"import exception.StorageOperationException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"import exception.TaskListDecoderException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"import util.TypicalTasks;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"public class StorageTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    private final String FILE_STORAGE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    private Storage storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    public void setUp() throws StorageOperationException {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        // Set the system property for testing","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"        System.setProperty(\"storage.file\", FILE_STORAGE_PATH);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    // https://howtodoinjava.com/junit5/after-each-annotation-example/","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    // https://stackoverflow.com/questions/27599965/java-better-way-to-delete-file-if-exists","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    @AfterEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    public void cleanUp() throws IOException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"        // Clean up the test files and directories","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        File dataFolder \u003d Paths.get(FILE_STORAGE_PATH).getParent().toFile();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        deleteDir(dataFolder);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    // Solution below adapted from https://stackoverflow.com/questions/12835285/create-directory-if-exists-delete-directory-and-its-content-and-create-new-one","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    // Recursively delete the files in the folder","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    public boolean deleteDir(File dataFolder) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        if (dataFolder.isDirectory()) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"            String[] dataFiles \u003d dataFolder.list();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"            for (String dataFile : dataFiles) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"                boolean isSuccess \u003d deleteDir(new File(dataFolder, dataFile));","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"                if (!isSuccess) {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"                    return false;","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"                }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"        return dataFolder.delete();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_checkDataFileExists_tasksFileExists() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"        File tasksFile \u003d storage.getTasksFile();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(tasksFile.exists(), \"Tasks file should exist after the storage has been initialized\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_checkDataFolderExists_dataFolderExists() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"        // https://www.geeksforgeeks.org/get-the-files-parent-directory-in-java/","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"        File dataFolder \u003d storage.getTasksFile().getParentFile();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(dataFolder.exists(), \"Data folder should exist after the storage has been initialized\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"    public void checkDataFolderExists_createDataFolder() throws IOException, StorageOperationException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"        File dataFolder \u003d storage.getTasksFile().getParentFile();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"        // Delete the data folder if it exists","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"        if (dataFolder.exists()) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"            // Delete all files in the directory","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"            File[] files \u003d dataFolder.listFiles();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"            assertNotNull(files);","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"            for (File file : files) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"                Files.delete(file.toPath());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"            }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"            // Create the data folder if it doesn\u0027t exist","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"            dataFolder.mkdirs();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"        storage.checkDataFolderExists();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(dataFolder.exists(), ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"            \"Data folder should exist after the execution of the checkDataFolderExists method\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"    public void checkTaskFileExists_createsTaskFile() throws IOException, StorageOperationException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"        // Ensure the task file does not exist","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"        File tasksFile \u003d storage.getTasksFile();","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"        Files.deleteIfExists(tasksFile.toPath());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"        storage.checkTaskFileExists();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(tasksFile.exists(), \"Task file should be created\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"    public void getTasksFilePath_returnsCorrectPath() {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"        Path expectedPath \u003d Paths.get(FILE_STORAGE_PATH);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedPath, storage.getTasksFilePath(), \"File path should match the expected path\");","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"    public void getFile_returnsCorrectTasksFile() {","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"        File expectedFile \u003d new File(FILE_STORAGE_PATH);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedFile, storage.getTasksFile(), \"File object should match the expected file\");","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"    // https://stackoverflow.com/questions/29878237/java-how-to-clear-a-text-file-without-deleting-it","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"    private void clearFileContent(File file) throws IOException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"        try (FileWriter fw \u003d new FileWriter(file, false)) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"            // The FileWriter with \u0027false\u0027 in the second argument will clear the file contents","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"            throw new IOException(Messages.ERROR_READ_FILE, e);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"    // Ensure that when an empty file is read, the method behaves correctly by returning an empty list.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"    public void getAllLines_returnsEmptyListWhenFileIsEmpty() throws IOException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"        clearFileContent(storage.getTasksFile());","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"        List\u003cString\u003e lines \u003d storage.getAllLines();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"        // Checks that the lines variable is not null. ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"        // If there are no lines, the test will fail at this point, indicating that the method getAllLines() did not return a valid list.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"        // Without this, calling lines.isEmpty() would result in a NullPointerException","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(lines);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ameliadevs"},"content":"        // Checks whether the lines list is empty. ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ameliadevs"},"content":"        // The isEmpty() method of the List interface returns true if the list contains no elements.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ameliadevs"},"content":"        // If the list is not empty (i.e., it contains one or more lines), the assertion will fail, and the provided message will help diagnose the failure. ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ameliadevs"},"content":"        // The message indicates that the expectation was for the method to return an empty list when the file is empty.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(lines.isEmpty(), \"Should return an empty list for an empty file\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ameliadevs"},"content":"    public void writeToFile_writeTasksFromTasksList() throws StorageOperationException, IOException {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ameliadevs"},"content":"        TaskList taskList;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ameliadevs"},"content":"        TypicalTasks typicalTasks \u003d new TypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d typicalTasks.initDefaultTaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ameliadevs"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ameliadevs"},"content":"        List\u003cString\u003e lines \u003d storage.getAllLines();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(taskList.getSize(), lines.size(), ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ameliadevs"},"content":"            \"Task list should contain the same number of tasks in the tasks file\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ameliadevs"},"content":"    public void loadTasks_readTasksFromFile() throws IOException, FileContentException, ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ameliadevs"},"content":"        TaskListDecoderException, CommandException, StorageOperationException {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ameliadevs"},"content":"        TypicalTasks typicalTasks \u003d new TypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ameliadevs"},"content":"        TaskList sampleTaskList \u003d new TaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ameliadevs"},"content":"        sampleTaskList.addTask(typicalTasks.todo_doHomework);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ameliadevs"},"content":"        sampleTaskList.addTask(typicalTasks.deadline_submitReport);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ameliadevs"},"content":"        sampleTaskList.addTask(typicalTasks.event_projectLaunch);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ameliadevs"},"content":"        // Prepare the task file with sample data","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ameliadevs"},"content":"        storage.saveTasks(sampleTaskList);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ameliadevs"},"content":"        TaskList taskList \u003d storage.loadTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(taskList, \"Loaded tasks should not be null\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(sampleTaskList.getSize(), taskList.getSize(), ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ameliadevs"},"content":"            \"Task list should contain the same number of tasks in the tasks file\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":180}},{"path":"src/test/java/storage/TaskListDecoderTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import java.util.List;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import common.Messages;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"import exception.FileContentException;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import task.Event;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import task.Deadline;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"import task.Todo;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"public class TaskListDecoderTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    private List\u003cString\u003e encodedTasks;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    private TaskList decodedTasks;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    public void decodeTaskList_validTodo_decodesSuccessfully() throws Exception {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"        encodedTasks \u003d List.of(\"T | 0 | learn magic\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"        decodedTasks \u003d TaskListDecoder.decodeTaskList(encodedTasks);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(1, decodedTasks.getSize());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        Task task \u003d decodedTasks.getTask(0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(Todo.class, task);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"learn magic\", task.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    public void decodeTaskList_validDeadline_decodesSuccessfully() throws Exception {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        encodedTasks \u003d List.of(\"D | 0 | prepare for presentation | Oct 10 2024 1000\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        decodedTasks \u003d TaskListDecoder.decodeTaskList(encodedTasks);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(1, decodedTasks.getSize());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        Task task \u003d decodedTasks.getTask(0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(Deadline.class, task);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"prepare for presentation\", task.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(LocalDateTime.of(2024, 10, 10, 10, 0), ((Deadline) task).getDue());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    public void decodeTaskList_validEvent_decodesSuccessfully() throws Exception {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"        encodedTasks \u003d List.of(\"E | 0 | networking lunch | Sep 11 2024 1200 | Sep 11 2024 1400\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        decodedTasks \u003d TaskListDecoder.decodeTaskList(encodedTasks);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(1, decodedTasks.getSize());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        Task task \u003d decodedTasks.getTask(0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        assertInstanceOf(Event.class, task);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"networking lunch\", task.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(LocalDateTime.of(2024, 9, 11, 12, 0), ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"            ((Event) task).getStartDateTime());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(LocalDateTime.of(2024, 9, 11, 14, 0), ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"            ((Event) task).getEndDateTime());","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"    public void decodeTaskList_emptyTask_throwsException() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"        encodedTasks \u003d List.of(Constants.EMPTY_STRING);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"        FileContentException exception \u003d assertThrows(FileContentException.class, () -\u003e TaskListDecoder.decodeTaskList(encodedTasks));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s. %s.\", Messages.MESSAGE_EMPTY_LINE, Messages.MESSAGE_INVALID_TASKS_DATA), ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"            exception.getMessage()","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"    public void decodeTaskList_invalidFormat_throwsException() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"        List\u003cString\u003e encodedTasks \u003d List.of(\"T | 0\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"        Exception exception \u003d assertThrows(FileContentException.class, () -\u003e TaskListDecoder.decodeTaskList(encodedTasks));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"            String.format(\"%s. %s.\", Messages.MESSAGE_TASK_MISSING_COMPONENTS, Messages.MESSAGE_INVALID_TASKS_DATA),","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"            exception.getMessage()","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"    public void decodeTaskList_unknownTaskType_throwsException() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"        List\u003cString\u003e encodedTasks \u003d List.of(\"X | 0 | unknown task\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"        Exception exception \u003d assertThrows(FileContentException.class, () -\u003e TaskListDecoder.decodeTaskList(encodedTasks));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"            \"Error: Unknown task type.\",","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"            exception.getMessage()","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"    public void decodeTaskList_invalidCompletionStatus_throwsException() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"        List\u003cString\u003e encodedTasks \u003d List.of(\"T | 2 | invalid status task\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"        Exception exception \u003d assertThrows(FileContentException.class, () -\u003e TaskListDecoder.decodeTaskList(encodedTasks));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"            \"Task has invalid completion status\",","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"            exception.getMessage()","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"        );","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":112}},{"path":"src/test/java/storage/TaskListEncoderTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package storage;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import java.util.List;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import task.Task;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import util.TypicalTasks;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"public class TaskListEncoderTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    public void encodeTaskList_emptyTaskList_returnsEmptyList() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        List\u003cString\u003e encodedTaskList \u003d TaskListEncoder.encodeTaskList(taskList);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(encodedTaskList.isEmpty(), \"Expected an empty list for an empty task list\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    public void encodeTaskList_singleTask_returnsEncodedTask() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        TypicalTasks typicalTasks \u003d new TypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        Task task \u003d typicalTasks.todo_buyGroceries;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"        List\u003cString\u003e encodedTaskList \u003d TaskListEncoder.encodeTaskList(taskList);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(taskList.getSize(), encodedTaskList.size(), \"Expected a list with one encoded task\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"T | 0 | Buy groceries\", encodedTaskList.get(0), ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"            \"Expected the correct encoded string for the task\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    public void encodeTaskList_multipleTasks_returnsEncodedTasks() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        TypicalTasks typicalTasks \u003d new TypicalTasks();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"        Task task1 \u003d typicalTasks.deadline_submitReport;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"        Task task2 \u003d typicalTasks.deadline_resolveCustomerTicket;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"        List\u003cString\u003e result \u003d TaskListEncoder.encodeTaskList(taskList);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(taskList.getSize(), result.size(), \"Expected a list with two encoded tasks\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"D | 0 | Submit report | Apr 24 2021 1433\", result.get(0), ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"            \"Expected the correct encoded string for the first deadline task\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"D | 1 | Resolve customer ticket | Aug 04 2022 0915\", result.get(1), ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"            \"Expected the correct encoded string for the second deadline task\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":62}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    private LocalDateTime dueDateTime;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    private Deadline deadlineWithDue;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    private Deadline deadlineNotDone;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        dueDateTime \u003d LocalDateTime.of(2024, 10, 31, 23, 59);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        deadlineWithDue \u003d new Deadline(\"Review legal documents\", true, dueDateTime);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"        deadlineNotDone \u003d new Deadline(\"Submit job application\", dueDateTime);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    // Tests the constructor that accepts a completion status to ensure it initializes the object correctly.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_deadlineWithIsDone_correctInitialization() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"Review legal documents\", deadlineWithDue.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(deadlineWithDue.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(dueDateTime, deadlineWithDue.getDue());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"    // Tests the constructor that does not accept a completion status to ensure the default is set correctly.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_deadlineWithoutIsDone_correctInitialization() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\"Submit job application\", deadlineNotDone.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(deadlineNotDone.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(dueDateTime, deadlineNotDone.getDue());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"    // Verifies that the formatted due date is correct using the getFormattedDue() method.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    public void getFormattedDue_correctFormat() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"        String expectedFormattedDue \u003d DateTimeParser.formatDateTime(dueDateTime);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedFormattedDue, deadlineWithDue.getFormattedDue());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    // Checks the string representation of the Deadline object to ensure it formats correctly.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"    public void toString_deadlineWithDue_correctString() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"        String expectedString \u003d Constants.OPEN_SQUARE_BRACKET + Constants.D + Constants.CLOSE_SQUARE_BRACKET + ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"            Constants.OPEN_SQUARE_BRACKET + Constants.X + Constants.CLOSE_SQUARE_BRACKET + Constants.SPACE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"            \"Review legal documents\" + Constants.SPACE + Constants.OPEN_ROUND_BRACKET + Constants.BY + ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"            Constants.COLON + Constants.SPACE + deadlineWithDue.getFormattedDue() + Constants.CLOSE_ROUND_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedString, deadlineWithDue.toString());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    // Verifies that the description does not end with a space when formatted in the string representation.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    public void toString_descriptionEndsWithNoSpace() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline description without space\", dueDateTime);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"        assertNotEquals(deadline.toString(), \"Deadline description without space \");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"        // assertFalse(deadline.toString().contains(\"Deadline description without space \"));   // Check that it doesn\u0027t have trailing space","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"    // Tests the encoding of the Deadline object to ensure it returns the expected string format.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"    public void encodeTask_deadlineWithDue_correctFormat() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"        String expectedEncoded \u003d TaskType.DEADLINE + Constants.ENCODE_TASK_SEPARATOR + ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"            \"1 | Review legal documents\" + Constants.ENCODE_TASK_SEPARATOR + DateTimeParser.formatDateTime(dueDateTime);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedEncoded, deadlineWithDue.encodeTask());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"    // Tests the isOnDate method to confirm it correctly identifies when the task is due.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"    public void isOnDate_dueDate_returnsTrue() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"        LocalDate dateToCheck \u003d LocalDate.of(2024, 10, 31);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(deadlineWithDue.isOnDate(dateToCheck));","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"    // Tests the isOnDate method to confirm it returns false for a date that does not match the due date.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"    public void isOnDate_nonMatchingDate_returnsFalse() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"        LocalDate dateToCheck \u003d LocalDate.of(2023, 11, 1);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(deadlineWithDue.isOnDate(dateToCheck));","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"    public void isOnDate_dateBeforeDueDate_returnsFalse() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"        LocalDate dateToCheck \u003d LocalDate.of(2023, 10, 30);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(deadlineWithDue.isOnDate(dateToCheck));","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":99}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"public class EventTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    private Event eventWithDone;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    private Event eventNotDone;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    private final String AGM \u003d \"Annual General Meeting\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    private final String TL \u003d \"Team Lunch\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"        startDateTime \u003d LocalDateTime.of(2024, 12, 31, 14, 0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"        endDateTime \u003d LocalDateTime.of(2024, 12, 31, 16, 0);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"        eventWithDone \u003d new Event(AGM, true, startDateTime, endDateTime);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        eventNotDone \u003d new Event(TL, startDateTime, endDateTime);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    // Ensures that the constructor initializes the Event object with a completion status correctly.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_eventWithDone_correctInitialization() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(AGM, eventWithDone.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(eventWithDone.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(startDateTime, eventWithDone.getStartDateTime());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(endDateTime, eventWithDone.getEndDateTime());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    // Ensures that the default constructor (without setting completion status) is initialized correctly","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_eventNotDone_correctInitialization() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TL, eventNotDone.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(eventNotDone.getIsDone()); // Default isDone should be false","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(startDateTime, eventNotDone.getStartDateTime());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(endDateTime, eventNotDone.getEndDateTime());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"    // Verifies that the getFormattedStartDateTime() method returns the correct formatted start date and time","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"    public void getFormattedStartDateTime_correctFormat() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"        String expectedFormattedStart \u003d DateTimeParser.formatDateTime(startDateTime);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedFormattedStart, eventWithDone.getFormattedStartDateTime());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"    // Verifies that the getFormattedEndDateTime() method returns the correct formatted end date and time","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    public void getFormattedEndDateTime_correctFormat() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"        String expectedFormattedEnd \u003d DateTimeParser.formatDateTime(endDateTime);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedFormattedEnd, eventWithDone.getFormattedEndDateTime());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"    // Checks the string representation of the Event object to ensure it formats correctly.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"    public void toString_eventWithDone_correctFormat() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"        final String OPEN_ROUND_BRACKET \u003d Constants.OPEN_ROUND_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"        final String OPEN_SQUARE_BRACKET \u003d Constants.OPEN_SQUARE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"        final String CLOSE_SQUARE_BRACKET \u003d Constants.CLOSE_SQUARE_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"        String SPACE \u003d Constants.SPACE;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"        String expectedString \u003d OPEN_SQUARE_BRACKET + Constants.E + CLOSE_SQUARE_BRACKET +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"            OPEN_SQUARE_BRACKET + Constants.X + CLOSE_SQUARE_BRACKET + SPACE + ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"            AGM + SPACE + OPEN_ROUND_BRACKET + Constants.FROM + Constants.COLON + SPACE + ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"            eventWithDone.getFormattedStartDateTime() + SPACE + Constants.TO + Constants.COLON + SPACE +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"            eventWithDone.getFormattedEndDateTime() + Constants.CLOSE_ROUND_BRACKET;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedString, eventWithDone.toString());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"    // Tests the encoding of the Event object to ensure it returns the expected string format.","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"    public void encodeTask_eventWithDone_correctFormat() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"        String SEPARATOR \u003d Constants.ENCODE_TASK_SEPARATOR;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"        String expectedEncoded \u003d TaskType.EVENT + SEPARATOR + \"1\" + SEPARATOR + AGM + SEPARATOR +","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"            eventWithDone.getFormattedStartDateTime() + SEPARATOR + eventWithDone.getFormattedEndDateTime();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedEncoded, eventWithDone.encodeTask());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"    // Tests the isOnDate method to confirm that it correctly identifies when the event starts on a specific date","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"    public void isOnDate_eventStartsOnDate_returnsTrue() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"        LocalDate dateToCheck \u003d LocalDate.of(2024, 12, 31);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(eventWithDone.isOnDate(dateToCheck));","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"    // Tests the isOnDate method to confirm that it correctly identifies when the event ends on a specific date","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"    public void isOnDate_eventEndsOnDate_returnsTrue() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"        LocalDate dateToCheck \u003d LocalDate.of(2024, 12, 31);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(eventWithDone.isOnDate(dateToCheck));","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"    // Tests the isOnDate method to confirm that it returns false for a date that does not match either the start or end date","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"    public void isOnDate_dateNotMatching_returnsFalse() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"        LocalDate dateToCheck \u003d LocalDate.of(2024, 11, 1);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(eventWithDone.isOnDate(dateToCheck));","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"    // Verifies that the description does not end with a space when formatted in the string representation","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"    public void toString_descriptionEndsWithNoSpace() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"        Event event \u003d new Event(\"Event without space\", startDateTime, endDateTime);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"        assertNotEquals(event.toString(), \"Event without space \");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":119}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"import util.TypicalTasks;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"public class TaskListTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    private final TypicalTasks typicalTasks \u003d new TypicalTasks();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    private Todo todo_doHomework;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    private Todo todo_buyGroceries;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    private Todo todo_washDishes;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    private Deadline deadline_submitReport;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    private Deadline deadline_resolveCustomerTicket;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"    // private Deadline deadline_finalizeGuestList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    private Event event_projectLaunch;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    private Event event_birthday;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    // private Event event_anniversary;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    private TaskList emptyTaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    private TaskList defaultTaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList \u003d typicalTasks.initDefaultTaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        todo_doHomework \u003d typicalTasks.todo_doHomework;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        todo_buyGroceries \u003d typicalTasks.todo_buyGroceries;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        todo_washDishes \u003d typicalTasks.todo_washDishes;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        deadline_submitReport \u003d typicalTasks.deadline_submitReport;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"        deadline_resolveCustomerTicket \u003d typicalTasks.deadline_resolveCustomerTicket;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"        event_projectLaunch \u003d typicalTasks.event_projectLaunch;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"        event_birthday \u003d typicalTasks.event_birthday;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        emptyTaskList \u003d new TaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"    public void isEmpty_emptyTaskList_zeroTasks() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(0, emptyTaskList.getSize(), \"Empty task list should contain 0 tasks.\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"    public void addTask_success(Task task) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(task);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"        int numberOfTasksBeforeAddition \u003d defaultTaskList.getSize();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList.addTask(task);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        int numberOfTasksAfterAddition \u003d defaultTaskList.getSize();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(numberOfTasksBeforeAddition, numberOfTasksAfterAddition - 1, ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"            \"Task list should contain one more task after adding a new task\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"    public void addTask_nullTask_noChangeInSize() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"        int numberOfTasksBeforeAddition \u003d defaultTaskList.getSize();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList.addTask(task);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"        int numberOfTasksAfterAddition \u003d defaultTaskList.getSize();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(numberOfTasksBeforeAddition, numberOfTasksAfterAddition, ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"            \"Size should not change after adding a null task\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"    public void addTask_todo_success() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"        addTask_success(todo_buyGroceries);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"    public void addTask_deadline_success() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"        addTask_success(deadline_resolveCustomerTicket);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ameliadevs"},"content":"    public void addTask_event_success() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ameliadevs"},"content":"        addTask_success(event_birthday);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ameliadevs"},"content":"    public void removeTask_success(Task task) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(defaultTaskList);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(defaultTaskList.hasTask(task));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ameliadevs"},"content":"        int numberOfTasksBeforeRemoval \u003d defaultTaskList.getSize();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(defaultTaskList.removeTask(task), \"Task should be successfully removed\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ameliadevs"},"content":"        int numberOfTasksAfterRemoval \u003d defaultTaskList.getSize();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(numberOfTasksBeforeRemoval - 1, numberOfTasksAfterRemoval, ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ameliadevs"},"content":"            \"Task list should contain one less task after removing a task\");","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ameliadevs"},"content":"    public void removeTask_todo_success() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ameliadevs"},"content":"        removeTask_success(todo_buyGroceries);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ameliadevs"},"content":"    public void removeTask_deadline_success() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ameliadevs"},"content":"        removeTask_success(deadline_resolveCustomerTicket);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ameliadevs"},"content":"    public void removeTask_event_success() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ameliadevs"},"content":"        removeTask_success(event_birthday);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ameliadevs"},"content":"    public void removeTask_nonExistentTask_returnsFalse() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(defaultTaskList.removeTask(todo_washDishes), ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ameliadevs"},"content":"            \"Removing a non-existent task should return false.\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ameliadevs"},"content":"    public void markTask_success(Task task) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(task);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ameliadevs"},"content":"        if (task.getIsDone()) {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ameliadevs"},"content":"            assertFalse(defaultTaskList.markTask(task));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ameliadevs"},"content":"            assertTrue(defaultTaskList.markTask(task));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ameliadevs"},"content":"    public void markTask_todo_success() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(todo_doHomework.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ameliadevs"},"content":"        markTask_success(todo_doHomework);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(todo_buyGroceries.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ameliadevs"},"content":"        markTask_success(todo_buyGroceries);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ameliadevs"},"content":"    public void markTask_deadline_success() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(deadline_submitReport.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ameliadevs"},"content":"        markTask_success(deadline_submitReport);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(deadline_resolveCustomerTicket.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ameliadevs"},"content":"        markTask_success(deadline_resolveCustomerTicket);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ameliadevs"},"content":"    public void markTask_event_success() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(event_projectLaunch.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ameliadevs"},"content":"        markTask_success(event_projectLaunch);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ameliadevs"},"content":"        ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(event_birthday.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ameliadevs"},"content":"        markTask_success(event_birthday);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ameliadevs"},"content":"    public void unmarkTask_success(Task task) {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ameliadevs"},"content":"        assertNotNull(task);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ameliadevs"},"content":"        if (!task.getIsDone()) {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ameliadevs"},"content":"            assertFalse(defaultTaskList.unmarkTask(task));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ameliadevs"},"content":"        } else {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ameliadevs"},"content":"            assertTrue(defaultTaskList.unmarkTask(task));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ameliadevs"},"content":"        }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ameliadevs"},"content":"    public void unmarkTask_todo_success() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(todo_doHomework.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ameliadevs"},"content":"        unmarkTask_success(todo_doHomework);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(todo_buyGroceries.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ameliadevs"},"content":"        unmarkTask_success(todo_buyGroceries);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ameliadevs"},"content":"    public void unmarkTask_deadline_success() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(deadline_submitReport.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ameliadevs"},"content":"        unmarkTask_success(deadline_submitReport);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(deadline_resolveCustomerTicket.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ameliadevs"},"content":"        unmarkTask_success(deadline_resolveCustomerTicket);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ameliadevs"},"content":"    public void unmarkTask_event_success() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(event_projectLaunch.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ameliadevs"},"content":"        unmarkTask_success(event_projectLaunch);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(event_birthday.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ameliadevs"},"content":"        unmarkTask_success(event_birthday);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ameliadevs"},"content":"    public void getTaskWord_noTasks_returnsSingular() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(emptyTaskList.isEmpty(), \"Task list has no tasks\");","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\" tasks\", emptyTaskList.getTaskWord());","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ameliadevs"},"content":"    public void getTaskWord_singleTask_returnsSingular() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList \u003d new TaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList.addTask(todo_doHomework);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(defaultTaskList.getSize(), 1);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\" task\", defaultTaskList.getTaskWord());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ameliadevs"},"content":"    public void getTaskWord_multipleTasks_returnsPlural() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(defaultTaskList.getSize() \u003e 1, \"Task list has more than one task\");","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(\" tasks\", defaultTaskList.getTaskWord());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ameliadevs"},"content":"    public void getScheduledTasksOnDate_emptyList_returnsEmptyList() {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ameliadevs"},"content":"        LocalDate date \u003d LocalDate.of(2023, 10, 31);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ameliadevs"},"content":"        TaskList tasksOnDate \u003d defaultTaskList.getScheduledTasks(date);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(tasksOnDate.isEmpty());","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ameliadevs"},"content":"    public void getScheduledTasksOnDate_withTasks_returnsCorrectTasks() {","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ameliadevs"},"content":"        LocalDate date \u003d LocalDate.of(2024, 11, 9);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ameliadevs"},"content":"        TaskList tasksOnDate \u003d defaultTaskList.getScheduledTasks(date);","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(2, tasksOnDate.getSize());","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(tasksOnDate.getTaskList().contains(event_projectLaunch));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(tasksOnDate.getTaskList().contains(event_birthday));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(tasksOnDate.getTaskList().contains(deadline_submitReport));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(tasksOnDate.getTaskList().contains(todo_doHomework));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":233}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package task;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"import util.TypicalTasks;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"public class TodoTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    private Todo todoDone;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    private final String TODO_DONE_DESCRIPTION \u003d \"Do homework\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    private Todo todoNotDone;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"    private final String TODO_NOTDONE_DESCRIPTION \u003d \"Buy groceries\";","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"        TypicalTasks typicalTasks \u003d new TypicalTasks();","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"        todoDone \u003d typicalTasks.todo_doHomework;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        todoNotDone \u003d typicalTasks.todo_buyGroceries;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"    // Tests the constructor that accepts a completion status to ensure it initializes the object correctly","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_todoDone_correctInitialization() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TODO_DONE_DESCRIPTION, todoDone.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"        assertTrue(todoDone.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    // Tests the constructor that does not accept a completion status to ensure the default is set correctly","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"    public void constructor_todoNotDone_correctInitialization() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TODO_NOTDONE_DESCRIPTION, todoNotDone.getDescription());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(todoNotDone.getIsDone());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"    // Checks the string representation of the Todo object to ensure it formats correctly, including the task type and completion status","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"    public void toString_todoDone_correctFormat() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        String expectedString \u003d \"[T][X] \" + TODO_DONE_DESCRIPTION; // Assuming X represents done","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedString, todoDone.toString());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"    public void toString_todoNotDone_correctFormat() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"        String expectedString \u003d \"[T][ ] \" + TODO_NOTDONE_DESCRIPTION; // Assuming space represents not done","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedString, todoNotDone.toString());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"    // Tests the encoding of the Todo object to ensure it returns the expected string format","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"    public void encodeTask_todoDone_correctFormat() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"        String SEPARATOR \u003d Constants.ENCODE_TASK_SEPARATOR;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"        String expectedEncoded \u003d TaskType.TODO + SEPARATOR + \"1\" + SEPARATOR + TODO_DONE_DESCRIPTION; // Assuming |1| indicates done","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedEncoded, todoDone.encodeTask());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"    public void encodeTask_todoNotDone_correctFormat() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"        String SEPARATOR \u003d Constants.ENCODE_TASK_SEPARATOR;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"        String expectedEncoded \u003d TaskType.TODO + SEPARATOR + \"0\" + SEPARATOR + TODO_NOTDONE_DESCRIPTION; // Assuming |0| indicates not done","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(expectedEncoded, todoNotDone.encodeTask());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"    // Verifies that the isOnDate method always returns false for Todo tasks, as they do not have a specific date","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"    public void isOnDate_todoDone_returnsFalse() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"        LocalDate date \u003d LocalDate.of(2023, 10, 31);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(todoDone.isOnDate(date)); // Should always return false","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(todoNotDone.isOnDate(date)); // Should always return false","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ameliadevs"},"content":"    public void isOnDate_todoNotDone_returnsFalse() {","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ameliadevs"},"content":"        LocalDate date \u003d LocalDate.of(2023, 10, 31);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ameliadevs"},"content":"        assertFalse(todoNotDone.isOnDate(date)); // Should always return false","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":83}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package ui;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import common.Constants;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"public class UiTest {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"    private final String FOUR_SPACES \u003d \"    \";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"    private final String FIVE_SPACES \u003d \"     \";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"    private final String TWO_SPACES \u003d \"  \";","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"    public void formatSpace() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(FOUR_SPACES, ui.formatSpace(Constants.FOUR));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TWO_SPACES, ui.formatSpace(Constants.TWO));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(FIVE_SPACES, ui.formatSpace(Constants.FIVE));","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"    public void getSpace() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(FOUR_SPACES, ui.getSpace(true, false));        // Horizontal line","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(TWO_SPACES, ui.getSpace(false, true));         // Task","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(FIVE_SPACES, ui.getSpace(false, false));       // General space","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"        String NO_SPACE \u003d Constants.EMPTY_STRING;","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(NO_SPACE, ui.getSpace(true, true));","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    @Test","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public void getLine() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"        assertEquals(FOUR_SPACES + LINE, ui.getLine());","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":37}},{"path":"src/test/java/util/TypicalTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"package util;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"import task.Todo;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"import task.Deadline;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"import task.Event;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"import task.TaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"// Solution below inspired by https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/util/TypicalPersons.java","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"public class TypicalTasks {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"    public final Todo todo_doHomework \u003d new Todo(\"Do homework\", true);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"    public final Todo todo_buyGroceries \u003d new Todo(\"Buy groceries\", false);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"    public final Todo todo_washDishes \u003d new Todo(\"Wash dishes\", true);","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"    public final Deadline deadline_submitReport \u003d new Deadline(\"Submit report\", false, LocalDateTime.of(2021, 4, 24, 14, 33));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"    public final Deadline deadline_resolveCustomerTicket \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"        new Deadline(\"Resolve customer ticket\", true, LocalDateTime.of(2022, 8, 4, 9, 15));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"// --Commented out by Inspection START (11/11/24, 6:35 pm):","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"//    public Deadline deadline_finalizeGuestList \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"//        new Deadline(\"Finalize guest list\", false, LocalDateTime.of(2021, 6, 24, 14, 33));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"// --Commented out by Inspection STOP (11/11/24, 6:35 pm)","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"    public final Event event_projectLaunch \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"        new Event(\"Project launch\", true, LocalDateTime.of(2024, 11, 9, 14, 30), LocalDateTime.of(2026, 12, 25, 9, 0));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"    public final Event event_birthday \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"        new Event(\"Birthday\", false, LocalDateTime.of(2024, 11, 9, 18, 45), LocalDateTime.of(2024, 11, 9, 22, 45));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"    public final Event event_anniversary \u003d","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"        new Event(\"Anniversary\", true, LocalDateTime.of(2025, 1, 1, 0, 0), LocalDateTime.of(2025, 1, 1, 23, 59));","lastModifiedDate":"2024-11-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"    ","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"    public TaskList initDefaultTaskList() {","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"        TaskList defaultTaskList \u003d new TaskList();","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList.addTask(todo_doHomework);           // Index 0","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList.addTask(todo_buyGroceries);         // Index 1","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"        // defaultTaskList.addTask(todo_washDishes);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList.addTask(deadline_submitReport);     // Index 2","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList.addTask(deadline_resolveCustomerTicket);        // Index 3","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"        // defaultTaskList.addTask(deadline_finalizeGuestList);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList.addTask(event_projectLaunch);       // Index 4","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList.addTask(event_birthday);            // Index 5","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"        defaultTaskList.addTask(event_anniversary);","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"        return defaultTaskList;","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"    }","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"}","lastModifiedDate":"2024-11-10","isFullCredit":false}],"authorContributionMap":{"ameliadevs":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ameliadevs"},"content":"todo","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ameliadevs"},"content":"todo learn a new language","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ameliadevs"},"content":"unmark 1","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ameliadevs"},"content":"mark 1","lastModifiedDate":"2024-09-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ameliadevs"},"content":"mark 1","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ameliadevs"},"content":"deadline","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ameliadevs"},"content":"deadline return pen","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ameliadevs"},"content":"deadline /by 2024-01-01","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ameliadevs"},"content":"deadline /by","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ameliadevs"},"content":"deadline return pen /by 1 Jan 2024","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ameliadevs"},"content":"deadline return pen /by 2024-01-01","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"deadline return pen with time /by 2024-01-01 1800","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ameliadevs"},"content":"mark 6","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ameliadevs"},"content":"unmark 6","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ameliadevs"},"content":"unmark 6","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ameliadevs"},"content":"event","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"event orientation","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"event orientation /from","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"event orientation /from Jan 1st","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ameliadevs"},"content":"event orientation /from 05-03-2024","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"event orientation /from 2024-03-05","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"event orientation /from Jan 1st /to","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"event orientation /from 2024-03-05 /to","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"event orientation /to","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ameliadevs"},"content":"event orientation /to 2nd","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ameliadevs"},"content":"event orientation /from Jan 1st /to 2nd","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ameliadevs"},"content":"event faculty orientation /from 2024-03-05 /to 2024-03-07","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ameliadevs"},"content":"event faculty orientation /from 2024-03-10 1000 /to 2024-03-12 2000","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ameliadevs"},"content":"fd","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ameliadevs"},"content":"fd code review","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ameliadevs"},"content":"fd code review /duration","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ameliadevs"},"content":"fd code review /duration invalidDuration","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ameliadevs"},"content":"fd code review /duration 2","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ameliadevs"},"content":"archive 6","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ameliadevs"},"content":"delete 6","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ameliadevs"},"content":"find","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ameliadevs"},"content":"find asdf","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ameliadevs"},"content":"find book","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ameliadevs"},"content":"find pen","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ameliadevs"},"content":"find orientation","lastModifiedDate":"2024-11-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ameliadevs"},"content":"event daily standup /from 2024-07-06 /to 2024-07-06","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ameliadevs"},"content":"deadline report submission /by 2024-07-06","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ameliadevs"},"content":"show","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ameliadevs"},"content":"show 2024-123-123","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ameliadevs"},"content":"show 2024-03-11","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ameliadevs"},"content":"show 2024-03-12","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ameliadevs"},"content":"show 2024-03-07","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ameliadevs"},"content":"mark abc","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ameliadevs"},"content":"mark 123456789","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ameliadevs"},"content":"unmark abc","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ameliadevs"},"content":"unmark 123456789","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ameliadevs"},"content":"delete abc","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ameliadevs"},"content":"delete 123456789","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ameliadevs"},"content":"delete 10","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ameliadevs"},"content":"delete 9","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ameliadevs"},"content":"delete 8","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ameliadevs"},"content":"delete 7","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ameliadevs"},"content":"delete 6","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ameliadevs"},"content":"list","lastModifiedDate":"2024-11-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ameliadevs"},"content":"archive all","lastModifiedDate":"2024-11-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ameliadevs"},"content":"bye","lastModifiedDate":"2024-11-01","isFullCredit":false}],"authorContributionMap":{"ameliadevs":76}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ameliadevs"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ameliadevs"},"content":"# if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ameliadevs"},"content":"# Set the storage file path environment variable","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ameliadevs"},"content":"export STORAGE_FILE_PATH\u003d\"../src/main/java/data/tasks.txt\"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ameliadevs"},"content":"java -cp ../bin -Dstorage.file\u003d\"$STORAGE_FILE_PATH\" Javaro \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ameliadevs"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ameliadevs"},"content":"# java -cp ../bin Javaro \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ameliadevs"},"content":"# java -classpath ../bin Javaro \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ameliadevs":9,"-":36}}]
